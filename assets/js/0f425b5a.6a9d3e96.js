"use strict";(self.webpackChunkkurokuro=self.webpackChunkkurokuro||[]).push([[98341],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var o=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=o.createContext({}),d=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=d(e.components);return o.createElement(p.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=d(n),c=i,f=m["".concat(p,".").concat(c)]||m[c]||u[c]||a;return n?o.createElement(f,r(r({ref:t},s),{},{components:n})):o.createElement(f,r({ref:t},s))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,r=new Array(a);r[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[m]="string"==typeof e?e:i,r[1]=l;for(var d=2;d<a;d++)r[d]=n[d];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},70230:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var o=n(87462),i=(n(67294),n(3905));const a={title:"Separating development and production environments for your sample membership site",description:"This tutorial explains how to separate the development from the production environment. Doing so allows you to verify any updates or modifications before they are published to the production site."},r=void 0,l={unversionedId:"tutorials/separating-development-and-production-environments-for-your-sample-membership-site",id:"tutorials/separating-development-and-production-environments-for-your-sample-membership-site",title:"Separating development and production environments for your sample membership site",description:"This tutorial explains how to separate the development from the production environment. Doing so allows you to verify any updates or modifications before they are published to the production site.",source:"@site/docs/tutorials/separating-development-and-production-environments-for-your-sample-membership-site.md",sourceDirName:"tutorials",slug:"/tutorials/separating-development-and-production-environments-for-your-sample-membership-site",permalink:"/docs/tutorials/separating-development-and-production-environments-for-your-sample-membership-site",draft:!1,editUrl:"https://github.com/diverta/kuroco-documents/tree/main/packages/create-docusaurus/templates/shared/docs/tutorials/separating-development-and-production-environments-for-your-sample-membership-site.md",tags:[],version:"current",frontMatter:{title:"Separating development and production environments for your sample membership site",description:"This tutorial explains how to separate the development from the production environment. Doing so allows you to verify any updates or modifications before they are published to the production site."},sidebar:"documentationSidebar",previous:{title:"Building a membership website on Kuroco from the sample site template",permalink:"/docs/tutorials/building-a-membership-website-on-kuroco-from-the-sample-site-template"},next:{title:"Explanation of Sample Membership Site",permalink:"/docs/tutorials/explanation-of-kuroco-sample-site"}},p={},d=[{value:"Overview",id:"overview",level:2},{value:"What you&#39;ll learn",id:"what-youll-learn",level:2},{value:"Before you start",id:"before-you-start",level:2},{value:"Custom domain configuration",id:"custom-domain-configuration",level:2},{value:"GitHub settings",id:"github-settings",level:2},{value:"<code>.env</code> file verification and modification",id:"env-file-verification-and-modification",level:2},{value:"npm script verification",id:"npm-script-verification",level:2},{value:"Modifications to the GitHub Actions build file",id:"modifications-to-the-github-actions-build-file",level:2},{value:"Create build definitions for <code>develop</code> and <code>main</code>",id:"create-build-definitions-for-develop-and-main",level:3},{value:"Set build and deploy locations for each environment",id:"set-build-and-deploy-locations-for-each-environment",level:3},{value:"Update build file events",id:"update-build-file-events",level:3},{value:"Create <code>kuroco_front.json</code> for the development environment",id:"create-kuroco_frontjson-for-the-development-environment",level:3},{value:"Activity verification",id:"activity-verification",level:2},{value:"Confirmation of file configuration",id:"confirmation-of-file-configuration",level:3},{value:"Confirmation of build",id:"confirmation-of-build",level:3}],s={toc:d},m="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"This tutorial explains how to separate the development environment from the production environment. Doing so allows you to verify any updates or modifications before they are published to the production site."),(0,i.kt)("h2",{id:"what-youll-learn"},"What you'll learn"),(0,i.kt)("p",null,"The following process will be used to separate the development and production environments."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#custom-domain-configuration"},"Custom domain configuration")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#github-settings"},"GitHub settings")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#modifications-to-the-github-actions-build-file"},"Modifications to the GitHub Actions build file")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#npm-script-verification"},"npm script verification")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#env-file-verification-and-modification"},(0,i.kt)("inlineCode",{parentName:"a"},".env")," file verification and modification")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#activity-verification"},"Activity verification"))),(0,i.kt)("h2",{id:"before-you-start"},"Before you start"),(0,i.kt)("p",null,"To begin this tutorial, you should have built a site by copying the open-source ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/diverta/front_nuxt_auth"},"sample membership site")," (NuxtAuth-based KurocoFront template site). If you have not done so, see ",(0,i.kt)("a",{parentName:"p",href:"/docs/tutorials/building-a-membership-website-on-kuroco-from-the-sample-site-template/"},"Tutorial: Building a membership website on Kuroco from the sample site template"),"."),(0,i.kt)("p",null,"For this tutorial, we will create two types of environments:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Development"),(0,i.kt)("li",{parentName:"ul"},"Production")),(0,i.kt)("p",null,"You will be verifying and publishing your code step by step from the development to the production environment."),(0,i.kt)("p",null,"We will create a branch on GitHub for each environment, and the relevant GitHub Actions will be executed each time the branch is updated.\nWe will also set up a flow that automatically updates the front-end of the corresponding environment."),(0,i.kt)("h2",{id:"custom-domain-configuration"},"Custom domain configuration"),(0,i.kt)("p",null,"Refer to ",(0,i.kt)("a",{parentName:"p",href:"/docs/tutorials/using-a-custom-domain-name-on-kurocofront/"},"Tutorial: Using your own custom domain name on KurocoFront")," on how to set up your domain."),(0,i.kt)("p",null,"Also, modify the ",(0,i.kt)("inlineCode",{parentName:"p"},"front-end domain")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"API domain")," so that they form a subdomain relationship (i.e., matching domains or first-party cookies).\nDue to third-party cookie restrictions, the sample membership site may not be able to store cookies using the cookie login method for certain browser/usage environments."),(0,i.kt)("p",null,"See: ",(0,i.kt)("a",{parentName:"p",href:"/docs/tutorials/how-to-use-swagger-ui/#display-topic-data-with-security-cookie"},"Tutorial: Display topic data with Security: Cookie")),(0,i.kt)("h2",{id:"github-settings"},"GitHub settings"),(0,i.kt)("p",null,"For this tutorial, you need to split the GitHub repository into two branches as follows."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Item"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Branch"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"Production environment"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"main"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"Development environment"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"develop"))))),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"For more on branch splitting, refer to ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/desktop/contributing-and-collaborating-using-github-desktop/making-changes-in-a-branch/managing-branches"},"GitHub Docs: Managing branches"),".  ")),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"We recommend protecting your main branch to prevent releases to unexpected production environments. For more information on this topic, see ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/managing-a-branch-protection-rule"},"GitHub Docs: Managing a branch protection rule"),".")),(0,i.kt)("h2",{id:"env-file-verification-and-modification"},(0,i.kt)("inlineCode",{parentName:"h2"},".env")," file verification and modification"),(0,i.kt)("p",null,"First let's verify and update the current env file.  "),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"./env.${environment}.js")," files for both development and production environments already exist:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"env.development.js")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"env.production.js"))),(0,i.kt)("p",null,"Modify these files for each Kuroco environment you have created.\nIn this tutorial, we are modifying them as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:"[env.production.js]","[env.production.js]":!0},"module.exports = {\n    META_TITLE: 'Nuxt Auth',\n    ROBOTS: 'index',\n    BASE_URL: 'https://[Original-domain]'\n};\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:"[env.development.js]","[env.development.js]":!0},"module.exports = {\n    META_TITLE: '[Dev] Nuxt Auth',\n    ROBOTS: 'noindex',\n    BASE_URL: 'https://[Original-domain]'\n};\n")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"The original API domain should match the one you set up in ",(0,i.kt)("a",{parentName:"p",href:"#custom-domain-configuration"},"Custom domain configuration"),".")),(0,i.kt)("p",null,"These modifications lead to the following dynamic changes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Production environment META_TITLE: Nuxt Auth"),(0,i.kt)("li",{parentName:"ul"},"Development environment META_TITLE: ","[Dev]"," Nuxt Auth")),(0,i.kt)("h2",{id:"npm-script-verification"},"npm script verification"),(0,i.kt)("p",null,"The next step is to verify the npm script, a simple command using Node.js.",(0,i.kt)("br",{parentName:"p"}),"\n","In NuxtAuth, the contents are pre-defined in ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json"),"."),(0,i.kt)("p",null,"An excerpt from ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json")," shows the configuration below."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"[package.json]","[package.json]":!0},'{\n  ...,\n  "scripts": {\n    ...\n    "build": "cross-env NODE_ENV=development nuxt build",\n    "generate": "cross-env NODE_ENV=development nuxt generate",\n    "build-prod": "cross-env NODE_ENV=production nuxt build",\n    "generate-prod": "cross-env NODE_ENV=production nuxt generate",\n    ...\n  },\n  ...\n}\n')),(0,i.kt)("p",null,"Currently, ",(0,i.kt)("inlineCode",{parentName:"p"},"build")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"build-prod")," have different values of ",(0,i.kt)("inlineCode",{parentName:"p"},"NODE_ENV=..."),":"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Command"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Purpose"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"build"),(0,i.kt)("td",{parentName:"tr",align:"left"},"cross-env NODE_ENV=development nuxt build"),(0,i.kt)("td",{parentName:"tr",align:"left"},"build command for developmen")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"generate"),(0,i.kt)("td",{parentName:"tr",align:"left"},"cross-env NODE_ENV=development nuxt generate"),(0,i.kt)("td",{parentName:"tr",align:"left"},"generate command for development")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"build-prod"),(0,i.kt)("td",{parentName:"tr",align:"left"},"cross-env NODE_ENV=production nuxt build"),(0,i.kt)("td",{parentName:"tr",align:"left"},"build command for production")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"generate-prod"),(0,i.kt)("td",{parentName:"tr",align:"left"},"cross-env NODE_ENV=production nuxt generate"),(0,i.kt)("td",{parentName:"tr",align:"left"},"genereta command for production")))),(0,i.kt)("p",null,"This value affects ",(0,i.kt)("inlineCode",{parentName:"p"},"nuxt.config.js"),", the configuration file for the build."),(0,i.kt)("p",null,"It should contain the following code:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const environment = process.env.NODE_ENV; // <- (*1)\nconst envSettings = require(`./env.${environment}.js`); \n\nexport default {\n    env: envSettings,\n    \n    ...\n\n    head: {\n        htmlAttrs: {\n            lang: 'en'\n        },\n        titleTemplate: '%s - ',\n        title: envSettings.META_TITLE,  // <- (*2)\n...\n")),(0,i.kt)("p",null,"(","*","1) specifies the value of ",(0,i.kt)("inlineCode",{parentName:"p"},"NODE_ENV=... "),", which changes dynamically depending on the npm script."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"For ",(0,i.kt)("inlineCode",{parentName:"li"},"build"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"require('./env.develop.js')")),(0,i.kt)("li",{parentName:"ul"},"For ",(0,i.kt)("inlineCode",{parentName:"li"},"build-prod"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"require('./env.production.js')"))),(0,i.kt)("p",null,"In (","*","2), the ",(0,i.kt)("inlineCode",{parentName:"p"},"META_TITLE")," values are defined in the respective ",(0,i.kt)("inlineCode",{parentName:"p"},"env.${environment}.js")," files."),(0,i.kt)("h2",{id:"modifications-to-the-github-actions-build-file"},"Modifications to the GitHub Actions build file"),(0,i.kt)("p",null,"Modify the existing ",(0,i.kt)("inlineCode",{parentName:"p"},"/.github/workflow/build.yml")," file as needed on the ",(0,i.kt)("inlineCode",{parentName:"p"},"develop")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"main")," branches, respectively.",(0,i.kt)("br",{parentName:"p"}),"\n","Make the following changes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#create-build-definitions-for-develop-and-main"},"Create build definitions for ",(0,i.kt)("inlineCode",{parentName:"a"},"develop")," and ",(0,i.kt)("inlineCode",{parentName:"a"},"main"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#update-build-file-events"},"Update build file events")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#set-build-and-deploy-locations-for-each-environment"},"Set build and deploy locations for each environment")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#create-kuroco_frontjson-for-the-development-environment"},"Create ",(0,i.kt)("inlineCode",{parentName:"a"},"kuroco_front.json")," for the development environment"))),(0,i.kt)("h3",{id:"create-build-definitions-for-develop-and-main"},"Create build definitions for ",(0,i.kt)("inlineCode",{parentName:"h3"},"develop")," and ",(0,i.kt)("inlineCode",{parentName:"h3"},"main")),(0,i.kt)("p",null,"Make two build files, one for the production environment and one for the development environment:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"For production: ",(0,i.kt)("inlineCode",{parentName:"li"},".github/workflows/build.yml"),"."),(0,i.kt)("li",{parentName:"ul"},"For development: ",(0,i.kt)("inlineCode",{parentName:"li"},".github/workflows/develop.yml"),".")),(0,i.kt)("p",null,"Since ",(0,i.kt)("inlineCode",{parentName:"p"},".github/workflows/build.yml")," already exists, you can simply copy it. However, ",(0,i.kt)("inlineCode",{parentName:"p"},".github/workflows/develop.yml")," needs to be created from scratch."),(0,i.kt)("h3",{id:"set-build-and-deploy-locations-for-each-environment"},"Set build and deploy locations for each environment"),(0,i.kt)("p",null,"Modify the build behavior to fit each environment."),(0,i.kt)("p",null,"In this tutorial, we will modify the following npm scripts:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"For production: ",(0,i.kt)("inlineCode",{parentName:"li"},"build-prod")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"generate-prod")),(0,i.kt)("li",{parentName:"ul"},"For development: ",(0,i.kt)("inlineCode",{parentName:"li"},"build")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"generate"))),(0,i.kt)("p",null,"First, in ",(0,i.kt)("inlineCode",{parentName:"p"},".github/workflows/build.yml")," for the production environment, modify ",(0,i.kt)("inlineCode",{parentName:"p"},"run: npm run build")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"run: npm run generate")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"run: npm run build-prod")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"run: npm run generate-prod"),".(There are two places each.)"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/5e31f2925a470e9f0a7e011abf2446a9.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/5e31f2925a470e9f0a7e011abf2446a9.png",alt:"Image from Gyazo"})),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-YAML",metastring:"[.github/workflows/build.yml]","[.github/workflows/build.yml]":!0},"       - name: Install dependencies\n         run: npm ci\n       - name: Build\n         run: npm run build-prod\n       - name: Generate\n         run: npm run generate-prod\n       - name: Archive Production Artifact\n         uses: actions/upload-artifact@v2\n         with:\n")),(0,i.kt)("p",null,"Next, modify ",(0,i.kt)("inlineCode",{parentName:"p"},".github/workflows/develop.yml")," for the development environment.\nClick ","[KurocoFront]"," -> ","[GitHub]"," and copy the content in the ",(0,i.kt)("inlineCode",{parentName:"p"},"GitHub Actions workflow file staging site")," text area.  "),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/acea1283c88c0041c1d6fa15738b04b8.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/acea1283c88c0041c1d6fa15738b04b8.png",alt:"Image from Gyazo"})),(0,i.kt)("p",null,"Overwrite the ",(0,i.kt)("inlineCode",{parentName:"p"},".github/workflows/develop.yml")," file with the copied contents."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/c626fb20f8ccfa15affd5076a9ae1ea5.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/c626fb20f8ccfa15affd5076a9ae1ea5.png",alt:"Image from Gyazo"})),(0,i.kt)("h3",{id:"update-build-file-events"},"Update build file events"),(0,i.kt)("p",null,"Next, modify each build file such that events are triggered only by updates to the following branches:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"For production: ",(0,i.kt)("inlineCode",{parentName:"li"},"main")),(0,i.kt)("li",{parentName:"ul"},"For development: ",(0,i.kt)("inlineCode",{parentName:"li"},"develop"))),(0,i.kt)("p",null,"Paste the code below into ",(0,i.kt)("inlineCode",{parentName:"p"},".github/workflows/develop.yml"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-YAML",metastring:"[.github/workflows/develop.yml]","[.github/workflows/develop.yml]":!0}," on:\n   push:\n     branches:\n      - develop\n   workflow_dispatch:\n    branches: [ develop ]\n jobs:\n   build:\n     name: Build\n")),(0,i.kt)("h3",{id:"create-kuroco_frontjson-for-the-development-environment"},"Create ",(0,i.kt)("inlineCode",{parentName:"h3"},"kuroco_front.json")," for the development environment"),(0,i.kt)("p",null,"Copy the ",(0,i.kt)("inlineCode",{parentName:"p"},"kuroco_front.json")," file in the ",(0,i.kt)("inlineCode",{parentName:"p"},"/src/static")," directory to create ",(0,i.kt)("inlineCode",{parentName:"p"},"kuroco_front_dev.json"),"."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/26518d6b65f37f5cf5c4be2b925cd165.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/26518d6b65f37f5cf5c4be2b925cd165.png",alt:"Image from Gyazo"})),(0,i.kt)("p",null,"Also, you need to apply ",(0,i.kt)("inlineCode",{parentName:"p"},"kuroco_front_dev.json")," only to ",(0,i.kt)("inlineCode",{parentName:"p"},"develop.yml"),". Insert the code below into ",(0,i.kt)("inlineCode",{parentName:"p"},"develop.yml"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-diff"},"       - name: Checkout Repo\n         uses: actions/checkout@v2\n         with:\n           ref: ${{ steps.get_branch.outputs.branch }}\n+      - name: Copy kuroco_front.json\n+        run:  cp src/static/kuroco_front_dev.json src/static/kuroco_front.json \n       - name: Use Node.js\n         uses: actions/setup-node@v2\n         with:\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-diff"},"     steps:\n       - name: Checkout Repo\n         uses: actions/checkout@v2\n+      - name: Copy kuroco_front.json\n+        run:  cp src/static/kuroco_front_dev.json src/static/kuroco_front.json \n       - name: Use Node.js\n         uses: actions/setup-node@v2\n         with:\n")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"For more information, see ",(0,i.kt)("a",{parentName:"p",href:"/docs/faq/what-is-kuroco_front_json/"},"FAQ: What is ",(0,i.kt)("inlineCode",{parentName:"a"},"kuroco_front.json?")),".")),(0,i.kt)("h2",{id:"activity-verification"},"Activity verification"),(0,i.kt)("h3",{id:"confirmation-of-file-configuration"},"Confirmation of file configuration"),(0,i.kt)("p",null,"Let us verify the contents we have set so far.",(0,i.kt)("br",{parentName:"p"}),"\n","The YAML file and kuroco_front.json are separated for the production environment and the development environment, so the main branch and the development branch both have the following file structure."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},".github\\workflows\n  - build.yml\n  - develop.yml\nsrc\n  - static\n    - kuroco_front_dev.json\n    - kuroco_front.json\n")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/ec0190b5c59a493694d2abc0c7a19db6.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/ec0190b5c59a493694d2abc0c7a19db6.png",alt:"Image from Gyazo"})),(0,i.kt)("h3",{id:"confirmation-of-build"},"Confirmation of build"),(0,i.kt)("p",null,"Once the push for each environment is completed, access the respective repository on GitHub and click on ","[Actions]","."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/247b06ff22179debabff76c01f2cb753.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/247b06ff22179debabff76c01f2cb753.png",alt:"Image from Gyazo"})),(0,i.kt)("p",null,"You should see a list of active or completed Actions."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/71c92f92e53e12f2a049c11055a57f7a.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/71c92f92e53e12f2a049c11055a57f7a.png",alt:"Image from Gyazo"})),(0,i.kt)("p",null,"When the build is completed, verify that the META_TITLE of the development environment reads ",(0,i.kt)("inlineCode",{parentName:"p"},"**[Dev] Nuxt Auth**"),"."))}u.isMDXComponent=!0}}]);