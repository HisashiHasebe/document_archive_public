"use strict";(self.webpackChunkkurokuro=self.webpackChunkkurokuro||[]).push([[15693],{3905:(t,e,n)=>{n.d(e,{Zo:()=>d,kt:()=>g});var a=n(67294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function r(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function m(t,e){if(null==t)return{};var n,a,o=function(t,e){if(null==t)return{};var n,a,o={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var s=a.createContext({}),l=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):r(r({},e),t)),n},d=function(t){var e=l(t.components);return a.createElement(s.Provider,{value:e},t.children)},p="mdxType",c={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var n=t.components,o=t.mdxType,i=t.originalType,s=t.parentName,d=m(t,["components","mdxType","originalType","parentName"]),p=l(n),u=o,g=p["".concat(s,".").concat(u)]||p[u]||c[u]||i;return n?a.createElement(g,r(r({ref:e},d),{},{components:n})):a.createElement(g,r({ref:e},d))}));function g(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var i=n.length,r=new Array(i);r[0]=u;var m={};for(var s in e)hasOwnProperty.call(e,s)&&(m[s]=e[s]);m.originalType=t,m[p]="string"==typeof t?t:o,r[1]=m;for(var l=2;l<i;l++)r[l]=n[l];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},89849:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>m,toc:()=>l});var a=n(87462),o=(n(67294),n(3905));const i={title:"Add comments function to content with Kuroco and Nuxt.js",description:"This tutorial explains how to implement the Activity:Comment function in the Nuxt.js project using Kuroco."},r=void 0,m={unversionedId:"tutorials/integrate-activity-comment",id:"tutorials/integrate-activity-comment",title:"Add comments function to content with Kuroco and Nuxt.js",description:"This tutorial explains how to implement the Activity:Comment function in the Nuxt.js project using Kuroco.",source:"@site/docs/tutorials/integrate-activity-comment.md",sourceDirName:"tutorials",slug:"/tutorials/integrate-activity-comment",permalink:"/docs/tutorials/integrate-activity-comment",draft:!1,editUrl:"https://github.com/diverta/kuroco-documents/tree/main/packages/create-docusaurus/templates/shared/docs/tutorials/integrate-activity-comment.md",tags:[],version:"current",frontMatter:{title:"Add comments function to content with Kuroco and Nuxt.js",description:"This tutorial explains how to implement the Activity:Comment function in the Nuxt.js project using Kuroco."},sidebar:"documentationSidebar",previous:{title:"Creating a Subscription Form for Subscribers using Kuroco and Nuxt.js",permalink:"/docs/tutorials/implement-a-magazine-subscription-unsubscription-form"},next:{title:"Embedding Google Maps on Your Website",permalink:"/docs/tutorials/how-to-setup-google-maps"}},s={},l=[{value:"Prerequisite",id:"prerequisite",level:2},{value:"Nuxt.js project with Kuroco",id:"nuxtjs-project-with-kuroco",level:3},{value:"Preparation",id:"preparation",level:2},{value:"Creating APIs",id:"creating-apis",level:3},{value:"CORS settings",id:"cors-settings",level:3},{value:"Check the comment function without login",id:"check-the-comment-function-without-login",level:2},{value:"Configure activity settings",id:"configure-activity-settings",level:3},{value:"Create endpoint",id:"create-endpoint",level:3},{value:"Create <code>newsdetail</code> endpoint",id:"create-newsdetail-endpoint",level:4},{value:"Create <code>comments</code> endpoint",id:"create-comments-endpoint",level:4},{value:"Create <code>comment</code> endpoint",id:"create-comment-endpoint",level:4},{value:"Create <code>comment_delete</code> endpoint",id:"create-comment_delete-endpoint",level:4},{value:"Set up front-end",id:"set-up-front-end",level:3},{value:"Add news detail page with comment function",id:"add-news-detail-page-with-comment-function",level:4},{value:"Make comments deletable (using delkey)",id:"make-comments-deletable-using-delkey",level:3},{value:"Make comments require login",id:"make-comments-require-login",level:2},{value:"Update activity settings",id:"update-activity-settings",level:3},{value:"Modify front-end",id:"modify-front-end",level:3}],d={toc:l},p="wrapper";function c(t){let{components:e,...n}=t;return(0,o.kt)(p,(0,a.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This tutorial explains how to implement the Activity: Comment function in the Nuxt.js project using Kuroco.",(0,o.kt)("br",{parentName:"p"}),"\n","This time, as an example, we will implement the process in the following flow."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create APIs and endpoints"),(0,o.kt)("li",{parentName:"ol"},"Add a comment function to the news detail screen")),(0,o.kt)("h2",{id:"prerequisite"},"Prerequisite"),(0,o.kt)("h3",{id:"nuxtjs-project-with-kuroco"},"Nuxt.js project with Kuroco"),(0,o.kt)("p",null,"This tutorial requires the followings:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A Nuxt.js project with Kuroco"),(0,o.kt)("li",{parentName:"ul"},"Some topics that can be displayed on the front-end"),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"profile")," endpoint should be valid.\nIf you haven't built a Nuxt.js project yet, please refer to ",(0,o.kt)("a",{parentName:"li",href:"/docs/tutorials/integrate-kuroco-with-nuxt/"},"Tutorial -> Creating a content list page with Kuroco and Nuxt.js"),".\nAlso, please refer to ",(0,o.kt)("a",{parentName:"li",href:"/docs/tutorials/integrate-login/"},"Tutorial -> Building a login page using Kuroco and Nuxt.js")," for ",(0,o.kt)("inlineCode",{parentName:"li"},"profile")," endpoint etc.\nThis time, we assume login control by Cookie.")),(0,o.kt)("p",null,'After copying the endpoint of "news details" that has already been created and setting permission for comments by non-logged-in members, create a form for announcement details and related comments.'),(0,o.kt)("h2",{id:"preparation"},"Preparation"),(0,o.kt)("h3",{id:"creating-apis"},"Creating APIs"),(0,o.kt)("p",null,"First, we create a new API to allow operations from unauthorized users.\nClick ","[Add]"," from the API page on the Kuroco admin panel."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/c00cde61df3a3cbea3a1586587b1f807.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/c00cde61df3a3cbea3a1586587b1f807.png",alt:"Image from Gyazo"})),(0,o.kt)("p",null,"Enter the followings in the API creating modal and click ","[Add]",".  "),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/a7a6e96779f27d3dbbfd94fb3e9709cf.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/a7a6e96779f27d3dbbfd94fb3e9709cf.png",alt:"Image from Gyazo"})),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"item"),(0,o.kt)("th",{parentName:"tr",align:"left"},"settings"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"Title"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Comment Test")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"Version"),(0,o.kt)("td",{parentName:"tr",align:"left"},"1.0")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"Description"),(0,o.kt)("td",{parentName:"tr",align:"left"},"API for testing comment function")))),(0,o.kt)("h3",{id:"cors-settings"},"CORS settings"),(0,o.kt)("p",null,"Next, we set up CORS.",(0,o.kt)("br",{parentName:"p"}),"\n","Click ","[Operation CORS]",".",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/de828eac03fadbb227b3ff80cbdfa84e.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/de828eac03fadbb227b3ff80cbdfa84e.png",alt:"Image from Gyazo"})),(0,o.kt)("p",null,"Click ","[Add Origin]"," of CORS_ALLOW_ORIGINS and enter the following:  "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"http://localhost:3000")),(0,o.kt)("p",null,"Click ","[Add Method]"," CORS_ALLOW_METHODS and enter the following:  "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"GET"),(0,o.kt)("li",{parentName:"ul"},"POST"),(0,o.kt)("li",{parentName:"ul"},"OPTIONS")),(0,o.kt)("p",null,"After configuring the above settings, click ","[Save]",".",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/9d9ebffe60d8394cd199279531714a47.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/9d9ebffe60d8394cd199279531714a47.png",alt:"Image from Gyazo"})),(0,o.kt)("h2",{id:"check-the-comment-function-without-login"},"Check the comment function without login"),(0,o.kt)("h3",{id:"configure-activity-settings"},"Configure activity settings"),(0,o.kt)("p",null,"In order to allow unauthorized user to comment, we configure the activity settings.",(0,o.kt)("br",{parentName:"p"}),"\n","Click ","[Activity settings]",".",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/b66ea49fc3f5dee3c1b2d12e4df98eda.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/b66ea49fc3f5dee3c1b2d12e4df98eda.png",alt:"Image from Gyazo"})),(0,o.kt)("p",null,"Click ","[Add]",".",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/4296a9c83ced0ad05faf2ee10ef401a4.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/4296a9c83ced0ad05faf2ee10ef401a4.png",alt:"Image from Gyazo"})),(0,o.kt)("p",null,"Make settings as below and click ","[Add]",".",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/766814d38fbebcad4ce9ea018e56a3de.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/766814d38fbebcad4ce9ea018e56a3de.png",alt:"Image from Gyazo"})),(0,o.kt)("p",null,"Make a note of the activity ID you created as you will use it later.",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/6a5c479dc846c168e70173b41ea6e1dd.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/6a5c479dc846c168e70173b41ea6e1dd.png",alt:"Image from Gyazo"})),(0,o.kt)("h3",{id:"create-endpoint"},"Create endpoint"),(0,o.kt)("p",null,"We create following endpoints: "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"newsdetail")," -> to fetch news detail"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"comments")," -> to fetch comments"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"comment")," -> to add comment"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"comment_delete")," -> to delete comments")),(0,o.kt)("p",null,"Click ","[Add new endpoint]"," on ",(0,o.kt)("inlineCode",{parentName:"p"},"Comment Test")," API screen.",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/cf19e60ab66da3db4e8321a255920906.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/cf19e60ab66da3db4e8321a255920906.png",alt:"Image from Gyazo"})),(0,o.kt)("h4",{id:"create-newsdetail-endpoint"},"Create ",(0,o.kt)("inlineCode",{parentName:"h4"},"newsdetail")," endpoint"),(0,o.kt)("p",null,"Create ",(0,o.kt)("inlineCode",{parentName:"p"},"newsdetail")," endpoint as follows:  "),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/0d6e082ae2c142d7c0a68bb49e26c215.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/0d6e082ae2c142d7c0a68bb49e26c215.png",alt:"Image from Gyazo"})),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"item"),(0,o.kt)("th",{parentName:"tr",align:"left"},"settings"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"Path"),(0,o.kt)("td",{parentName:"tr",align:"left"},"newsdetail")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"Category"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Content")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"Model"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Topics v1")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"Operation"),(0,o.kt)("td",{parentName:"tr",align:"left"},"details")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"API request restriction"),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("strong",{parentName:"td"},"None"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"topics_group_id"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Topics group ID to display(10)")))),(0,o.kt)("p",null,"After configuring the above settings, click ","[Add]"," to complete ",(0,o.kt)("inlineCode",{parentName:"p"},"newsdetail")," endpoint settings.  "),(0,o.kt)("h4",{id:"create-comments-endpoint"},"Create ",(0,o.kt)("inlineCode",{parentName:"h4"},"comments")," endpoint"),(0,o.kt)("p",null,"Create ",(0,o.kt)("inlineCode",{parentName:"p"},"comments")," endpoint as follows:",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/96547c74a36a266e5509879811b9c3a4.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/96547c74a36a266e5509879811b9c3a4.png",alt:"Image from Gyazo"}),(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/0b7d53c51e45ab26ae7d3041e5687a26.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/0b7d53c51e45ab26ae7d3041e5687a26.png",alt:"Image from Gyazo"})),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"item"),(0,o.kt)("th",{parentName:"tr",align:"left"},"settings"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"Path"),(0,o.kt)("td",{parentName:"tr",align:"left"},"comments")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"Category"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Activity")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"Model"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Comment v1")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"Operation"),(0,o.kt)("td",{parentName:"tr",align:"left"},"list")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"API request restriction"),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("strong",{parentName:"td"},"None"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"id"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Activity ID(35)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"module_type"),(0,o.kt)("td",{parentName:"tr",align:"left"},"topics")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"new_order_flg"),(0,o.kt)("td",{parentName:"tr",align:"left"},"check")))),(0,o.kt)("p",null,"After configuring the above settings, click ","[Add]"," to complete ",(0,o.kt)("inlineCode",{parentName:"p"},"comments")," endpoint settings.   "),(0,o.kt)("h4",{id:"create-comment-endpoint"},"Create ",(0,o.kt)("inlineCode",{parentName:"h4"},"comment")," endpoint"),(0,o.kt)("p",null,"Create ",(0,o.kt)("inlineCode",{parentName:"p"},"comment")," endpoint as follows:",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/2fc924f64b57427698b42280a9abad3d.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/2fc924f64b57427698b42280a9abad3d.png",alt:"Image from Gyazo"})),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"item"),(0,o.kt)("th",{parentName:"tr",align:"left"},"settings"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"Path"),(0,o.kt)("td",{parentName:"tr",align:"left"},"comment")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"Category"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Activity")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"Model"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Comment v1")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"Operation"),(0,o.kt)("td",{parentName:"tr",align:"left"},"insert")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"API request restriction"),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("strong",{parentName:"td"},"None"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"id"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Activity ID(35)")))),(0,o.kt)("p",null,"After configuring the above settings, click ","[Add]"," to complete ",(0,o.kt)("inlineCode",{parentName:"p"},"comment")," endpoint settings."),(0,o.kt)("h4",{id:"create-comment_delete-endpoint"},"Create ",(0,o.kt)("inlineCode",{parentName:"h4"},"comment_delete")," endpoint"),(0,o.kt)("p",null,"Create ",(0,o.kt)("inlineCode",{parentName:"p"},"comment_delete")," endpoint as follows:",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/f19de5a2e6153d799e2c8ea530cf72e8.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/f19de5a2e6153d799e2c8ea530cf72e8.png",alt:"Image from Gyazo"})),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"item"),(0,o.kt)("th",{parentName:"tr",align:"left"},"settings"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"Path"),(0,o.kt)("td",{parentName:"tr",align:"left"},"comment_delete")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"Category"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Activity")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"Model"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Comment v1")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"Operation"),(0,o.kt)("td",{parentName:"tr",align:"left"},"delete")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"API request restriction"),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("strong",{parentName:"td"},"None"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"id"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Activity ID(35)")))),(0,o.kt)("p",null,"After configuring the above settings, click ","[Add]"," to complete ",(0,o.kt)("inlineCode",{parentName:"p"},"comment_delete")," endpoint settings.  "),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"In this example, the security of endpoint for adding/deleting comments is set to ",(0,o.kt)("inlineCode",{parentName:"p"},"None"),", but on the actual site, set a group that allows adding/deleting comments.  ")),(0,o.kt)("h3",{id:"set-up-front-end"},"Set up front-end"),(0,o.kt)("h4",{id:"add-news-detail-page-with-comment-function"},"Add news detail page with comment function"),(0,o.kt)("p",null,"This time, we will create a screen referring to the existing news detail screen and add a comment function to the same page.",(0,o.kt)("br",{parentName:"p"}),"\n","First, we will check the operation so that even unauthorized users can read/post comments.  "),(0,o.kt)("p",null,"It fetches and displays all comments associated with the news when displaying the screen.  "),(0,o.kt)("p",null,"There is a user name input field and a comment posting form, and after entering the user name, the added comment is immediately reflected on the screen.",(0,o.kt)("br",{parentName:"p"}),"\n","Each comment has a delete button too.  "),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Deletion of comments can only be done by the person who posted the comment, assuming that the password (delkey) is used to post and delete comments, or assuming login.",(0,o.kt)("br",{parentName:"p"}),"\n",'At this stage, if you click the delete button, an error Code 422 "Cannot delete because the password does not match or you are not the author." will occur.  ')),(0,o.kt)("p",null,"Add ",(0,o.kt)("inlineCode",{parentName:"p"},"pages/news/test_with_comment.vue")," and write the code as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-markup"},'<template>\n  <div>\n    <h1 class="title">{{ response.details.subject }}</h1>\n    <div class="post" v-html="response.details.contents"></div>\n    <p v-if="resultMessage !== null">\n      {{ resultMessage }}\n    </p>\n    <div>\n        please type your name: <input v-model="userName" type="text" placeholder="your name">\n    </div>\n    <div>\n        <ul v-for="comment in comments" :key="comment.comment_id">\n            <li>\n                {{ comment.note }} by {{ comment.name }}\n                <button type="button" @click="() => deleteComment(comment.comment_id)">\n                    delete\n                </button>\n            </li>\n        </ul>\n        <form @submit.prevent="submitComment">\n            <input v-model="inputComment" type="text" placeholder="comment">\n            <button type="submit" :disabled="inputComment === \'\' || userName === \'\'">\n                submit\n            </button>\n        </form>\n    </div>\n  </div>\n</template>\n\n<script>\nasync function getAllComments (topics_id) {\n    const { list } = await this.$axios.$get(\n        \'/rcms-api/13/comments\',\n        {\n            params: {\n                module_id: topics_id,\n                cnt: 999\n            }\n        }\n    )\n    return list\n}\n\nexport default {\n  async asyncData({ $axios, params }) {\n    try {\n      const response = await $axios.$get(\n        \'/rcms-api/13/newsdetail/12\'\n      )\n      return { response, comments: await getAllComments.call({ $axios }, response.details.topics_id) }\n    } catch (e) {\n      console.log(e.message)\n    }\n  },\n  data () {\n      return {\n          userName: \'\',\n          response: null,\n          comments: [],\n          inputComment: \'\',\n          resultMessage: null,\n      }\n  },\n  methods: {\n    async submitComment () {\n        await this.$axios.$post(\'/rcms-api/13/comment\', {\n            module_id: this.response.details.topics_id,\n            name: this.userName,\n            note: this.inputComment\n            })\n            this.comments = await getAllComments.call(this, this.response.details.topics_id)\n            this.inputComment = \'\'\n    },\n    async deleteComment (commentId) {\n      try{\n        await this.$axios.$post(`/rcms-api/13/comment_delete/${commentId}`, {})\n        this.comments = await getAllComments.call(this, this.response.details.topics_id)\n        this.inputComment = \'\'\n      } catch (error) {\n         this.resultMessage = error.response.data.errors[0].message\n      }\n    }\n  }\n}\n<\/script>\n')),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Replace the endpoints ",(0,o.kt)("inlineCode",{parentName:"p"},"/rcms-api/13")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"newsdetail/12")," with your own one.")),(0,o.kt)("p",null,"Confirm that you can add a comment as below."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/afc14ec722d9a1c39e913df6a2481fab.gif?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/afc14ec722d9a1c39e913df6a2481fab.gif",alt:"Image from Gyazo"})),(0,o.kt)("h3",{id:"make-comments-deletable-using-delkey"},"Make comments deletable (using delkey)"),(0,o.kt)("p",null,"In order to allow unauthorized users to delete comments, we will use ",(0,o.kt)("inlineCode",{parentName:"p"},"delkey")," to request deletion."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"delkey")," is an arbitrary value that can be given when adding a comment.\nThis time, it will be implemented with the following specifications."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Add ",(0,o.kt)("inlineCode",{parentName:"li"},"delkey")," automatically when adding a comment"),(0,o.kt)("li",{parentName:"ul"},"Store ",(0,o.kt)("inlineCode",{parentName:"li"},"delkey")," in the browser's local storage"),(0,o.kt)("li",{parentName:"ul"},"Call ",(0,o.kt)("inlineCode",{parentName:"li"},"delkey")," from browser local storage on delete")),(0,o.kt)("p",null,"Please note that saving to the browser uses local storage, so it cannot be deleted if you change browsers or resume operation on a different device."),(0,o.kt)("p",null,"Modify ",(0,o.kt)("inlineCode",{parentName:"p"},"pages/news/test_with_comment.vue")," as below.  "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-diff"},'@@ -1,85 +1,106 @@\n <template>\n   <div>\n     <h1 class="title">{{ response.details.subject }}</h1>\n     <div class="post" v-html="response.details.contents"></div>\n     <p v-if="resultMessage !== null">\n       {{ resultMessage }}\n     </p>\n     <div>\n         please type your name: <input v-model="userName" type="text" placeholder="your name">\n     </div>\n     <div>\n         <ul v-for="comment in comments" :key="comment.comment_id">\n             <li>\n                 {{ comment.note }} by {{ comment.name }}\n-                <button type="button" @click="() => deleteComment(comment.comment_id)">\n+                <button v-if="commentHistory.map(({ id }) => id).includes(comment.comment_id)" type="button" @click="() => deleteComment(comment.comment_id)">\n                     delete\n                 </button>\n             </li>\n         </ul>\n         <form @submit.prevent="submitComment">\n             <input v-model="inputComment" type="text" placeholder="comment">\n             <button type="submit" :disabled="inputComment === \'\' || userName === \'\'">\n                 submit\n             </button>\n         </form>\n     </div>\n   </div>\n </template>\n\n <script>\n async function getAllComments (topics_id) {\n     const { list } = await this.$axios.$get(\n         \'/rcms-api/13/comments\',\n         {\n             params: {\n                 module_id: topics_id,\n                 cnt: 999\n             }\n         }\n     )\n     return list\n }\n\n+const COMMENT_HISTORY_KEY = \'CommentHistory\'\n+\n export default {\n   async asyncData({ $axios, params }) {\n     try {\n       const response = await $axios.$get(\n         \'/rcms-api/13/newsdetail/12\'\n       )\n       return { response, comments: await getAllComments.call({ $axios }, response.details.topics_id) }\n     } catch (e) {\n       console.log(e.message)\n     }\n   },\n   data () {\n       return {\n           userName: \'\',\n           response: null,\n           comments: [],\n           inputComment: \'\',\n+          commentHistory: [],\n           resultMessage: null,\n       }\n   },\n+  mounted () {\n+        this.commentHistory = JSON.parse(localStorage.getItem(COMMENT_HISTORY_KEY)) || []\n+  },\n   methods: {\n     async submitComment () {\n-        await this.$axios.$post(\'/rcms-api/13/comment\', {\n+         const delkey = `${this.userName}_${Date.now()}`\n+         const submitResponse = await this.$axios.$post(\'/rcms-api/13/comment\', {\n             module_id: this.response.details.topics_id,\n             name: this.userName,\n-            note: this.inputComment\n+            note: this.inputComment,\n+            delkey\n             })\n+            this.addCommentHistory({ id: submitResponse.id, delkey })\n             this.comments = await getAllComments.call(this, this.response.details.topics_id)\n             this.inputComment = \'\'\n     },\n     async deleteComment (commentId) {\n       try{\n-        await this.$axios.$post(`/rcms-api/13/comment_delete/${commentId}`, {})\n+        await this.$axios.$post(`/rcms-api/13/comment_delete/${commentId}`, {\n+            delkey: this.commentHistory.find(({ id }) => `${id}` === `${commentId}`).delkey\n+        })\n+        this.deleteCommentHistory(commentId)\n         this.comments = await getAllComments.call(this, this.response.details.topics_id)\n         this.inputComment = \'\'\n       } catch (error) {\n          this.resultMessage = error.response.data.errors[0].message\n       }\n+    },\n+    addCommentHistory (payload) {\n+        const restored = JSON.parse(localStorage.getItem(COMMENT_HISTORY_KEY)) || []\n+        restored.push(payload)\n+        localStorage.setItem(COMMENT_HISTORY_KEY, JSON.stringify(restored))\n+        this.commentHistory = restored\n+    },\n+    deleteCommentHistory (commentId) {\n+        const restored = JSON.parse(localStorage.getItem(COMMENT_HISTORY_KEY)) || []\n+        const filtered = restored.filter(({ id }) => `${id}` !== `${commentId}`)\n+        localStorage.setItem(COMMENT_HISTORY_KEY, JSON.stringify(filtered))\n+        this.commentHistory = filtered\n     }\n   }\n }\n <\/script>\n')),(0,o.kt)("p",null,"Confirm that the delete button is displayed only for comments that have been commented and can be deleted as shown below.",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/0ee5f225684d2fa6e57ef46f1e2a27f9.gif?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/0ee5f225684d2fa6e57ef46f1e2a27f9.gif",alt:"Image from Gyazo"})),(0,o.kt)("h2",{id:"make-comments-require-login"},"Make comments require login"),(0,o.kt)("p",null,"If you open the POST endpoint for modification/deletion like the comment function without any measures, it becomes vulnerable to DoS attacks (cyberattacks that puncture the DB by posting a large amount of data at the same time).",(0,o.kt)("br",{parentName:"p"}),"\n","Kuroco's endpoint has a function to return an error that does not accept posts if there are many comments from the same IP address in a short period of time. But in this tutorial, implementation is done so that it requires users to login for viewing the news detail page, and for displaying, posting and deleting comments."),(0,o.kt)("h3",{id:"update-activity-settings"},"Update activity settings"),(0,o.kt)("p",null,"Click ","[Activity settings]",".",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/b66ea49fc3f5dee3c1b2d12e4df98eda.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/b66ea49fc3f5dee3c1b2d12e4df98eda.png",alt:"Image from Gyazo"})),(0,o.kt)("p",null,"Click the title of the activity you created before.",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/5ede3b63958d21f600c25ed8440ae38b.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/5ede3b63958d21f600c25ed8440ae38b.png",alt:"Image from Gyazo"})),(0,o.kt)("p",null,'Change the "API request restriction" and "Posting restriction" of "All members who have not logged in" to ',(0,o.kt)("inlineCode",{parentName:"p"},"Set limit")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"disabled")," and click ","[Update]",".",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/c301c4de9770ac72a931f378df22bab4.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/c301c4de9770ac72a931f378df22bab4.png",alt:"Image from Gyazo"})),(0,o.kt)("h3",{id:"modify-front-end"},"Modify front-end"),(0,o.kt)("p",null,"Modify ",(0,o.kt)("inlineCode",{parentName:"p"},"pages/news/test_with_comment.vue")," as below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-markup"},'<template>\n  <div>\n    <h1 class="title">{{ response.details.subject }}</h1>\n    <div class="post" v-html="response.details.contents"></div>\n    <div>\n        <p v-if="resultMessage !== null">\n          {{ resultMessage }}\n        </p>\n        <ul v-for="comment in comments" :key="comment.comment_id">\n            <li>\n                {{ comment.note }} by {{ comment.name }}\n                <button type="button" @click="() => deleteComment(comment.comment_id)">\n                    delete\n                </button>\n            </li>\n        </ul>\n        <form @submit.prevent="submitComment">\n            <input v-model="inputComment" type="text" placeholder="comment">\n            <button type="submit" :disabled="inputComment === \'\'">\n                submit\n            </button>\n        </form>\n    </div>\n  </div>\n</template>\n\n<script>\nasync function getAllComments (topics_id) {\n    const { list } = await this.$axios.$get(\n        \'/rcms-api/13/comments\',\n        {\n            params: {\n                module_id: topics_id,\n                cnt: 999\n            }\n        }\n    )\n    return list\n}\n\nimport { mapActions } from \'vuex\'\nexport default {\n  middleware: \'auth\',\n  async asyncData ({ $axios, params }) {\n    try {\n      const profile = await $axios.$get(\'/rcms-api/4/profile\')\n      const response = await $axios.$get(\n        \'/rcms-api/13/newsdetail/12\'\n      )\n      return { profile, response, comments: await getAllComments.call({ $axios }, response.details.topics_id) }\n    } catch (e) {\n      console.log(e.message)\n    }\n  },\n  data () {\n      return {\n          userName: \'\',\n          response: null,\n          comments: [],\n          inputComment: \'\',\n          resultMessage: null,\n      }\n  },\n  methods: {\n    async submitComment () {\n        await this.$axios.$post(\'/rcms-api/13/comment\', {\n            module_id: this.response.details.topics_id,\n            name: `${this.profile.name1} ${this.profile.name2}`,\n            mail: this.profile.email,\n            note: this.inputComment\n            })\n            this.comments = await getAllComments.call(this, this.response.details.topics_id)\n            this.inputComment = \'\'\n    },\n    async deleteComment (commentId) {\n      try{\n        await this.$axios.$post(`/rcms-api/13/comment_delete/${commentId}`, {})\n        this.comments = await getAllComments.call(this, this.response.details.topics_id)\n        this.inputComment = \'\'\n      } catch (error) {\n         this.resultMessage = error.response.data.errors[0].message\n      }\n    }\n  }\n}\n<\/script>\n')),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Replace the endpoints ",(0,o.kt)("inlineCode",{parentName:"p"},"/rcms-api/13"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"newsdetail/12"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"/rcms-api/4/")," with your own one.")),(0,o.kt)("p",null,"Add a link to ",(0,o.kt)("inlineCode",{parentName:"p"},"test_with_comment")," page in ",(0,o.kt)("inlineCode",{parentName:"p"},"pages/login/index.vue")," as below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-markup"},'<template>\n    <form @submit.prevent="login">\n        <p v-if="loginStatus !== null" :style="{ color: resultMessageColor }">\n            {{ resultMessage }}\n        </p>\n\n        <input v-model="email" name="email" type="email" placeholder="email"/>\n        <input\n            v-model="password"\n            name="password"\n            type="password"\n            placeholder="password"\n        />\n        <button type="submit">\n            Login\n        </button>\n        <div>\n            <nuxt-link to="/news">\n                News list page\n            </nuxt-link>\n            <br/>\n            <nuxt-link to="/news/test_with_comment">\n                Test with comment\n            </nuxt-link>\n        </div>\n    </form>\n</template>\n\n<script>\nexport default {\n    data () {\n        return {\n            email: \'\',\n            password: \'\',\n\n            loginStatus: null,\n            resultMessage: null\n        };\n    },\n    computed: {\n        resultMessageColor () {\n            switch (this.loginStatus) {\n            case \'success\':\n                return \'green\'\n            case \'failure\':\n                return \'red\'\n            default:\n                return \'\'\n            };\n        }\n    },\n    methods: {\n        async login () {\n\n            try {\n                const payload = {\n                    email: this.email,\n                    password: this.password\n                }\n                await this.$store.dispatch(\'login\', payload)\n                this.loginStatus = \'success\'\n                this.resultMessage = \'Login successful\'\n            } catch (e) {\n                this.loginStatus = \'failure\'\n                this.resultMessage = \'Login failed\'\n            };\n        }\n    },\n};\n<\/script>\n')),(0,o.kt)("p",null,"Finally, check the operation.",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/3753bdb010a1a0ba27e4e72c08fdd618.gif?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/3753bdb010a1a0ba27e4e72c08fdd618.gif",alt:"Image from Gyazo"})),(0,o.kt)("p",null,"This is all for this tutorial."))}c.isMDXComponent=!0}}]);