"use strict";(self.webpackChunkkurokuro=self.webpackChunkkurokuro||[]).push([[5280],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>g});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),d=p(n),c=r,g=d["".concat(l,".").concat(c)]||d[c]||u[c]||i;return n?a.createElement(g,o(o({ref:t},m),{},{components:n})):a.createElement(g,o({ref:t},m))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},18569:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={title:"Setting up a new member registration form with Kuroco and Nuxt.js",description:"This tutorial explains how to set up a new member registration form in a Nuxt.js project using Kuroco."},o=void 0,s={unversionedId:"tutorials/setting-up-registration-form",id:"tutorials/setting-up-registration-form",title:"Setting up a new member registration form with Kuroco and Nuxt.js",description:"This tutorial explains how to set up a new member registration form in a Nuxt.js project using Kuroco.",source:"@site/docs/tutorials/setting-up-registration-form.md",sourceDirName:"tutorials",slug:"/tutorials/setting-up-registration-form",permalink:"/docs/tutorials/setting-up-registration-form",draft:!1,editUrl:"https://github.com/diverta/kuroco-documents/tree/main/packages/create-docusaurus/templates/shared/docs/tutorials/setting-up-registration-form.md",tags:[],version:"current",frontMatter:{title:"Setting up a new member registration form with Kuroco and Nuxt.js",description:"This tutorial explains how to set up a new member registration form in a Nuxt.js project using Kuroco."},sidebar:"documentationSidebar",previous:{title:"Implementing Two-Factor Authentication on the Login Screen with Kuroco and Nuxt.js",permalink:"/docs/tutorials/implementing-two-step-verification-on-login-form"},next:{title:"How to implement member registration with authentication function using Kuroco and Nuxt.js",permalink:"/docs/tutorials/setting-up-pre-member-registration-form"}},l={},p=[{value:"Before you start",id:"before-you-start",level:2},{value:"Nuxt.js project build",id:"nuxtjs-project-build",level:3},{value:"API security",id:"api-security",level:3},{value:"Recommended browser",id:"recommended-browser",level:3},{value:"Implementing a dummy registration form",id:"implementing-a-dummy-registration-form",level:2},{value:"1. Create the registration form",id:"1-create-the-registration-form",level:3},{value:"2. Configure the registration process",id:"2-configure-the-registration-process",level:3},{value:"3. Implement the error handling process",id:"3-implement-the-error-handling-process",level:3},{value:"Creating and verifying new member registration endpoints",id:"creating-and-verifying-new-member-registration-endpoints",level:2},{value:"4. Create an endpoint",id:"4-create-an-endpoint",level:3},{value:"5. Verify the schema of the endpoint",id:"5-verify-the-schema-of-the-endpoint",level:3},{value:"Implementing the new member registration form",id:"implementing-the-new-member-registration-form",level:2},{value:"6. Modify <code>pages/login/signup/index.vue</code>",id:"6-modify-pagesloginsignupindexvue",level:3},{value:"7. Implement the API request/handling",id:"7-implement-the-api-requesthandling",level:3},{value:"A. Cookies",id:"a-cookies",level:4},{value:"B. Dynamic access token",id:"b-dynamic-access-token",level:4}],m={toc:p},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This tutorial explains how to set up a new member registration form in a Nuxt.js project using Kuroco."),(0,r.kt)("h2",{id:"before-you-start"},"Before you start"),(0,r.kt)("h3",{id:"nuxtjs-project-build"},"Nuxt.js project build"),(0,r.kt)("p",null,"Before starting this tutorial, you should have a ready-to-use Nuxt.js project. See ",(0,r.kt)("a",{parentName:"p",href:"/docs/tutorials/integrate-kuroco-with-nuxt/"},"Tutorial: Creating a content list page with Kuroco and Nuxt.js")," on how to build one."),(0,r.kt)("h3",{id:"api-security"},"API security"),(0,r.kt)("p",null,"Kuroco provides several API security options."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/7f0ac65f4426868778b2a2c2dc66730b.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/7f0ac65f4426868778b2a2c2dc66730b.png",alt:"fetched from Gyazo"}),"\nNew member registration only works with the ","[Dynamic access token]"," or ","[Cookie]"," security settings."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"For more information about these security options, see ",(0,r.kt)("a",{parentName:"p",href:"/docs/management/api-security/"},"User guide: API security"),".")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"For details on how to verify the security types, see ",(0,r.kt)("a",{parentName:"p",href:"/docs/tutorials/how-to-use-swagger-ui/"},"Tutorial: How to check the API security using Swagger UI"),".")),(0,r.kt)("h3",{id:"recommended-browser"},"Recommended browser"),(0,r.kt)("p",null,"We recommend using Google Chrome as your browser, as this tutorial uses Chrome Developer Tools."),(0,r.kt)("h2",{id:"implementing-a-dummy-registration-form"},"Implementing a dummy registration form"),(0,r.kt)("p",null,"Now that you have all the prerequisites, you are ready to start making the new member registration form. First, implement a dummy signup process without API integration."),(0,r.kt)("h3",{id:"1-create-the-registration-form"},"1. Create the registration form"),(0,r.kt)("p",null,"To create the registration form, make a new file named ",(0,r.kt)("inlineCode",{parentName:"p"},"pages/login/signup/index.vue"),". Paste the following code into it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markup",metastring:"[pages/login/signup/index.vue]","[pages/login/signup/index.vue]":!0},'<template>\n    <div>\n        <div v-if="!signupDone">\n            <form @submit.prevent="signup">\n                <div>\n                    <label>prop1</label>\n                    <input v-model="user.prop1" name="prop1" type="" placeholder="prop1">\n                </div>\n                <div>\n                    <label>prop2</label>\n                    <input v-model="user.prop2" name="prop2" type="" placeholder="prop2">\n                </div>\n\n                <div>\n                    <button type="submit">\n                        Sign up\n                    </button>\n                </div>\n            </form>\n        </div>\n        <div v-if="signupDone">\n            New member registration is complete.\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data () {\n        return {\n            signupDone: false,\n\n            user: {}\n        }\n    },\n    methods: {\n        signup () {\n            console.log(JSON.stringify(this.user, null, \'\\t\'))\n            this.signupDone = true\n        }\n    }\n}\n<\/script>\n\n<style scoped>\nform > div {\n    margin: 8px;\n    display: flex;\n    flex-direction: row;\n}\nform > div > * {\n    display: flex;\n    flex-direction: row;\n    flex-basis: 100px;\n}\nform > div > *:nth-child(1) {\n    flex: 0 0 100px;\n    padding-right: 8px;\n}\nform > div > *:nth-child(2) {\n    min-width: 0;\n    flex: 1 100 auto;\n}\n</style>\n\n')),(0,r.kt)("p",null,"After saving the file, run ",(0,r.kt)("inlineCode",{parentName:"p"},"npm run dev")," and go to ",(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:3000/login/signup/"),". You will see a simple registration form. In the Chrome Developer Tools, open ","[Console]",". Enter the following information and click ","[Sign Up]",":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"prop1"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"text1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"prop2"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"text2"))),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"prop1")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"prop2")," values you entered will be displayed in the console log."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/5aacbf5aab38790b7ba12b93aa874fbb.gif?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/5aacbf5aab38790b7ba12b93aa874fbb.gif",alt:"fetched from Gyazo"}),"\nThe output value of this log will be the actual new member registration requests to the API."),(0,r.kt)("h3",{id:"2-configure-the-registration-process"},"2. Configure the registration process"),(0,r.kt)("p",null,"After creating the registration form, tentatively integrate the API as follows:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Add another dummy process that makes a 1-second request."),(0,r.kt)("li",{parentName:"ul"},'For successful requests, the webpage will display the message: "New member registration is complete."')),(0,r.kt)("p",null,"To do this, modify ",(0,r.kt)("inlineCode",{parentName:"p"},"pages/login/signup/index.vue")," as shown below."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff",metastring:"[pages/login/signup/index.vue]","[pages/login/signup/index.vue]":!0},'diff --git pages/login/signup/index.vue pages/login/signup/index.vue\nindex 2c93b73..c9aca24 100644\n--- pages/login/signup/index.vue\n+++ pages/login/signup/index.vue\n@@ -1,64 +1,83 @@\n <template>\n     <div>\n         <div v-if="!signupDone">\n             <form @submit.prevent="signup">\n+                <p v-if="error" :style="{ color: \'red\' }">\n+                    {{ error }}\n+                </p>\n+\n                 <div>\n                     <label>prop1</label>\n                     <input v-model="user.prop1" name="prop1" type="" placeholder="prop1">\n                 </div>\n                 <div>\n                     <label>prop2</label>\n                     <input v-model="user.prop2" name="prop2" type="" placeholder="prop2">\n                 </div>\n \n                 <div>\n                     <button type="submit">\n                         Sign up\n                     </button>\n                 </div>\n             </form>\n         </div>\n         <div v-if="signupDone">\n             New member registration is complete.\n         </div>\n     </div>\n </template>\n \n <script>\n export default {\n     data () {\n         return {\n             signupDone: false,\n \n-            user: {}\n+            user: {},\n+            error: null\n         }\n     },\n     methods: {\n-        signup () {\n-            console.log(JSON.stringify(this.user, null, \'\\t\'))\n-            this.signupDone = true\n+        async signup () {\n+            // Dummy request (success/fail after 1-second delay)\n+            const shouldSuccess = true\n+            const request = new Promise((resolve, reject) =>\n+                setTimeout(\n+                    () => (shouldSuccess ? resolve() : reject(Error(\'login failure\'))),\n+                    1000\n+                )\n+            )\n+\n+            try {\n+                await request\n+                this.signupDone = true\n+            } catch (e) {\n+                console.error(e)\n+                this.error = \'An error has occurred.\'\n+            }\n         }\n     }\n }\n <\/script>\n \n <style scoped>\n form > div {\n     margin: 8px;\n     display: flex;\n     flex-direction: row;\n }\n form > div > * {\n     display: flex;\n     flex-direction: row;\n     flex-basis: 100px;\n }\n form > div > *:nth-child(1) {\n     flex: 0 0 100px;\n     padding-right: 8px;\n }\n form > div > *:nth-child(2) {\n     min-width: 0;\n     flex: 1 100 auto;\n }\n </style>\n\n')),(0,r.kt)("p",null,'After you sign up in the dummy form with your browser, you will see the message "New member registration is complete." after a 1-second delay.'),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/1b202dcb8ff61ecf8aaf5e91b30ec60a.gif?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/1b202dcb8ff61ecf8aaf5e91b30ec60a.gif",alt:"fetched from Gyazo"})),(0,r.kt)("h3",{id:"3-implement-the-error-handling-process"},"3. Implement the error handling process"),(0,r.kt)("p",null,"Next, verify what happens when registrations fail. In ",(0,r.kt)("inlineCode",{parentName:"p"},"pages/login/signup/index.vue"),", change ",(0,r.kt)("inlineCode",{parentName:"p"},"shouldSuccess = true")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"shouldSuccess = false"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff",metastring:"[pages/login/signup/index.vue]","[pages/login/signup/index.vue]":!0},"diff --git pages/login/signup/index.vue pages/login/signup/index.vue\n- const shouldSuccess = true\n+ const shouldSuccess = false\n")),(0,r.kt)("p",null,'Now you will see the message "An error has occurred." in red when you try to sign up on your browser.'),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/781944338557f6a23811fada8182b97e.gif?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/781944338557f6a23811fada8182b97e.gif",alt:"fetched from Gyazo"}),"\nAfter you have verified the error message, change the text back to ",(0,r.kt)("inlineCode",{parentName:"p"},"shouldSuccess = true"),"."),(0,r.kt)("h2",{id:"creating-and-verifying-new-member-registration-endpoints"},"Creating and verifying new member registration endpoints"),(0,r.kt)("h3",{id:"4-create-an-endpoint"},"4. Create an endpoint"),(0,r.kt)("p",null,"On the Kuroco endpoint list management screen, click ","[Configure Endpoint]","."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/f4f5c8d0aefc459cf7f99dff874022d4.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/f4f5c8d0aefc459cf7f99dff874022d4.png",alt:"fetched from Gyazo"}),"\nSet up the endpoint as follows and click ","[Add]"," to save it."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/004eb827122a00e0de2a75788c7fd15d.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/004eb827122a00e0de2a75788c7fd15d.png",alt:"fetched from Gyazo"})),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Item"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Setting"),(0,r.kt)("th",{parentName:"tr",align:"left"}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Path"),(0,r.kt)("td",{parentName:"tr",align:"left"},"/rcms-api/(topic ID)/"),(0,r.kt)("td",{parentName:"tr",align:"left"},"member/regist")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Enabled/Disabled"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Enabled")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Model"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Category"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Member")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Model"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Member: v1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Operation"),(0,r.kt)("td",{parentName:"tr",align:"left"},"insert")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Authorization"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"None")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Parameters"),(0,r.kt)("td",{parentName:"tr",align:"left"},"default_group_id"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Enter the ID of the user group that new members will belong to. (See: ",(0,r.kt)("a",{parentName:"td",href:"/docs/management/group/"},"User guide - Group")," for more information on user group IDs.)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"login_ok_flg"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1")))),(0,r.kt)("h3",{id:"5-verify-the-schema-of-the-endpoint"},"5. Verify the schema of the endpoint"),(0,r.kt)("p",null,"On the endpoint list screen, click ","[Swagger UI]","."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/a0da7bb59f0472fa02a4a627b6fc234b.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/a0da7bb59f0472fa02a4a627b6fc234b.png",alt:"fetched from Gyazo"}),"\nOn the Swagger UI screen, click the endpoint you just created.  "),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/b7384e244a148bea8c7bc80854dc3135.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/b7384e244a148bea8c7bc80854dc3135.png",alt:"fetched from Gyazo"}),'\nUnder "Request body", select ',"[Schema]"," to display the schema of the data that can be passed to this endpoint.  "),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/48b17f32866d236f6a98aa4aeb2d11f9.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/48b17f32866d236f6a98aa4aeb2d11f9.png",alt:"fetched from Gyazo"}),"\nWhen making a POST request for new member registration data from the front-end, apply the items to be configured to the request body according to the above schema."),(0,r.kt)("h2",{id:"implementing-the-new-member-registration-form"},"Implementing the new member registration form"),(0,r.kt)("p",null,"Now, you are ready to make the actual signup form. For this tutorial, use the following example items as the target data:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Family name: ",(0,r.kt)("inlineCode",{parentName:"li"},"name1")),(0,r.kt)("li",{parentName:"ul"},"Given name: ",(0,r.kt)("inlineCode",{parentName:"li"},"name2")),(0,r.kt)("li",{parentName:"ul"},"E-mail address: ",(0,r.kt)("inlineCode",{parentName:"li"},"e-mail")),(0,r.kt)("li",{parentName:"ul"},"Login password: ",(0,r.kt)("inlineCode",{parentName:"li"},"login_pwd"))),(0,r.kt)("h3",{id:"6-modify-pagesloginsignupindexvue"},"6. Modify ",(0,r.kt)("inlineCode",{parentName:"h3"},"pages/login/signup/index.vue")),(0,r.kt)("p",null,"Once again, modify ",(0,r.kt)("inlineCode",{parentName:"p"},"pages/login/signup/index.vue")," as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff",metastring:"[/pages/login/signup/index.vue]","[/pages/login/signup/index.vue]":!0},'diff --git a/pages/login/signup/index.vue b/pages/login/signup/index.vue\nindex c9aca24..f2bee20 100644\n--- a/pages/login/signup/index.vue\n+++ b/pages/login/signup/index.vue\n@@ -7,12 +7,20 @@\n                 </p>\n \n                 <div>\n-                    <label>prop1</label>\n-                    <input v-model="user.prop1" name="prop1" type="" placeholder="prop1">\n+                    <label>name1</label>\n+                    <input v-model="user.name1" name="name1" type="text" placeholder="name1">\n                 </div>\n                 <div>\n-                    <label>prop2</label>\n-                    <input v-model="user.prop2" name="prop2" type="" placeholder="prop2">\n+                    <label>name2</label>\n+                    <input v-model="user.name2" name="name2" type="text" placeholder="name2">\n+                </div>\n+                <div>\n+                    <label>email</label>\n+                    <input v-model="user.email" name="email" type="email" placeholder="email">\n+                </div>\n+                <div>\n+                    <label>login_pwd</label>\n+                    <input v-model="user.login_pwd" name="login_pwd" type="password" placeholder="login_pwd">\n                 </div>\n \n                 <div>\n\n')),(0,r.kt)("p",null,"Similarly, verify the webpage display."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/c7615831803180f1d7c0ab41497ad6cf.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/c7615831803180f1d7c0ab41497ad6cf.png",alt:"fetched from Gyazo"})),(0,r.kt)("h3",{id:"7-implement-the-api-requesthandling"},"7. Implement the API request/handling"),(0,r.kt)("p",null,"From here on, the content to be handled will differ depending on the API security settings. Verify which of the following settings you are using and proceed accordingly:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#cookies"},"Cookies")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#dynamic-access-token"},"Dynamic access token"))),(0,r.kt)("h4",{id:"a-cookies"},"A. Cookies"),(0,r.kt)("p",null,"If you are using cookies, modify the new member registration form as shown below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"},"diff --git a/pages/login/signup/index.vue b/pages/login/signup/index.vue\nindex f2bee20..da12179 100644\n--- a/pages/login/signup/index.vue\n+++ b/pages/login/signup/index.vue\n@@ -48,17 +48,13 @@ export default {\n     },\n     methods: {\n         async signup () {\n-            // Dummy request (success/fail after 1-second delay)\n-            const shouldSuccess = true\n-            const request = new Promise((resolve, reject) =>\n-                setTimeout(\n-                    () => (shouldSuccess ? resolve() : reject(Error('login failure'))),\n-                    1000\n+            try {\n+                // New member registration request\n+                await this.$axios.$post(\n+                    process.env.BASE_URL + '/rcms-api/17/member/regist',\n+                    { ...this.user } // Use the form content as the request body\n                 )\n-            )\n \n-            try {\n-                await request\n                 this.signupDone = true\n             } catch (e) {\n                 console.error(e)\n\n")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Replace the ",(0,r.kt)("inlineCode",{parentName:"p"},"17")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"'/rcms-api/17/member/regist'")," with your own API ID, which can be found on the endpoint list screen.")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/bc0f6f375cdc5ade8387908e64db2ef9.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/bc0f6f375cdc5ade8387908e64db2ef9.png",alt:"fetched from Gyazo"}),"\nFill in the registration form and click ","[Sign up]",". "),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/bbcaff64b14fac8d9feb80f3799f6796.gif?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/bbcaff64b14fac8d9feb80f3799f6796.gif",alt:"fetched from Gyazo"}),"\nThen, verify the registration. In the Kuroco administration screen sidebar menu, click ","[Member]"," -> ","[Member]","."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/d3245a60764b436d5ab5eba9cb14f3e2.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/d3245a60764b436d5ab5eba9cb14f3e2.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"On the member list screen, verify the new member account."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/1dbca1ca71bc537ad1476cad123fd3cb.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/1dbca1ca71bc537ad1476cad123fd3cb.png",alt:"Image from Gyazo"})),(0,r.kt)("h4",{id:"b-dynamic-access-token"},"B. Dynamic access token"),(0,r.kt)("p",null,"To access secure endpoints with a dynamic access token, the token value must be sent in the request header. This is also true in this case (request sent by AnonymousUser). Therefore, in the endpoint requests for new member registrations, the previously obtained AnonymousToken must be included in the custom header."),(0,r.kt)("p",null,"In order to do so, modify the registration form as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"},"diff --git a/pages/login/signup/index.vue b/pages/login/signup/index.vue\nindex f2bee20..68670bc 100644\n--- a/pages/login/signup/index.vue\n+++ b/pages/login/signup/index.vue\n@@ -48,17 +48,28 @@ export default {\n     },\n     methods: {\n         async signup () {\n-            // Dummy request (success/fail after 1-second delay)\n-            const shouldSuccess = true\n-            const request = new Promise((resolve, reject) =>\n-                setTimeout(\n-                    () => (shouldSuccess ? resolve() : reject(Error('login failure'))),\n-                    1000\n+            try {\n+                // Get AnonymousToken\n+                const tokenRes = await this.$axios.$post(\n+                    process.env.BASE_URL + '/rcms-api/17/token',\n+                    {} // For AnonymousUser token value acquisition requests, specify an empty object in the request body.\n+                )\n+                const anonymousToken = tokenRes.access_token.value\n+\n+                // Create a custom header containing AnonymousToken.\n+                const customHeaderConfig = {\n+                    headers: {\n+                        'X-RCMS-API-ACCESS-TOKEN': anonymousToken\n+                    }\n+                }\n+\n+                // Send new member registration request\n+                await this.$axios.$post(\n+                    process.env.BASE_URL + '/rcms-api/17/member/regist',\n+                    { ...this.user }, // Use the form content as the request body\n+                    customHeaderConfig\n                 )\n-            )\n \n-            try {\n-                await request\n                 this.signupDone = true\n             } catch (e) {\n                 console.error(e)\n\n")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Replace the ",(0,r.kt)("inlineCode",{parentName:"p"},"17")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"'/rcms-api/17/member/regist'")," with your own API ID, which can be found on the endpoint list screen.")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/bc0f6f375cdc5ade8387908e64db2ef9.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/bc0f6f375cdc5ade8387908e64db2ef9.png",alt:"fetched from Gyazo"}),"\nFill in the registration form and click ","[Sign up]","."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/aaf35c4fe453f39d877e54bea84d59d3.gif?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/aaf35c4fe453f39d877e54bea84d59d3.gif",alt:"fetched from Gyazo"}),"\nThen, verify the registration. In the Kuroco administration screen sidebar menu, click ","[Member]"," -> ","[Member]","."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/d3245a60764b436d5ab5eba9cb14f3e2.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/d3245a60764b436d5ab5eba9cb14f3e2.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"On the member list screen, verify the new member account."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/c07aa9f9debc226396de8103497d3886.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/c07aa9f9debc226396de8103497d3886.png",alt:"fetched from Gyazo"}),"\nThis concludes the tutorial on setting up a new member registration screen for your Nuxt.js project using Kuroco."),(0,r.kt)("p",null,"For clarity, we introduced the setup for a very simple sign-up form. In actual use, you may need to include more complex components such as form validation and e-mail authentication processes. Nevertheless, we hope the above tutorial can serve as an introduction to the basic user registration flow."))}u.isMDXComponent=!0}}]);