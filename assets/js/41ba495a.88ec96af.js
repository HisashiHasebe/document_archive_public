"use strict";(self.webpackChunkkurokuro=self.webpackChunkkurokuro||[]).push([[58354],{3905:(t,e,a)=>{a.d(e,{Zo:()=>m,kt:()=>f});var n=a(67294);function i(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function r(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function o(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?r(Object(a),!0).forEach((function(e){i(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function l(t,e){if(null==t)return{};var a,n,i=function(t,e){if(null==t)return{};var a,n,i={},r=Object.keys(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||(i[a]=t[a]);return i}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(i[a]=t[a])}return i}var s=n.createContext({}),p=function(t){var e=n.useContext(s),a=e;return t&&(a="function"==typeof t?t(e):o(o({},e),t)),a},m=function(t){var e=p(t.components);return n.createElement(s.Provider,{value:e},t.children)},d="mdxType",c={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var a=t.components,i=t.mdxType,r=t.originalType,s=t.parentName,m=l(t,["components","mdxType","originalType","parentName"]),d=p(a),u=i,f=d["".concat(s,".").concat(u)]||d[u]||c[u]||r;return a?n.createElement(f,o(o({ref:e},m),{},{components:a})):n.createElement(f,o({ref:e},m))}));function f(t,e){var a=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var r=a.length,o=new Array(r);o[0]=u;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l[d]="string"==typeof t?t:i,o[1]=l;for(var p=2;p<r;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},69302:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var n=a(87462),i=(a(67294),a(3905));const r={title:"Creating a page to subscribe or unsubscribe from multiple notification at once",description:"By setting the self_only parameter in the MagazineInfo::list endpoint, you can retrieve a list of notification that you are subscribed to. In this tutorial, we will use this endpoint to create a page that displays multiple notification and their subscription status, and allows you to subscribe or unsubscribe from them all at once."},o=void 0,l={unversionedId:"tutorials/create-a-page-to-subscribe-and-unsubscribe-to-multiple-magazines-at-once",id:"tutorials/create-a-page-to-subscribe-and-unsubscribe-to-multiple-magazines-at-once",title:"Creating a page to subscribe or unsubscribe from multiple notification at once",description:"By setting the self_only parameter in the MagazineInfo::list endpoint, you can retrieve a list of notification that you are subscribed to. In this tutorial, we will use this endpoint to create a page that displays multiple notification and their subscription status, and allows you to subscribe or unsubscribe from them all at once.",source:"@site/docs/tutorials/create-a-page-to-subscribe-and-unsubscribe-to-multiple-magazines-at-once.md",sourceDirName:"tutorials",slug:"/tutorials/create-a-page-to-subscribe-and-unsubscribe-to-multiple-magazines-at-once",permalink:"/docs/tutorials/create-a-page-to-subscribe-and-unsubscribe-to-multiple-magazines-at-once",draft:!1,editUrl:"https://github.com/diverta/kuroco-documents/tree/main/packages/create-docusaurus/templates/shared/docs/tutorials/create-a-page-to-subscribe-and-unsubscribe-to-multiple-magazines-at-once.md",tags:[],version:"current",frontMatter:{title:"Creating a page to subscribe or unsubscribe from multiple notification at once",description:"By setting the self_only parameter in the MagazineInfo::list endpoint, you can retrieve a list of notification that you are subscribed to. In this tutorial, we will use this endpoint to create a page that displays multiple notification and their subscription status, and allows you to subscribe or unsubscribe from them all at once."},sidebar:"documentationSidebar",previous:{title:"Building the Account Information Display, Update, and Delete Screens",permalink:"/docs/tutorials/setting-up-the-display-update-delete-screen-for-account-information"},next:{title:"ec-management",permalink:"/docs/tutorials/ec-management"}},s={},p=[{value:"Overview",id:"overview",level:2},{value:"What you&#39;ll learn",id:"what-youll-learn",level:3},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Preparing multiple notification",id:"preparing-multiple-notification",level:2},{value:"Setting up the endpoints",id:"setting-up-the-endpoints",level:2},{value:"Implementing the frontend",id:"implementing-the-frontend",level:2},{value:"Confirm the operation",id:"confirm-the-operation",level:2},{value:"Related Documents",id:"related-documents",level:2}],m={toc:p},d="wrapper";function c(t){let{components:e,...a}=t;return(0,i.kt)(d,(0,n.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"By setting the self_only parameter in the MagazineInfo::list endpoint, you can retrieve a list of notification that you are subscribed to.",(0,i.kt)("br",{parentName:"p"}),"\n","In this tutorial, we will use this endpoint to create a page that displays multiple notification and their subscription status, and allows you to subscribe or unsubscribe from them all at once.  "),(0,i.kt)("h3",{id:"what-youll-learn"},"What you'll learn"),(0,i.kt)("p",null,"You will learn how to add and retrieve comments with a hierarchical structure using the following steps:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#preparing-multiple-notification"},"Preparing multiple notification")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#setting-up-the-endpoints"},"Setting up the endpoints")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#implementing-the-frontend"},"Implementing the frontend")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#confirm-the-operation"},"Confirm the operation"))),(0,i.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"This page assumes that you have already set up a project with Kuroco and Nuxt.js, and have implemented a login screen.",(0,i.kt)("br",{parentName:"p"}),"\n","If you haven't done so yet, please refer to the following tutorials.",(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("a",{parentName:"p",href:"/docs/tutorials/beginners-guide/"},"Beginner's guide to Kuroco"),(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("a",{parentName:"p",href:"/docs/tutorials/integrate-login/"},"Building a login page using Kuroco and Nuxt.js"))),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"This tutorial uses Nuxt.js version v2.15.8.")),(0,i.kt)("h2",{id:"preparing-multiple-notification"},"Preparing multiple notification"),(0,i.kt)("p",null,"First, register multiple notification in the Kuroco admin panel.",(0,i.kt)("br",{parentName:"p"}),"\n","Go to ","[Campaign]"," -> ","[Newsletter]"," to navigate to the newsletter list, and click ","[Add]"," in the upper right corner to register a newsletter.  "),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/46aed3115c7a61d8c89815361d5b6d7d.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/46aed3115c7a61d8c89815361d5b6d7d.png",alt:"Image from Gyazo"})),(0,i.kt)("p",null,"For this tutorial, we have prepared three notification as shown below.  "),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/87b3e3a58cc67a2a8a1e52f63cd952f5.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/87b3e3a58cc67a2a8a1e52f63cd952f5.png",alt:"Image from Gyazo"})),(0,i.kt)("p",null,"Please make a note of the notification ID as it will be set to the endpoint."),(0,i.kt)("h2",{id:"setting-up-the-endpoints"},"Setting up the endpoints"),(0,i.kt)("p",null,"Add the endpoints to the API settings where the Login::login_challenge endpoint is configured.",(0,i.kt)("br",{parentName:"p"}),"\n","This allows requests to be made to the endpoints using the authentication information from the logged-in user.\nPlease note that authentication information cannot be shared between different APIs."),(0,i.kt)("p",null,"In this case, we will set up three endpoints: one to retrieve a list of notification that the user is subscribed to, one to subscribe to a newsletter, and one to unsubscribe from a newsletter.  "),(0,i.kt)("p",null,"Click ","[Add New Endpoint]"," to create each endpoint."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/f4e5e5e90b8fc65eb5697552786d422d.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/f4e5e5e90b8fc65eb5697552786d422d.png",alt:"Image from Gyazo"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Endpoint to retrieve a list of notification")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Setting"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"Path"),(0,i.kt)("td",{parentName:"tr",align:"left"},"my_magazine/info")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"Category"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Magazine")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"Model"),(0,i.kt)("td",{parentName:"tr",align:"left"},"MagazineInfo")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"Operation"),(0,i.kt)("td",{parentName:"tr",align:"left"},"list")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"magazine_id"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Enter the notification IDs targeted for the response",(0,i.kt)("br",null),"7",(0,i.kt)("br",null),"8",(0,i.kt)("br",null),"9")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"self_only"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Check the box")))),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/ab0f77bd142e9fcb732d5369810bf082.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/ab0f77bd142e9fcb732d5369810bf082.png",alt:"Image from Gyazo"})),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/c815faf90a0885d06e4dae0ff3af182d.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/c815faf90a0885d06e4dae0ff3af182d.png",alt:"Image from Gyazo"})),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"By enabling self_only, only the notification that the user is subscribed to will be included in the response.\nIf you want to retrieve a list of notification regardless of subscription status, create a separate endpoint for ",(0,i.kt)("inlineCode",{parentName:"p"},"MagazineInfo::list")," without self_only and use it.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Endpoint to subscribe to a newsletter")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Setting"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"Path"),(0,i.kt)("td",{parentName:"tr",align:"left"},"magazine/subscribe")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"Category"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Magazine")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"Model"),(0,i.kt)("td",{parentName:"tr",align:"left"},"MagazineSubscriber")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"Operation"),(0,i.kt)("td",{parentName:"tr",align:"left"},"subscribe")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"allow_magazine_id"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Enter the notification IDs to allow subscribe using the endpoint",(0,i.kt)("br",null),"7",(0,i.kt)("br",null),"8",(0,i.kt)("br",null),"9")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"self_only"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Check the box")))),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/35244bfde2be5a008c542b101893b9e9.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/35244bfde2be5a008c542b101893b9e9.png",alt:"Image from Gyazo"})),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/d8f64280be8c4508f4731904bb4e784c.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/d8f64280be8c4508f4731904bb4e784c.png",alt:"Image from Gyazo"})),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"If self_only is not checked, please be careful as others can be added as subscribers if they know the endpoint.")),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"If allow_magazine_id is not specified, please be aware that subscriber registration will be possible for all notification.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Endpoint to unsubscribe")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Item"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Setting"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"Path"),(0,i.kt)("td",{parentName:"tr",align:"left"},"magazine/unsubscribe")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"Category"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Magazine")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"Model"),(0,i.kt)("td",{parentName:"tr",align:"left"},"MagazineSubscriber")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"Operation"),(0,i.kt)("td",{parentName:"tr",align:"left"},"unsubscribe")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"allow_magazine_id"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Enter the notification IDs to allow unsubscribe using the endpoint",(0,i.kt)("br",null),"7",(0,i.kt)("br",null),"8",(0,i.kt)("br",null),"9")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"self_only"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Check the box")))),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/4e9bd5c274a9866f854e5ed2efb98501.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/4e9bd5c274a9866f854e5ed2efb98501.png",alt:"Image from Gyazo"})),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/b4b5a52787d5ae85bcdccbbab2984c34.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/b4b5a52787d5ae85bcdccbbab2984c34.png",alt:"Image from Gyazo"})),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"If self_only is not checked, please be careful as others can delete subscriptions of others if they know the endpoint.")),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"If allow_magazine_id is not specified, please be aware that deletion of subscriber registration will be possible for all deliveries.")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Although it is not used in this tutorial, you can use the MagazineSubscriber::list endpoint to get a list of subscribers for the delivery.",(0,i.kt)("br",{parentName:"p"}),"\n","By applying a filter such as ",(0,i.kt)("inlineCode",{parentName:"p"},'search_mail_address contains "@example.com"'),", you can search by the domain name of the email address.",(0,i.kt)("br",{parentName:"p"}),"\n","Please use it when implementing an administrator's management screen.")),(0,i.kt)("h2",{id:"implementing-the-frontend"},"Implementing the frontend"),(0,i.kt)("p",null,"Create the following file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-markup",metastring:'reference title="/pages/mypage/magazine/index.vue"',reference:!0,title:'"/pages/mypage/magazine/index.vue"'},"https://github.com/diverta/kuroco-documents/blob/main/sample_code/front-end/nuxtjs/multiple_magazines_update.vue\n")),(0,i.kt)("p",null,"In this example, we use radio buttons to display the subscription status and send an API request immediately when there is a change.  "),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"If you add a Submit button and send a POST request all at once when submitting, it may take time to process if the number of deliveries increases.",(0,i.kt)("br",{parentName:"p"}),"\n","Consider omitting requests to notification that have not changed or registering new subscription statuses in batches for processing.  ")),(0,i.kt)("h2",{id:"confirm-the-operation"},"Confirm the operation"),(0,i.kt)("p",null,"After logging in and accessing the target directory, you can confirm that the list of deliveries is displayed and an API request is sent when the subscription status is updated."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/ab1328c88661fefa5e2b689603e5ee54.gif?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/ab1328c88661fefa5e2b689603e5ee54.gif",alt:"Image from Gyazo"})),(0,i.kt)("h2",{id:"related-documents"},"Related Documents"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/tutorials/implement-a-magazine-subscription-unsubscription-form/"},"Creating a Subscription Form for Subscribers using Kuroco and Nuxt.js"))))}c.isMDXComponent=!0}}]);