"use strict";(self.webpackChunkkurokuro=self.webpackChunkkurokuro||[]).push([[10055],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),d=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},h="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),h=d(a),p=n,m=h["".concat(l,".").concat(p)]||h[p]||u[p]||o;return a?r.createElement(m,i(i({ref:t},c),{},{components:a})):r.createElement(m,i({ref:t},c))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[h]="string"==typeof e?e:n,i[1]=s;for(var d=2;d<o;d++)i[d]=a[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"},60424:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var r=a(87462),n=(a(67294),a(3905));const o={date:new Date("2022-06-01T00:00:00.000Z"),title:"A Guide to Choosing an Enterprise Headless CMS",description:"A Guide to Help Enterprise Stakeholders Choose a Headless CMS",slug:"guide-to-choosing-an-enterprise-headless-cms",authors:"diverta",hide_table_of_contents:!1},i=void 0,s={permalink:"/blog/guide-to-choosing-an-enterprise-headless-cms",source:"@site/blog/guide-to-choosing-an-enterprise-headless-cms.md",title:"A Guide to Choosing an Enterprise Headless CMS",description:"A Guide to Help Enterprise Stakeholders Choose a Headless CMS",date:"2022-06-01T00:00:00.000Z",formattedDate:"June 1, 2022",tags:[],readingTime:6.13,hasTruncateMarker:!0,authors:[{name:"Diverta",title:"Creator of Kuroco service",url:"https://www.diverta.co.jp",imageURL:"https://github.com/diverta.png",key:"diverta"}],frontMatter:{date:"2022-06-01T00:00:00.000Z",title:"A Guide to Choosing an Enterprise Headless CMS",description:"A Guide to Help Enterprise Stakeholders Choose a Headless CMS",slug:"guide-to-choosing-an-enterprise-headless-cms",authors:"diverta",hide_table_of_contents:!1},prevItem:{title:"What is a reverse proxy",permalink:"/blog/what-is-a-reverse-proxy"},nextItem:{title:"Git-based Vs API-centric Headless CMS",permalink:"/blog/git-based-vs-api-centric-headless-cms"}},l={authorsImageUrls:[void 0]},d=[{value:"What Is An Enterprise Headless CMS?",id:"what-is-an-enterprise-headless-cms",level:2},{value:"Limitations of the Traditional Monolithic CMS",id:"limitations-of-the-traditional-monolithic-cms",level:3},{value:"Overabundance of Features",id:"overabundance-of-features",level:3},{value:"Expensive to Maintain",id:"expensive-to-maintain",level:3},{value:"Complicated to Integrate",id:"complicated-to-integrate",level:3},{value:"Further Reasons to Choose a Headless CMS",id:"further-reasons-to-choose-a-headless-cms",level:2},{value:"Future-proof architecture",id:"future-proof-architecture",level:3},{value:"Increase marketer and content creator productivity",id:"increase-marketer-and-content-creator-productivity",level:3},{value:"Centralized content hub",id:"centralized-content-hub",level:3},{value:"Content workflows",id:"content-workflows",level:3},{value:"API-driven approach",id:"api-driven-approach",level:3},{value:"Advanced Personalization and User Targeting",id:"advanced-personalization-and-user-targeting",level:3},{value:"Kuroco: The Enterprise Headless CMS",id:"kuroco-the-enterprise-headless-cms",level:3}],c={toc:d},h="wrapper";function u(e){let{components:t,...a}=e;return(0,n.kt)(h,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"A Guide to Help Enterprise Stakeholders Choose a Headless CMS"),(0,n.kt)("p",null,"Enterprise CMS platforms have been around for decades, and are an integral part of how large companies manage and deliver their content.  API-centric headless CMSs, on the other hand, are a relatively new technology that have mainly been used by developers working on smaller projects (including blogs and static websites)."),(0,n.kt)("p",null,"However, with the advent of mobile technology and the internet-of-things, large enterprises are increasingly required to deliver their content to a multitude of different frontend platforms, often via a wide range of microservices bundled together.  Given the importance of websites, mobile apps, and social media for enterprises to interact with their customers and engage in marketing initiatives, content management is of critical importance for their continued success."),(0,n.kt)("p",null,"Choosing the correct headless CMS is essential for content creators and marketers to create and deliver the best experience to customers.  One of the most important factors in making this decision is providing a composable architecture to developers that enable them to easily and rapidly deliver content to any frontend, without having to worry about making potentially breaking changes to the backend."),(0,n.kt)("h2",{id:"what-is-an-enterprise-headless-cms"},"What Is An Enterprise Headless CMS?"),(0,n.kt)("p",null,"An enterprise headless CMS is built with large organizations in mind, including all the common features they require to build and maintain larger projects, such as enterprise-grade security, infrastructure scalability, user roles and permissions, integrations, content workflows, and API management functionality.  It also provides advanced tools for testing performance and tracking changes made within team environments."),(0,n.kt)("p",null,"While the above may have traditionally been provided by monolithic CMSs, this would have typically entailed working within a framework of code coupled together with content data (i.e. the opposite of the \u2018headless\u2019 approach).  There is no practical reason that large enterprises should continue to rely on monolithic frameworks."),(0,n.kt)("p",null,"In the same sense that microservices architectures are freeing up data within large organizations to be consumed more broadly, a good headless CMS is able to integrate with and bundle data from many other sources and serve it to appropriate audiences.  This includes ERP, CRM, and other platforms that many enterprises rely on."),(0,n.kt)("h3",{id:"limitations-of-the-traditional-monolithic-cms"},"Limitations of the Traditional Monolithic CMS"),(0,n.kt)("p",null,"With the advent of cloud infrastructure on the internet, the need to centralize data into a monolithic backend coupled to a single frontend has been replaced by microservices architecture and API gateways.  This allows data to be consumed much more easily, by remote clients, unlocking the power of data that had previously been cloistered."),(0,n.kt)("p",null,"The biggest advantage of microservices architecture is that enterprises do not necessarily need to rebuild their backend systems from scratch, but can rather add a layer above them to write and consume data from virtually any source using APIs.  This is not a short-term fad within the industry, but rather a profound change that is transforming the way enterprises use their data - which is increasingly becoming one of their most valuable assets."),(0,n.kt)("p",null,"Traditional monolithic CMSs are unable to meet this need for flexibility, and are being replaced by headless CMSs that open up enterprise data to the world."),(0,n.kt)("p",null,"Monolithic CMSs are struggling to meet the demands of modern businesses as they are too restrictive and have some drawbacks that are causing their downfall. Some of these drawbacks include: "),(0,n.kt)("h3",{id:"overabundance-of-features"},"Overabundance of Features"),(0,n.kt)("p",null,"\u201cFeature creep\u201d is a common issue with large, monolithic CMS platforms.  While it may seem like a good thing to have access to a ton of extra features and tools, it is nearly always better to have a headless CMS that gives developers freedom to integrate with whichever 3rd party tools they need (such as CRM and ERP platforms)."),(0,n.kt)("p",null,"The CMS itself should focus on providing content creators a great user experience, and empowering developers with API management functionality, and not crowd the platform with too many other unnecessary features."),(0,n.kt)("h3",{id:"expensive-to-maintain"},"Expensive to Maintain"),(0,n.kt)("p",null,"Large, bloated software platforms crammed full of extra features also typically cost much more to maintain, and if custom integrations are required to replace the built-in tools with integrations with best-in-class 3rd party solutions, the enterprise can end up paying for redundant services - adding further to the cost burden."),(0,n.kt)("h3",{id:"complicated-to-integrate"},"Complicated to Integrate"),(0,n.kt)("p",null,"Traditional monolithic CMS platforms often have APIs built-in, but in reality, are more complicated to integrate with that modern headless CMSs using standard REST and GraphQL APIs."),(0,n.kt)("h2",{id:"further-reasons-to-choose-a-headless-cms"},"Further Reasons to Choose a Headless CMS"),(0,n.kt)("p",null,"While the drawbacks of using a monolithic CMS might be obvious to some, some enterprise managers may be reluctant to make changes to systems that already work.  Below are some further reasons that enterprises should strongly consider taking the plunge into the upgrading their systems with headless solutions:"),(0,n.kt)("h3",{id:"future-proof-architecture"},"Future-proof architecture"),(0,n.kt)("p",null,"The biggest advantage of headless architecture is that frontends can be easily updated, or totally rebuilt from scratch, without having to worry about making breaking changes to the backend - thanks to the API-first approach.  Data can be consumed by any or multiple frontends, with rapid iterations possible.  This leads to much faster delivery of new product features, and greater productivity overall."),(0,n.kt)("h3",{id:"increase-marketer-and-content-creator-productivity"},"Increase marketer and content creator productivity"),(0,n.kt)("p",null,"In addition to freeing up frontend developers to rapidly build out new features, headless CMSs also empower marketers and content creators to easily create tailored content for any frontend they want.  For example, if they wish to run separate desktop and mobile campaigns, or customize or A/B test their blog content for different device types, this can be accomplished much more easily using a headless CMS."),(0,n.kt)("h3",{id:"centralized-content-hub"},"Centralized content hub"),(0,n.kt)("p",null,"Unlike with monolithic CMSs, where content is typically siloed within the specific site, a headless CMS will enable content to be centralized and much more easily shared across multiple departments or business divisions."),(0,n.kt)("h3",{id:"content-workflows"},"Content workflows"),(0,n.kt)("p",null,"Traditional monolithic CMSs are limited in which content can be planned out across different frontends, whereas a good headless CMS will enable workflow planning across any frontend."),(0,n.kt)("h3",{id:"api-driven-approach"},"API-driven approach"),(0,n.kt)("p",null,"Composable API-driven architecture enables enterprises to make changes to their software stack more easily, and prevents the need to have to change their backend systems to accommodate new technologies that come out.  A good headless CMS with API management functionality can be added as a layer above the existing backend infrastructure.  The backend can then be treated as a \u2018black box\u2019, with any frontend able to communicate with it using standard REST or GraphQL APIs."),(0,n.kt)("h3",{id:"advanced-personalization-and-user-targeting"},"Advanced Personalization and User Targeting"),(0,n.kt)("p",null,"In addition to serving content to different frontends, headless CMSs can also integrate with enterprise CRM platforms, and other localization or analytics tools to provide tailored content to different types of customers in different market segments and locations around the world."),(0,n.kt)("h3",{id:"kuroco-the-enterprise-headless-cms"},"Kuroco: The Enterprise Headless CMS"),(0,n.kt)("p",null,"If the above benefits are of interest to your enterprise, we hope you'll give Kuroco a try! Our headless CMS is built with enterprises and robust API management in mind. Our platform is one of the best in the market for integrating with older legacy systems, allowing you to open up your data without having to rebuild your older systems from scratch. We offer powerful API customization features out of the box, and an easy to use headless CMS interface for both technical and non-technical users."),(0,n.kt)("p",null,"You can get started today and test it out for free, or ",(0,n.kt)("a",{parentName:"p",href:"https://kuroco.app/docs/about/support/"},"reach out to our team")," if you have any questions!"))}u.isMDXComponent=!0}}]);