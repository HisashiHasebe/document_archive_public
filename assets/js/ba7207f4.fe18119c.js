"use strict";(self.webpackChunkkurokuro=self.webpackChunkkurokuro||[]).push([[89905],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>h});var r=o(67294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function a(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)o=i[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)o=i[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var u=r.createContext({}),s=function(e){var t=r.useContext(u),o=t;return e&&(o="function"==typeof e?e(t):a(a({},t),e)),o},c=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},d="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,i=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(o),p=n,h=d["".concat(u,".").concat(p)]||d[p]||f[p]||i;return o?r.createElement(h,a(a({ref:t},c),{},{components:o})):r.createElement(h,a({ref:t},c))}));function h(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=o.length,a=new Array(i);a[0]=p;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[d]="string"==typeof e?e:n,a[1]=l;for(var s=2;s<i;s++)a[s]=o[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,o)}p.displayName="MDXCreateElement"},13433:(e,t,o)=>{o.d(t,{Z:()=>n});var r=o(67294);function n(e){let{faqs:t=[]}=e;if(0===(Array.isArray(t)?t.filter((e=>e.question&&e.answer)):[]).length)return null;const o={"@context":"https://schema.org","@type":"FAQPage",mainEntity:t.map((e=>({"@type":"Question",name:e.question,acceptedAnswer:{"@type":"Answer",text:e.answer}})))},n=JSON.stringify(o,null,2);return r.createElement("script",{type:"application/ld+json"},n)}},2365:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>u,toc:()=>c});var r=o(87462),n=(o(67294),o(3905)),i=o(13433);const a={title:"My file updates are not reflected in KurocoFront, what should I do?",description:"Currently, file updates can only be reflected in KurocoFront from GitHub. Below are some common reasons for file update errors.",category:"trouble"},l=void 0,u={unversionedId:"faq/what-should-I-do-if-file-updates-are-not-reflected-in-kurocofront",id:"faq/what-should-I-do-if-file-updates-are-not-reflected-in-kurocofront",title:"My file updates are not reflected in KurocoFront, what should I do?",description:"Currently, file updates can only be reflected in KurocoFront from GitHub. Below are some common reasons for file update errors.",source:"@site/docs/faq/what-should-I-do-if-file-updates-are-not-reflected-in-kurocofront.mdx",sourceDirName:"faq",slug:"/faq/what-should-I-do-if-file-updates-are-not-reflected-in-kurocofront",permalink:"/docs/faq/what-should-I-do-if-file-updates-are-not-reflected-in-kurocofront",draft:!1,editUrl:"https://github.com/diverta/kuroco-documents/tree/main/packages/create-docusaurus/templates/shared/docs/faq/what-should-I-do-if-file-updates-are-not-reflected-in-kurocofront.mdx",tags:[],version:"current",frontMatter:{title:"My file updates are not reflected in KurocoFront, what should I do?",description:"Currently, file updates can only be reflected in KurocoFront from GitHub. Below are some common reasons for file update errors.",category:"trouble"},sidebar:"faqSidebar",previous:{title:"What options are available for verifying member passwords?",permalink:"/docs/faq/what-options-are-available-for-verifying-member-passwords"},next:{title:"I cannot print an image. What should I do?",permalink:"/docs/faq/what-should-i-do-if-i-cant-print-an-image"}},s={},c=[{value:"YAML file under <code>.github/workflows</code> in GitHub Actions contains errors",id:"yaml-file-under-githubworkflows-in-github-actions-contains-errors",level:2},{value:"<code>kuroco_front.json</code> not found in the root folder of the public directory",id:"kuroco_frontjson-not-found-in-the-root-folder-of-the-public-directory",level:2},{value:"GitHub Actions <code>build</code> failed",id:"github-actions-build-failed",level:2},{value:"GitHub Actions <code>build</code> and deployment to KurocoFront took too long",id:"github-actions-build-and-deployment-to-kurocofront-took-too-long",level:2},{value:"Deployment file is too big, causing errors in the deployment process",id:"deployment-file-is-too-big-causing-errors-in-the-deployment-process",level:2},{value:"CDN cache has not been cleared properly",id:"cdn-cache-has-not-been-cleared-properly",level:2}],d={toc:c},f="wrapper";function p(e){let{components:t,...o}=e;return(0,n.kt)(f,(0,r.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)(i.Z,{faqs:[{question:"My file updates are not reflected in KurocoFront, what should I do?",answer:"Currently, file updates can only be reflected in KurocoFront from GitHub. Below are some common reasons for file update errors."}],mdxType:"StructuredDataFaqs"}),(0,n.kt)("p",null,"Currently, file updates can only be reflected in KurocoFront from GitHub. Below are some common reasons for file update errors."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The YAML file under ",(0,n.kt)("inlineCode",{parentName:"li"},".github/workflows")," in GitHub Actions contains errors."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"kuroco_front.json")," is not found in the root folder of the public directory."),(0,n.kt)("li",{parentName:"ul"},"GitHub Actions ",(0,n.kt)("inlineCode",{parentName:"li"},"build")," failed."),(0,n.kt)("li",{parentName:"ul"},"GitHub Actions ",(0,n.kt)("inlineCode",{parentName:"li"},"build")," and deployment process to KurocoFront took too long."),(0,n.kt)("li",{parentName:"ul"},"The file to be deployed is too big, causing errors in the deployment process."),(0,n.kt)("li",{parentName:"ul"},"The CDN cache has not been cleared properly.")),(0,n.kt)("h2",{id:"yaml-file-under-githubworkflows-in-github-actions-contains-errors"},"YAML file under ",(0,n.kt)("inlineCode",{parentName:"h2"},".github/workflows")," in GitHub Actions contains errors"),(0,n.kt)("p",null,"Verify your current configurations against the contents of the sample ",(0,n.kt)("inlineCode",{parentName:"p"},".github/workflows")," YAML file."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/management/github/"},"User guide: GitHub"))),(0,n.kt)("h2",{id:"kuroco_frontjson-not-found-in-the-root-folder-of-the-public-directory"},(0,n.kt)("inlineCode",{parentName:"h2"},"kuroco_front.json")," not found in the root folder of the public directory"),(0,n.kt)("p",null,"In the root folder of the public directory, set up kuroco_front.json according to the FAQ document below. Make sure the file is in the root of the output folder (such as ",(0,n.kt)("inlineCode",{parentName:"p"},"dist"),"), not the root of the repository.   "),(0,n.kt)("p",null,"You can verify if kuroco_front.json is in the the public directory root by downloading and extracting the GitHub Actions artifacts zip file."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/faq/what-is-kuroco_front_json/"},"FAQ: What is kuroco_front.json?"))),(0,n.kt)("h2",{id:"github-actions-build-failed"},"GitHub Actions ",(0,n.kt)("inlineCode",{parentName:"h2"},"build")," failed"),(0,n.kt)("p",null,"Verify the GitHub Actions execution log according to the guide below to determine the problem. You can also download the build artifacts from the Artifacts section and verify if they are correct."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.github.com/en/actions/monitoring-and-troubleshooting-workflows/using-workflow-run-logs/"},"GitHub document - Using workflow run logs"))),(0,n.kt)("h2",{id:"github-actions-build-and-deployment-to-kurocofront-took-too-long"},"GitHub Actions ",(0,n.kt)("inlineCode",{parentName:"h2"},"build")," and deployment to KurocoFront took too long"),(0,n.kt)("p",null,"Check the execution time in the GitHub Actions execution history according to the guide below. Deployment to KurocoFront should take between 30 seconds and several minutes, depending on the size of the artifacts."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.github.com/en/actions/monitoring-and-troubleshooting-workflows/viewing-workflow-run-history/"},"GitHub document - Viewing workflow run history"))),(0,n.kt)("h2",{id:"deployment-file-is-too-big-causing-errors-in-the-deployment-process"},"Deployment file is too big, causing errors in the deployment process"),(0,n.kt)("p",null,"If the GitHub Actions artifacts used for deployment exceed 300MB, an error may occur due to the download speed from GitHub. Currently, it is not possible to view the error log. But if deployment does not occur within 10 minutes after the GitHub Actions process ends, the artifact download most likely failed. In such cases, try re-running the download by selecting ","[Re-run jobs]"," in the GitHub workflow."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.github.com/en/actions/managing-workflow-runs/downloading-workflow-artifacts/"},"GitHub document - Downloading workflow artifacts"))),(0,n.kt)("h2",{id:"cdn-cache-has-not-been-cleared-properly"},"CDN cache has not been cleared properly"),(0,n.kt)("p",null,"Verify the commit hashes and commit hash artifacts used for deployment to KurocoFront according to the following FAQ documents. "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/faq/how-do-i-verify-the-hash-responses-used-by-kurocofront/"},"FAQ: How do I verify the hash responses used by KurocoFront?")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/faq/how-do-i-verify-responses-in-the-cdn-cache/"},"FAQ: How do I verify responses in the CDN cache?"))))}p.isMDXComponent=!0}}]);