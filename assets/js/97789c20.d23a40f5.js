"use strict";(self.webpackChunkkurokuro=self.webpackChunkkurokuro||[]).push([[63213],{3905:(e,t,o)=>{o.d(t,{Zo:()=>l,kt:()=>h});var a=o(67294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function n(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,a)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?n(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function p(e,t){if(null==e)return{};var o,a,r=function(e,t){if(null==e)return{};var o,a,r={},n=Object.keys(e);for(a=0;a<n.length;a++)o=n[a],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)o=n[a],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},l=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var o=e.components,r=e.mdxType,n=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=s(o),u=r,h=d["".concat(c,".").concat(u)]||d[u]||m[u]||n;return o?a.createElement(h,i(i({ref:t},l),{},{components:o})):a.createElement(h,i({ref:t},l))}));function h(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=o.length,i=new Array(n);i[0]=u;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p[d]="string"==typeof e?e:r,i[1]=p;for(var s=2;s<n;s++)i[s]=o[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,o)}u.displayName="MDXCreateElement"},82963:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>n,metadata:()=>p,toc:()=>s});var a=o(87462),r=(o(67294),o(3905));const n={title:"Deploying the data source from GitHub to KurocoFront",description:"This tutorial explains how to deploy the source from GitHub to KurocoFront."},i=void 0,p={unversionedId:"tutorials/connect-to-github-with-kuroco-front",id:"tutorials/connect-to-github-with-kuroco-front",title:"Deploying the data source from GitHub to KurocoFront",description:"This tutorial explains how to deploy the source from GitHub to KurocoFront.",source:"@site/docs/tutorials/connect-to-github-with-kuroco-front.md",sourceDirName:"tutorials",slug:"/tutorials/connect-to-github-with-kuroco-front",permalink:"/docs/tutorials/connect-to-github-with-kuroco-front",draft:!1,editUrl:"https://github.com/diverta/kuroco-documents/tree/main/packages/create-docusaurus/templates/shared/docs/tutorials/connect-to-github-with-kuroco-front.md",tags:[],version:"current",frontMatter:{title:"Deploying the data source from GitHub to KurocoFront",description:"This tutorial explains how to deploy the source from GitHub to KurocoFront."},sidebar:"documentationSidebar",previous:{title:"Bulk uploading using the `bulk_upsert` API",permalink:"/docs/tutorials/bulk-upload-using-api"},next:{title:"Using your own custom domain name on KurocoFront",permalink:"/docs/tutorials/using-a-custom-domain-name-on-kurocofront"}},c={},s=[{value:"Deploy to KurocoFront",id:"deploy-to-kurocofront",level:2},{value:"1. Prepare a GitHub repository",id:"1-prepare-a-github-repository",level:3},{value:"2. Link the repository to KurocoFront",id:"2-link-the-repository-to-kurocofront",level:3},{value:"3. Create kuroco_front.json",id:"3-create-kuroco_frontjson",level:3},{value:"4. Place YAML file under <code>.github/workflows</code>",id:"4-place-yaml-file-under-githubworkflows",level:3},{value:"5. Deploy GithubActions",id:"5-deploy-githubactions",level:3},{value:"6. Display the front page",id:"6-display-the-front-page",level:3},{value:"Preview deployment on KurocoFront",id:"preview-deployment-on-kurocofront",level:2},{value:"Preview deployment steps",id:"preview-deployment-steps",level:3},{value:"Creating a pull request for testing",id:"creating-a-pull-request-for-testing",level:4},{value:"Preview deploy",id:"preview-deploy",level:4},{value:"Regarding the domain",id:"regarding-the-domain",level:2},{value:"Remark",id:"remark",level:2}],l={toc:s},d="wrapper";function m(e){let{components:t,...o}=e;return(0,r.kt)(d,(0,a.Z)({},l,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This tutorial explains how to deploy data sources from GitHub to KurocoFront.  "),(0,r.kt)("h2",{id:"deploy-to-kurocofront"},"Deploy to KurocoFront"),(0,r.kt)("h3",{id:"1-prepare-a-github-repository"},"1. Prepare a GitHub repository"),(0,r.kt)("p",null,"In GitHub, prepare the repository that you want to deploy to KurocoFront. "),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/5ae8411ce2640c6f0c5b97576e29ee97.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/5ae8411ce2640c6f0c5b97576e29ee97.png",alt:"Image (fetched from Gyazo)"})),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Since only static files can be hosted, the repository must contain only JavaScript framework such as Nuxt.js and media files such as HTML/CSS/JS files and images. The screenshot above shows a Nuxt.js repository.    ")),(0,r.kt)("h3",{id:"2-link-the-repository-to-kurocofront"},"2. Link the repository to KurocoFront"),(0,r.kt)("p",null,"In the left sidebar menu of Kuroco's admin panel, select ","[KurocoFront]"," -> ","[GitHub]",". Then, on the KurocoFront screen, click ","[Authorize GitHub Repository]","."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/81125030515609c74286d795a4d9e646.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/81125030515609c74286d795a4d9e646.png",alt:"Image from Gyazo"}),"\nYou will be asked to log in to GitHub."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/214c1957e75be4de2ea7bc01d10499ab.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/214c1957e75be4de2ea7bc01d10499ab.png",alt:"Image (fetched from Gyazo)"}),"\nYour GitHub account page will be displayed after logging in."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/d42942104b7b668e7d80c44696db4429.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/d42942104b7b668e7d80c44696db4429.png",alt:"Image (fetched from Gyazo)"}),'\nUnder "Repository access", select the repository you want to link with KurocoFront.'),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/afef17946cbde0c9d11433dcb08564a4.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/afef17946cbde0c9d11433dcb08564a4.png",alt:"Image (fetched from Gyazo)"})),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"You can change your repository link settings afterwards. If you have multiple Kuroco projects on one account, select all the target repositories here.")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Please note that you can only link repositories for which you have admin privileges in.")),(0,r.kt)("p",null,"After you have selected your repository, click ","[Save]","."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/1baf2798ac40f953e489b09040a5d1ce.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/1baf2798ac40f953e489b09040a5d1ce.png",alt:"Image (fetched from Gyazo)"}),"\nLog in to Kuroco again."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/296ac6fb71ddea36ace52dbe804fd126.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/296ac6fb71ddea36ace52dbe804fd126.png",alt:"Image (fetched from Gyazo)"}),"\nAfter the connection has been established, you will be redirected to the KurocoFront page."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/69006acdbcd57bed3b9b4cc222fb425d.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/69006acdbcd57bed3b9b4cc222fb425d.png",alt:"fetched from Gyazo"}),"\nThe connection between GitHub repository and KurocoFront is completed."),(0,r.kt)("h3",{id:"3-create-kuroco_frontjson"},"3. Create kuroco_front.json"),(0,r.kt)("p",null,"In order to use KurocoFront, ",(0,r.kt)("inlineCode",{parentName:"p"},"kuroco_front.json")," need to be placed under the root directory.",(0,r.kt)("br",{parentName:"p"}),"\n","Note: Create ",(0,r.kt)("inlineCode",{parentName:"p"},"kuroco_front.json")," under ",(0,r.kt)("inlineCode",{parentName:"p"},"/static")," folder if using Nuxt.js."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="kuroco_front.json"',title:'"kuroco_front.json"'},'{\n    "rewrites": [\n        {\n          "source": ".*",\n          "destination": "/index.html"\n        }\n      ],\n    "redirects": [],\n    "basic":[],\n    "ip_restrictions":[]\n}\n')),(0,r.kt)("p",null,"Reference: ",(0,r.kt)("a",{parentName:"p",href:"/docs/faq/what-is-kuroco_front_json/"},"What is kuroco_front.json\uff1f"),"  "),(0,r.kt)("p",null,"Note: You can use the URL rewrite process, basic authentication, and IP address access restriction for ",(0,r.kt)("inlineCode",{parentName:"p"},"kuroco_front.json"),". The password of BASIC authentication is a plain text. Be careful when you change the repository to public.    "),(0,r.kt)("h3",{id:"4-place-yaml-file-under-githubworkflows"},"4. Place YAML file under ",(0,r.kt)("inlineCode",{parentName:"h3"},".github/workflows")),(0,r.kt)("p",null,"To use GitHub action, place the YAML file under ",(0,r.kt)("inlineCode",{parentName:"p"},".github/workflows"),".",(0,r.kt)("br",{parentName:"p"}),"\n","Copy the part in KurocoFront's page shown below and create ",(0,r.kt)("inlineCode",{parentName:"p"},"build.yml"),". Build command, branch name, etc. can be modified accordingly to suit your needs.\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/a8623921547944ed85a56d6b47e1d740.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/a8623921547944ed85a56d6b47e1d740.png",alt:"fetched from Gyazo"}),"\nPlace the created ",(0,r.kt)("inlineCode",{parentName:"p"},"build.yml")," under ",(0,r.kt)("inlineCode",{parentName:"p"},".github/workflows")," to complete the configuration."),(0,r.kt)("h3",{id:"5-deploy-githubactions"},"5. Deploy GithubActions"),(0,r.kt)("p",null,"The created ",(0,r.kt)("inlineCode",{parentName:"p"},"build.yml")," will work as soon as it is uploaded to Github.",(0,r.kt)("br",{parentName:"p"}),"\n","We will confirm that the GitHub Actions is working by pushing an update to Github."),(0,r.kt)("p",null,"Execute the following command to push the update to Github."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git add .\ngit commit -m "ops: provide kuroco deployment"\ngit push\n')),(0,r.kt)("p",null,"Go to the Github repository screen and click ","[Actions]",".",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/39a7350cf279af2413129060d40edab1.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/39a7350cf279af2413129060d40edab1.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"You can confirm that the Github Actions has started to run.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/ffab5abcf0f34c6f64fc99119aeb98c4.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/ffab5abcf0f34c6f64fc99119aeb98c4.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"After waiting for a while, the Github Actions operation will be completed.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/bebbb2d5f64889833c37e3cbd7e4dfbb.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/bebbb2d5f64889833c37e3cbd7e4dfbb.png",alt:"Image from Gyazo"})),(0,r.kt)("h3",{id:"6-display-the-front-page"},"6. Display the front page"),(0,r.kt)("p",null,"Click ","[Top page]"," button on the side menu.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/02081f063da549494bad4c92370cde15.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/02081f063da549494bad4c92370cde15.png",alt:"Image (fetched from Gyazo)"}),"\nIf the site is displayed without any issue, the deployment is complete."),(0,r.kt)("h2",{id:"preview-deployment-on-kurocofront"},"Preview deployment on KurocoFront"),(0,r.kt)("p",null,"In addition to normal deployments, KurocoFront allows for temporary deployments that work as a preview function."),(0,r.kt)("p",null,"When a reviewer wants to merge a GitHub pull request, they have to checkout/build the pull request on their local machine to verify and review the changes, which is inconvenient.",(0,r.kt)("br",{parentName:"p"}),"\n","For this reason, it would be useful if the source code of the pull request could be built/deployed on a temporary URL (preview deployment) so that anyone can check the pull request artifact in a browser."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"build.yml")," has a pre-scripted preview deployment that will pre-deploy ",(0,r.kt)("strong",{parentName:"p"},"when a specific comment is made")," in the pull request.",(0,r.kt)("br",{parentName:"p"}),"\n","If you have followed the normal deployment procedure above, no changes to the file are necessary."),(0,r.kt)("h3",{id:"preview-deployment-steps"},"Preview deployment steps"),(0,r.kt)("h4",{id:"creating-a-pull-request-for-testing"},"Creating a pull request for testing"),(0,r.kt)("p",null,"Create an empty file for a pull request to confirm the operation.  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'git checkout -b preview_deploy\ntouch test.txt\ngit add .\ngit commit -m "chore: tmp"\ngit push --set-upstream origin preview_deploy\n')),(0,r.kt)("p",null,"Go to the Github repository page and click ","[Pull requests]",", then click ","[New pull request]",".",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/30e0f4ce522f56b17e53adeeb2a64c4c.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/30e0f4ce522f56b17e53adeeb2a64c4c.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Click ","[compare: ***]",", select ","[preview_deploy]",", and click ","[Create pull request]",".",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/9c360322adfe36d1ff5c0f7e37d1d302.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/9c360322adfe36d1ff5c0f7e37d1d302.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Click ","[Create pull request]",".",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/1d43216d2defda21b8b4eb0776562ed6.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/1d43216d2defda21b8b4eb0776562ed6.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"A pull request will be created.\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/eb00d665a8bf98b5d5987ec1f61a7869.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/eb00d665a8bf98b5d5987ec1f61a7869.png",alt:"Image from Gyazo"})),(0,r.kt)("h4",{id:"preview-deploy"},"Preview deploy"),(0,r.kt)("p",null,"Enter ",(0,r.kt)("inlineCode",{parentName:"p"},"/kuroco stage")," in the comment field at the bottom of the pull request screen and click ","[Comment]",".",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/cb2301d837284c03d5662ba4040eac0f.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/cb2301d837284c03d5662ba4040eac0f.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"After confirming that the comment has been made, click on the Actions tab and you will see that Github Actions has responded to the ",(0,r.kt)("inlineCode",{parentName:"p"},"/kuroco stage")," comment and started the preview deployment.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/e418ce8668741af1028ec8e5a1e6f571.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/e418ce8668741af1028ec8e5a1e6f571.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"If you return to the pull request screen and refresh the screen a short while later, you will see that the preview deploy comment has been added along with a link to the temporary URL.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/75a0ac2f3728fd934658696bc8a959a2.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/75a0ac2f3728fd934658696bc8a959a2.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Access the temporary URL link and confirm that the contents of the pull request have been deployed.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/ecc9d7e27a95659a16889b21a12ba71f.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/ecc9d7e27a95659a16889b21a12ba71f.png",alt:"Image from Gyazo"})),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"If a CORS error occurs when accessing the temporary URL issued in the preview deploy, specify a wildcard to allow access from the temporary URL.",(0,r.kt)("br",{parentName:"p"}),"\n","Since a temporary URL is issued as ",(0,r.kt)("inlineCode",{parentName:"p"},"https://hash-sitekey.g.kuroco-front.app"),", You can avoid CORS errors by specifying ",(0,r.kt)("inlineCode",{parentName:"p"},"https://*-sitekey.g.kuroco-front.app"),".",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/37dd46e77bc289ad77a83018e259866f.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/37dd46e77bc289ad77a83018e259866f.png",alt:"Image from Gyazo"})," ")),(0,r.kt)("h2",{id:"regarding-the-domain"},"Regarding the domain"),(0,r.kt)("p",null,"KurocoFront's domain format is ",(0,r.kt)("inlineCode",{parentName:"p"},"https://sample.g.kuroco-front.app")," by default.",(0,r.kt)("br",{parentName:"p"}),"\n","Refer to ",(0,r.kt)("a",{parentName:"p",href:"/docs/tutorials/using-a-custom-domain-name-on-kurocofront/"},"Using your own custom domain name on KurocoFront")," to learn more about the custom domains."),(0,r.kt)("h2",{id:"remark"},"Remark"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"You can check the display status, etc. via ",(0,r.kt)("a",{parentName:"li",href:"/docs/management/front-log-list/"},"KurocoFront Log")),(0,r.kt)("li",{parentName:"ul"},"If you don't know how to setup GitHub Actions, feel free to contact us via ",(0,r.kt)("a",{parentName:"li",href:"/docs/about/support/"},"Support Slack"),"."),(0,r.kt)("li",{parentName:"ul"},"Please note that the site will not be displayed without kuroco_front.json.")))}m.isMDXComponent=!0}}]);