"use strict";(self.webpackChunkkurokuro=self.webpackChunkkurokuro||[]).push([[81181],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>g});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var m=n.createContext({}),p=function(e){var t=n.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=p(e.components);return n.createElement(m.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,m=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(a),u=r,g=d["".concat(m,".").concat(u)]||d[u]||c[u]||i;return a?n.createElement(g,o(o({ref:t},s),{},{components:a})):n.createElement(g,o({ref:t},s))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l[d]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},8163:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const i={title:"Building the Account Information Display, Update, and Delete Screens",description:"This tutorial explains how to create screens for displaying, updating, and deleting account information in a Nuxt.js project using Kuroco."},o=void 0,l={unversionedId:"tutorials/setting-up-the-display-update-delete-screen-for-account-information",id:"tutorials/setting-up-the-display-update-delete-screen-for-account-information",title:"Building the Account Information Display, Update, and Delete Screens",description:"This tutorial explains how to create screens for displaying, updating, and deleting account information in a Nuxt.js project using Kuroco.",source:"@site/docs/tutorials/setting-up-the-display-update-delete-screen-for-account-information.md",sourceDirName:"tutorials",slug:"/tutorials/setting-up-the-display-update-delete-screen-for-account-information",permalink:"/docs/tutorials/setting-up-the-display-update-delete-screen-for-account-information",draft:!1,editUrl:"https://github.com/diverta/kuroco-documents/tree/main/packages/create-docusaurus/templates/shared/docs/tutorials/setting-up-the-display-update-delete-screen-for-account-information.md",tags:[],version:"current",frontMatter:{title:"Building the Account Information Display, Update, and Delete Screens",description:"This tutorial explains how to create screens for displaying, updating, and deleting account information in a Nuxt.js project using Kuroco."},sidebar:"documentationSidebar",previous:{title:"Implementing Two-Factor Authentication on the Member Registration Screen with Kuroco and Nuxt.js",permalink:"/docs/tutorials/implementing-two-step-verification-on-registration-form"},next:{title:"Creating a page to subscribe or unsubscribe from multiple notification at once",permalink:"/docs/tutorials/create-a-page-to-subscribe-and-unsubscribe-to-multiple-magazines-at-once"}},m={},p=[{value:"Overview",id:"overview",level:2},{value:"What you&#39;ll learn",id:"what-youll-learn",level:3},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Setting up Endpoints",id:"setting-up-endpoints",level:2},{value:"Implementing the Frontend",id:"implementing-the-frontend",level:2},{value:"Displaying Member Information",id:"displaying-member-information",level:3},{value:"Updating Member Information",id:"updating-member-information",level:3},{value:"Deleting Member Information",id:"deleting-member-information",level:3},{value:"Related Documents",id:"related-documents",level:2}],s={toc:p},d="wrapper";function c(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"This tutorial explains how to create screens for displaying, updating, and deleting account information in a Nuxt.js project using Kuroco."),(0,r.kt)("h3",{id:"what-youll-learn"},"What you'll learn"),(0,r.kt)("p",null,"You'll learn how to create screens for displaying, updating, and deleting account information using the following steps."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#setting-up-endpoints"},"Setting up Endpoints")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#implementing-the-frontend"},"Implementing the Frontend"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#displaying-member-information"},"Displaying Member Information")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#deleting-member-information"},"Deleting Member Information")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#updating-member-information"},"Updating Member Information"))))),(0,r.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"This page assumes that you have already set up a project with Kuroco and Nuxt.js, and have implemented a login screen.",(0,r.kt)("br",{parentName:"p"}),"\n","If you haven't done so yet, please refer to the following tutorials.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"/docs/tutorials/beginners-guide/"},"Beginner's guide to Kuroco"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"/docs/tutorials/integrate-login/"},"Building a login page using Kuroco and Nuxt.js"))),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"This tutorial uses Nuxt.js version v2.15.8.")),(0,r.kt)("h2",{id:"setting-up-endpoints"},"Setting up Endpoints"),(0,r.kt)("p",null,"Add the endpoints to the API configuration where the Login::login_challenge endpoint is set.",(0,r.kt)("br",{parentName:"p"}),"\n","This allows requests to be made to the endpoints using the authentication information from the login.",(0,r.kt)("br",{parentName:"p"}),"\n","Please note that authentication information cannot be shared between different APIs."),(0,r.kt)("p",null,"In this case, we will set up three endpoints: one for displaying member information, one for updating member information, and one for deleting member information.",(0,r.kt)("br",{parentName:"p"}),"\n","By enabling the ",(0,r.kt)("inlineCode",{parentName:"p"},"self_only")," parameter for all three endpoints, access will be restricted to the member's own information only."),(0,r.kt)("p",null,"Click on ","[Add New Endpoint]"," and create the following endpoints."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/f4e5e5e90b8fc65eb5697552786d422d.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/f4e5e5e90b8fc65eb5697552786d422d.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Endpoint for displaying member information")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Setting"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Path"),(0,r.kt)("td",{parentName:"tr",align:"left"},"member/details")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Category"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Member")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Model"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Member")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Operation"),(0,r.kt)("td",{parentName:"tr",align:"left"},"details")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"self_only"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Check the box")))),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/7a48e6fd795246d5914ed1b3279ea07e.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/7a48e6fd795246d5914ed1b3279ea07e.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/5b2fedcc7fc975213bc82692ce8dfdc9.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/5b2fedcc7fc975213bc82692ce8dfdc9.png",alt:"Image from Gyazo"})),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"If the ",(0,r.kt)("inlineCode",{parentName:"p"},"self_only")," parameter is not enabled, anyone with knowledge of the endpoint URL can retrieve arbitrary member information.",(0,r.kt)("br",{parentName:"p"}),"\n","In such cases, restrict users who can send requests to the endpoint by applying API request limits. You can effectively limit the members that can be retrieved from the endpoint by configuring parameters such as ",(0,r.kt)("inlineCode",{parentName:"p"},"custom_search_id")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"group_id"),". Additionally, using the ",(0,r.kt)("a",{parentName:"p",href:"/docs/reference/post-processing/#allow-list"},"Allow list")," in post-processing allows you to narrow down the items in the response.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Endpoint for updating member information")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Setting"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Path"),(0,r.kt)("td",{parentName:"tr",align:"left"},"member/update")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Category"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Member")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Model"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Member")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Operation"),(0,r.kt)("td",{parentName:"tr",align:"left"},"update")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"self_only"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Check the box")))),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/81fdbce48d1ad683b40a1a7e4cd791a2.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/81fdbce48d1ad683b40a1a7e4cd791a2.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/f6ba2ea0c5bfc4d9580e66324e1e0349.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/f6ba2ea0c5bfc4d9580e66324e1e0349.png",alt:"Image from Gyazo"})),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"If the ",(0,r.kt)("inlineCode",{parentName:"p"},"self_only")," parameter is not enabled, users with permitted API requests can update the member information of others.\nBe cautious when configuring users with permission to make API requests, and consider using the following parameter settings:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"allowed_group_ids"),": Restricts the ability to make requests to change group membership only to the group IDs set in this parameter."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"use_columns"),": Limits updates to only the items specified by keys set in this parameter."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"unuse_columns"),": Restricts updates to items specified by keys set in this parameter."))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Endpoint for deleting member information")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Setting"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Path"),(0,r.kt)("td",{parentName:"tr",align:"left"},"member/delete")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Category"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Member")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Model"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Member")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Operation"),(0,r.kt)("td",{parentName:"tr",align:"left"},"delete")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"self_only"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Check the box")))),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/6ce69d806482148a43d722794ab82f85.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/6ce69d806482148a43d722794ab82f85.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/ba962970e6f70d311efc7f2200769761.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/ba962970e6f70d311efc7f2200769761.png",alt:"Image from Gyazo"})),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"If the ",(0,r.kt)("inlineCode",{parentName:"p"},"self_only")," parameter is not enabled, users with authorized API requests can delete the member information of others.",(0,r.kt)("br",{parentName:"p"}),"\n","Restrict users who can send API requests by configuring API request limits, and use the ",(0,r.kt)("inlineCode",{parentName:"p"},"allowed_group_ids")," parameter to limit the users who can be deleted based on groups.")),(0,r.kt)("h2",{id:"implementing-the-frontend"},"Implementing the Frontend"),(0,r.kt)("h3",{id:"displaying-member-information"},"Displaying Member Information"),(0,r.kt)("p",null,"First, retrieve and create a screen to display your own member information."),(0,r.kt)("p",null,"Create the following files:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markup",metastring:'reference title="/pages/mypage/details/index.vue"',reference:!0,title:'"/pages/mypage/details/index.vue"'},"https://github.com/diverta/kuroco-documents/blob/main/sample_code/front-end/nuxtjs/member_detail.vue\n")),(0,r.kt)("p",null,"After logging in, accessing the target directory will allow you to view member information."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/8c748080eee7923fe52c4e4f5b1284dd.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/8c748080eee7923fe52c4e4f5b1284dd.png",alt:"Image from Gyazo"})),(0,r.kt)("h3",{id:"updating-member-information"},"Updating Member Information"),(0,r.kt)("p",null,"Create the following files:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markup",metastring:'reference title="/pages/mypage/update/index.vue"',reference:!0,title:'"/pages/mypage/update/index.vue"'},"https://github.com/diverta/kuroco-documents/blob/main/sample_code/front-end/nuxtjs/member_update.vue\n")),(0,r.kt)("p",null,"After logging in and accessing the target directory, you can input member information, and by clicking the ","[Update]"," button, you can confirm that it can be updated."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/a17a2a53667018250bcd8ada73794d66.gif?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/a17a2a53667018250bcd8ada73794d66.gif",alt:"Image from Gyazo"})),(0,r.kt)("h3",{id:"deleting-member-information"},"Deleting Member Information"),(0,r.kt)("p",null,"Create the following files:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markup",metastring:'reference title="/pages/mypage/delete/index.vue"',reference:!0,title:'"/pages/mypage/delete/index.vue"'},"https://github.com/diverta/kuroco-documents/blob/main/sample_code/front-end/nuxtjs/member_delete.vue\n")),(0,r.kt)("p",null,"After logging in and accessing the designated directory, a warning message will be displayed just before deletion. By clicking the ","[Proceed]"," button, you can confirm that your information can be deleted. "),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/7a103565a00aba2e1098b4490a5bbbee.gif?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/7a103565a00aba2e1098b4490a5bbbee.gif",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"With this, the implementation of displaying, updating, and deleting account information is complete.\nIn the tutorial, only the minimum required items are displayed and updated, so please adjust the items to be displayed according to your requirements."),(0,r.kt)("h2",{id:"related-documents"},"Related Documents"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/reference/list-of-extra-column-available-on-member-field-settings/"},"List of extension items in member detailed settings."))))}c.isMDXComponent=!0}}]);