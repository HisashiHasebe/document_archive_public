"use strict";(self.webpackChunkkurokuro=self.webpackChunkkurokuro||[]).push([[81201],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>f});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=s(a),u=r,f=d["".concat(p,".").concat(u)]||d[u]||c[u]||l;return a?n.createElement(f,i(i({ref:t},m),{},{components:a})):n.createElement(f,i({ref:t},m))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[d]="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},84426:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var n=a(87462),r=(a(67294),a(3905));const l={title:"Pre-processing",category:"api en",weight:1},i=void 0,o={unversionedId:"reference/pre-processing",id:"reference/pre-processing",title:"Pre-processing",description:"Pre-processing is a user-defined custom function that is called before executing the main process of API endpoints.",source:"@site/docs/reference/pre-processing.md",sourceDirName:"reference",slug:"/reference/pre-processing",permalink:"/docs/reference/pre-processing",draft:!1,editUrl:"https://github.com/diverta/kuroco-documents/tree/main/packages/create-docusaurus/templates/shared/docs/reference/pre-processing.md",tags:[],version:"current",frontMatter:{title:"Pre-processing",category:"api en",weight:1},sidebar:"documentationSidebar",previous:{title:"API Error Response",permalink:"/docs/reference/error"},next:{title:"Post-processing",permalink:"/docs/reference/post-processing"}},p={},s=[{value:"Steps to set up pre-processing in endpoints",id:"steps-to-set-up-pre-processing-in-endpoints",level:2},{value:"Write the program in the custom function",id:"write-the-program-in-the-custom-function",level:3},{value:"Associate the custom function with the endpoint settings",id:"associate-the-custom-function-with-the-endpoint-settings",level:3},{value:"Variables of pre-processing",id:"variables-of-pre-processing",level:2},{value:"Variables for reference",id:"variables-for-reference",level:2},{value:"$meta",id:"meta",level:3},{value:"$url",id:"url",level:3},{value:"$body",id:"body",level:3},{value:"Variables for API control",id:"variables-for-api-control",level:2},{value:"$errors",id:"errors",level:3},{value:"$request",id:"request",level:3},{value:"Reference tutorial",id:"reference-tutorial",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}],m={toc:s},d="wrapper";function c(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Pre-processing is a user-defined custom function that is called before executing the main process of API endpoints.\nYou can set pre-processing to the configured endpoints."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"The processing logic implemented in the pre-processing is not reflected in the API information (Swagger UI) page or the ",(0,r.kt)("inlineCode",{parentName:"p"},"openapi.json")," file, so there may be differences between the information displayed on the screen and the actual specifications. For this reason, it is recommended that the specifications of the customised parts are described in the endpoint description instead.")),(0,r.kt)("h2",{id:"steps-to-set-up-pre-processing-in-endpoints"},"Steps to set up pre-processing in endpoints"),(0,r.kt)("p",null,"Pre-processing can be set up in the following steps."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Write the pre-processing logic in the custom function"),(0,r.kt)("li",{parentName:"ol"},"Add the custom function in the pre-processing settings of the endpoint")),(0,r.kt)("p",null,"The detailed information of the above steps are as follows:"),(0,r.kt)("h3",{id:"write-the-program-in-the-custom-function"},"Write the program in the custom function"),(0,r.kt)("p",null,"Access the ",(0,r.kt)("a",{parentName:"p",href:"/docs/management/function/"},"custom function editor page")," and create a custom function for the pre-processing logic."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/bd5aa3aa781410f063d6234959bfb470.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/bd5aa3aa781410f063d6234959bfb470.png",alt:"Image from Gyazo"}),"\nTo avoid confusion with custom functions created for other purposes, it is recommended to set it up according to the following rules."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Create a category to group the pre-processing custom functions together"),(0,r.kt)("li",{parentName:"ul"},"Set the title of the custom function to be the same as the path name of the endpoint, so that it is easier to identify and associate them together.")),(0,r.kt)("h3",{id:"associate-the-custom-function-with-the-endpoint-settings"},"Associate the custom function with the endpoint settings"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"1. Access API list page"),"  "),(0,r.kt)("p",null,"Select the API on the side menu and access ",(0,r.kt)("a",{parentName:"p",href:"/docs/management/api-list"},"API list page"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/1ddfd9a36428813fc26b3caba00fe493.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/1ddfd9a36428813fc26b3caba00fe493.png",alt:"Image (fetched from Gyazo)"}),"  "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"2. Select the endpoint"),"  "),(0,r.kt)("p",null,"Select the endpoint you want to implement and click the ","[Pre-processing]"," button."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/233d54b03f8aeccb2501973ec30623f7.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/233d54b03f8aeccb2501973ec30623f7.png",alt:"Image (fetched from Gyazo)"}),"  "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"3. Add a pre-process and select the custom function"),"  "),(0,r.kt)("p",null,"Select the category that the custom function is grouped under then select the custom function by its title under the ",(0,r.kt)("inlineCode",{parentName:"p"},"Contents")," field to associate the custom function to the pre-processing of the endpoint."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"The endpoint may not work as expected if the incorrect custom function is selected in the endpoint's pre-processing settings.")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/50faf2265340ee1bbe6e960605bdb240.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/50faf2265340ee1bbe6e960605bdb240.png",alt:"Image (fetched from Gyazo)"}),"  "),(0,r.kt)("h2",{id:"variables-of-pre-processing"},"Variables of pre-processing"),(0,r.kt)("p",null,"Variables used in pre-processing have reserved words with specific meanings. These variables may be used to customize the behaviour of the endpoint."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Variable"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Usage"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"$meta"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Data reference (read only)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"$url"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Data reference (read only)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"$body"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Data reference (read only)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"$errors"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Custom error handling (write action)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"$request"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Modify API request body (write action)")))),(0,r.kt)("h2",{id:"variables-for-reference"},"Variables for reference"),(0,r.kt)("p",null,"The following variables are reference variables that are always assigned by default when pre-processing is executed.",(0,r.kt)("br",{parentName:"p"}),"\n","They are used to determine the endpoint information and the request value passed."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Variable name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"#meta"},"$meta")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Meta data of the endpoint")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"#url"},"$url")),(0,r.kt)("td",{parentName:"tr",align:"left"},"URL component")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"#body"},"$body")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Request body")))),(0,r.kt)("h3",{id:"meta"},"$meta"),(0,r.kt)("p",null,"This variable contains the meta data of the associated endpoint."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Variable"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"$meta"),(0,r.kt)("td",{parentName:"tr",align:"left"},"object"),(0,r.kt)("td",{parentName:"tr",align:"left"},"All meta data of the endpoint")))),(0,r.kt)("p",null,"This variable contains the following data.  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Key"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Initial value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"$meta.content_type"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Content-type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"$meta.mime"),(0,r.kt)("td",{parentName:"tr",align:"left"},"object"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"MIME type and MIME sub-type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"$meta.mime.type"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"MIME type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"$meta.mime.subtype"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"MIME sub-type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"$meta.output_format"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},'"json"'),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"_output_format")," specified in query parameter")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"$meta.lang"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Determined based on the following priorities: ",(0,r.kt)("br",null),"[Browser language > Main language settings]"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"_lang")," specified in query parameter")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"$meta.charset"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},'"utf8"'),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"_charset")," specified in query parameter")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"$meta.http_code"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"null"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"$meta.api_header"),(0,r.kt)("td",{parentName:"tr",align:"left"},"object"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"API settings")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"$meta.post_json"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"GET: null ",(0,r.kt)("br",null),' POST: "{}"'),(0,r.kt)("td",{parentName:"tr",align:"left"},"JSON body in text format")))),(0,r.kt)("h3",{id:"url"},"$url"),(0,r.kt)("p",null,"This variable contains the component of the URL specified by the client."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Variable name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"$url"),(0,r.kt)("td",{parentName:"tr",align:"left"},"object"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Endpoint path and query parameter data")))),(0,r.kt)("p",null,"This variable contains the following data.",(0,r.kt)("br",{parentName:"p"}),"\n","Among the following, ",(0,r.kt)("inlineCode",{parentName:"p"},"$url.query")," contains the same value as ",(0,r.kt)("inlineCode",{parentName:"p"},"$smarty.get"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Key"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"$url.path"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Path of the endpoint")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"$url.query"),(0,r.kt)("td",{parentName:"tr",align:"left"},"object"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Query parameter")))),(0,r.kt)("p",null,"For example, for requests sent to the following endpoint:\n",(0,r.kt)("inlineCode",{parentName:"p"},"https://your-api-domain/rcms-api/1/endpoint_name?p1=VALUE1&p2[]=VALUE2_0&p2[]=VALUE2_1&p3[k1]=VALUE3_1&p3[k2]=VALUE3_2"),"  "),(0,r.kt)("p",null,"The following value will be set in ",(0,r.kt)("inlineCode",{parentName:"p"},"$url"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="$url"',title:'"$url"'},'{\n  "path": "/rcms-api/1/endpoint_name"\n  "query": {\n    "p1": "VALUE1",\n    "p2": [\n        "VALUE2_0",\n        "VALUE2_1"\n    ],\n    "p3": {\n        "k1": "VALUE3_1",\n        "k2": "VALUE3_2"\n    }\n  }\n}\n')),(0,r.kt)("br",null),(0,r.kt)("h3",{id:"body"},"$body"),(0,r.kt)("p",null,"This variable references the components of the URL specified by the client.",(0,r.kt)("br",{parentName:"p"}),"\n","It contains the same value as ",(0,r.kt)("inlineCode",{parentName:"p"},"$smarty.post"),".  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Variable name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"$body"),(0,r.kt)("td",{parentName:"tr",align:"left"},"object"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Endpoint's request body")))),(0,r.kt)("h2",{id:"variables-for-api-control"},"Variables for API control"),(0,r.kt)("p",null,"The following variables are not declared at the time the pre-process runs.",(0,r.kt)("br",{parentName:"p"}),"\n","Initialising them and populating them with values allows you to control the behavior of the endpoint.  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Variable name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Usage"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"#errors"},"$errors")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Custom error handling")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"#request"},"$request")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Modify API endpoint's request body")))),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Do not declare these variables for any purpose other than their intended one within the pre-processing custom function, as this may lead to to unintended behavior of the API endpoints.")),(0,r.kt)("h3",{id:"errors"},"$errors"),(0,r.kt)("p",null,"This variable can be used to perform custom error handling in the endpoint.  "),(0,r.kt)("p",null,"You can implement your own validation process on the endpoint by determining the input value and storing the resulting error message in an array.  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Variable name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Initial value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"$errors"),(0,r.kt)("td",{parentName:"tr",align:"left"},"object"),(0,r.kt)("td",{parentName:"tr",align:"left"},"null"),(0,r.kt)("td",{parentName:"tr",align:"left"},"API endpoint's error codes and messages")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-smarty"},"{* Initialize it as an empty array. *}\n{assign_array var='errors' values=''}\n{* Validate input value. *}\n{if $smarty.post.key_name === 'VALUE'}\n  {* Add error message in the array. *}\n  {assign var='errors.' value='An error has occurred.'}\n{/if}\n")),(0,r.kt)("br",null),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Error response format"),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"HTTP status code"),(0,r.kt)("th",{parentName:"tr",align:"left"},"errors[].code"),(0,r.kt)("th",{parentName:"tr",align:"left"},"errors[].message"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"422"),(0,r.kt)("td",{parentName:"tr",align:"left"},"unprocessable_entity"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Messages stored in ",(0,r.kt)("inlineCode",{parentName:"td"},"errors")," object")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="ExampleResponse"',title:'"ExampleResponse"'},'// Response example\n{\n  "errors": [\n    {\n      "code": "unprocessable_entity",\n      "message": "An error has occurred."\n    }\n  ],\n  "x-rcms-request-id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxx"\n}\n')),(0,r.kt)("br",null),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"$errors")," object contains more than 1 element, the response format is as follows:  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="errors"',title:'"errors"'},'[\n  {"code": "unprocessable_entity", "message": "messages stored in errors object"}\n]\n')),(0,r.kt)("br",null),(0,r.kt)("p",null,"If the ",(0,r.kt)("inlineCode",{parentName:"p"},"$errors")," array contains multiple element, an object is outputted for each of the errors.  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="errors"',title:'"errors"'},'[\n  {"code": "unprocessable_entity", "message": "error message 1"},\n  {"code": "unprocessable_entity", "message": "error message 2"},\n  // ...\n]\n')),(0,r.kt)("br",null),(0,r.kt)("h3",{id:"request"},"$request"),(0,r.kt)("p",null,"This variable can be used to modify the request values passed to the pre-process custom function."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Variable name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Initial value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"$request"),(0,r.kt)("td",{parentName:"tr",align:"left"},"object"),(0,r.kt)("td",{parentName:"tr",align:"left"},"null"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Custom request body for the pre-processing")))),(0,r.kt)("p",null,"By setting a value in this variable in the following format, you can add or overwrite the request value (GET / POST) to be passed to the pre-process custom function."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-smarty"},"{assign var='request.***(target key name)' value='***(value)'}\n")),(0,r.kt)("br",null),(0,r.kt)("p",null,"To set the value based on the existing request value from the API endpoint, use the following reference variable."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Variable name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Remark"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"$url.query"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Alternative variable name: ",(0,r.kt)("inlineCode",{parentName:"td"},"$smarty.get"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"$body"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Alternative variable name: ",(0,r.kt)("inlineCode",{parentName:"td"},"$smarty.post"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code sample")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-smarty"},"{* Initialize as empty array *}\n{assign_array var='request' values=''}\n\n{* Determine if there is a request value *}\n{if $url.query.filter}\n  {* overwrite query parameter *}\n  {assign\n    var='request.filter'\n    value=\"`$url.query.filter AND topics_id in [1, 2, 3]\"}\n{/if}\n")),(0,r.kt)("br",null),(0,r.kt)("h2",{id:"reference-tutorial"},"Reference tutorial"),(0,r.kt)("p",null,"Here is the tutorial on how to implement a pre-processing:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/tutorials/how-to-implement-original-validation-in-api-by-using-function/"},"How to implement original validation in API by using custom functionn"))),(0,r.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,r.kt)("p",null,"If the pre-processing is not working as expected, check the following points:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Check if the API pre-processing is associated with the custom function properly."),(0,r.kt)("li",{parentName:"ul"},"Check if the associated custom function is correct."),(0,r.kt)("li",{parentName:"ul"},"Check if the variable names are correct."),(0,r.kt)("li",{parentName:"ul"},"Check if the data format stored in the variables are correct."),(0,r.kt)("li",{parentName:"ul"},"Check if the custom function syntax is correct.")))}c.isMDXComponent=!0}}]);