"use strict";(self.webpackChunkkurokuro=self.webpackChunkkurokuro||[]).push([[89742],{3905:(t,e,a)=>{a.d(e,{Zo:()=>s,kt:()=>k});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),d=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},s=function(t){var e=d(t.components);return n.createElement(p.Provider,{value:e},t.children)},m="mdxType",c={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,s=o(t,["components","mdxType","originalType","parentName"]),m=d(a),u=r,k=m["".concat(p,".").concat(u)]||m[u]||c[u]||l;return a?n.createElement(k,i(i({ref:e},s),{},{components:a})):n.createElement(k,i({ref:e},s))}));function k(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=u;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o[m]="string"==typeof t?t:r,i[1]=o;for(var d=2;d<l;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},52573:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var n=a(87462),r=(a(67294),a(3905));const l={title:"Bulk uploading using the `bulk_upsert` API",description:"bulk_upsert is an API operation to update multiple contents in bulk. This tutorial explains how to import CSV file in random formats to a content using it."},i=void 0,o={unversionedId:"tutorials/bulk-upload-using-api",id:"tutorials/bulk-upload-using-api",title:"Bulk uploading using the `bulk_upsert` API",description:"bulk_upsert is an API operation to update multiple contents in bulk. This tutorial explains how to import CSV file in random formats to a content using it.",source:"@site/docs/tutorials/bulk-upload-using-api.md",sourceDirName:"tutorials",slug:"/tutorials/bulk-upload-using-api",permalink:"/docs/tutorials/bulk-upload-using-api",draft:!1,editUrl:"https://github.com/diverta/kuroco-documents/tree/main/packages/create-docusaurus/templates/shared/docs/tutorials/bulk-upload-using-api.md",tags:[],version:"current",frontMatter:{title:"Bulk uploading using the `bulk_upsert` API",description:"bulk_upsert is an API operation to update multiple contents in bulk. This tutorial explains how to import CSV file in random formats to a content using it."},sidebar:"documentationSidebar",previous:{title:"Adding and retrieving nested comments",permalink:"/docs/tutorials/add-depth-to-the-comment-function"},next:{title:"Deploying the data source from GitHub to KurocoFront",permalink:"/docs/tutorials/connect-to-github-with-kuroco-front"}},p={},d=[{value:"CSV file",id:"csv-file",level:2},{value:"Content structure setup",id:"content-structure-setup",level:2},{value:"1. Create a content structure",id:"1-create-a-content-structure",level:3},{value:"2. Add the corresponding fields",id:"2-add-the-corresponding-fields",level:3},{value:"3. Create categories",id:"3-create-categories",level:3},{value:"Create an admin account to run the back-end processes",id:"create-an-admin-account-to-run-the-back-end-processes",level:2},{value:"Create a new member",id:"create-a-new-member",level:3},{value:"Define the constants",id:"define-the-constants",level:3},{value:"API settings",id:"api-settings",level:2},{value:"Create a new API",id:"create-a-new-api",level:3},{value:"Add the <code>bulk_upsert</code> endpoint",id:"add-the-bulk_upsert-endpoint",level:3},{value:"Implement batch process",id:"implement-batch-process",level:2},{value:"When updating in JSON format",id:"when-updating-in-json-format",level:3},{value:"Check the operation",id:"check-the-operation",level:2},{value:"Related documents",id:"related-documents",level:2}],s={toc:d},m="wrapper";function c(t){let{components:e,...a}=t;return(0,r.kt)(m,(0,n.Z)({},s,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"bulk_upsert")," API operation enables you to update multiple content posts at once.    "),(0,r.kt)("p",null,"To do this, you have to import data into the Content module in CSV format. The uploaded CSV file is subject to the following conditions:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"It has to be uploaded manually to KurocoFiles."),(0,r.kt)("li",{parentName:"ol"},"The uploading process is batch executed at midnight (0:00) every day."),(0,r.kt)("li",{parentName:"ol"},"A new uploading process will be initiated if you update any files between 0:00 the previous day and 0:00 today."),(0,r.kt)("li",{parentName:"ol"},"If there is existing content, it will be updated by the uploaded data. Otherwise, new content will be created."),(0,r.kt)("li",{parentName:"ol"},"The uploaded CSV file will be encoded in UTF-8.")),(0,r.kt)("h2",{id:"csv-file"},"CSV file"),(0,r.kt)("p",null,"For this tutorial, we will upload the following list of mobile devices."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"item_number"),(0,r.kt)("th",{parentName:"tr",align:"left"},"item_name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"category"),(0,r.kt)("th",{parentName:"tr",align:"left"},"description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"status"),(0,r.kt)("th",{parentName:"tr",align:"left"},"item_color"),(0,r.kt)("th",{parentName:"tr",align:"left"},"release_date"),(0,r.kt)("th",{parentName:"tr",align:"left"},"is_public"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"00000001"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SmartPhone"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Smartphone"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"black,white,red,blue"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2020/12/10"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"00000002"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SmartPhone Lite"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"popular edition Smartphone"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"black,white"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2021/12/10"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"00000003"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Tablet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Tablet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"silver"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2020/1/15"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FALSE")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"00000004"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Tablet 2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Tablet (2nd gen)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"silver"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2022/1/15"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE")))),(0,r.kt)("p",null,"Below is an explanation of each column in this CSV file."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Column"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Label"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Input type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"item_number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Item code"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Number"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A unique 8-digit number for each item.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"item_name")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Item name"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Text"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Name or type of the item.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"category")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Item category"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Text"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("ul",null,(0,r.kt)("li",null,(0,r.kt)("inlineCode",{parentName:"td"},"SP"),": Smartphone"),(0,r.kt)("li",null,(0,r.kt)("inlineCode",{parentName:"td"},"TB"),": Tablet")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"description")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Item description"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Text"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A description or comment about the item.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"status")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Availability"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Number"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("ul",null,(0,r.kt)("li",null,(0,r.kt)("inlineCode",{parentName:"td"},"0"),": Out of stock"),(0,r.kt)("li",null,(0,r.kt)("inlineCode",{parentName:"td"},"1"),": Available")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"item_color")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Color(s)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Text"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Color of the item. Separate multiple values for the same item with commas.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"release_date")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Release date"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Date (",(0,r.kt)("inlineCode",{parentName:"td"},"yyyy/mm/dd"),")"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Item release date.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"is_public")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Public status"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Text"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("ul",null,(0,r.kt)("li",null,(0,r.kt)("inlineCode",{parentName:"td"},"TRUE"),": Public"),(0,r.kt)("li",null,(0,r.kt)("inlineCode",{parentName:"td"},"FALSE"),": Private")))))),(0,r.kt)("h2",{id:"content-structure-setup"},"Content structure setup"),(0,r.kt)("p",null,"To import each row of the CSV file as a separate content post, we need to create a content structure containing fields that match the columns of the uploaded data."),(0,r.kt)("p",null,"If a corresponding default field exists, use the default field.",(0,r.kt)("br",{parentName:"p"}),"\n","Otherwise, create an additional field and set the CSV column name as the identifier."),(0,r.kt)("h3",{id:"1-create-a-content-structure"},"1. Create a content structure"),(0,r.kt)("p",null,"Start a new ",(0,r.kt)("a",{parentName:"p",href:"/docs/management/content-structure-topics-group/"},"content structure"),".",(0,r.kt)("br",{parentName:"p"}),"\n","In the default part of the editor, enter the following:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Mobile devices"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Do not store update history"),(0,r.kt)("td",{parentName:"tr",align:"left"},'Select "Enable".')))),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/be22d0fbb8888c1bab2e96bfc15cc989.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/be22d0fbb8888c1bab2e96bfc15cc989.png",alt:"Image from Gyazo"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/5ad16ca4e0cf38934b59bc7395a77f50.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/5ad16ca4e0cf38934b59bc7395a77f50.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"By default, the content structure contains the fields below."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Field name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Identifier (CSV column name)"),(0,r.kt)("th",{parentName:"tr",align:"left"},"API endpoint parameter"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ID/Slug"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"item_number")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"slug")),(0,r.kt)("td",{parentName:"tr",align:"left"},"When sending requests to the ",(0,r.kt)("inlineCode",{parentName:"td"},"bulk_upsert")," endpoint, ",(0,r.kt)("inlineCode",{parentName:"td"},"slug")," needs to have a text value. Therefore, a prefix is automatically added to yield this input format: ",(0,r.kt)("inlineCode",{parentName:"td"},"ITEM-%%item_number%%"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Date"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"release_date")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ymd")),(0,r.kt)("td",{parentName:"tr",align:"left"},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Category"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"category")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"contents_type")),(0,r.kt)("td",{parentName:"tr",align:"left"},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Title"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"item_name")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"subject")),(0,r.kt)("td",{parentName:"tr",align:"left"},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Publish setting"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"is_public")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"open_flg")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A value of ",(0,r.kt)("inlineCode",{parentName:"td"},"TRUE")," corresponds to a published content status, while ",(0,r.kt)("inlineCode",{parentName:"td"},"FALSE")," corresponds to unpublished.")))),(0,r.kt)("h3",{id:"2-add-the-corresponding-fields"},"2. Add the corresponding fields"),(0,r.kt)("p",null,"Next, set up the additional fields as follows:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Field ID"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Field name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Identifier (CSV column name)"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Format (field settings)"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Item code"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"item_number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Single-line text"),(0,r.kt)("td",{parentName:"tr",align:"left"},'This is the same CSV column that is mapped to "ID/Slug", but here the original numerical value is retrieved without the prefix.')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"description")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Multi-line text"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Availability"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"status")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Dropdown selection"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Set the following options: ",(0,r.kt)("ul",null,(0,r.kt)("li",null,(0,r.kt)("inlineCode",{parentName:"td"},"0::Out of stock")),(0,r.kt)("li",null,(0,r.kt)("inlineCode",{parentName:"td"},"1::Available"))))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Color(s)"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"item_color")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Multiple choice (checkbox)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Set the following options: ",(0,r.kt)("ul",null,(0,r.kt)("li",null,(0,r.kt)("inlineCode",{parentName:"td"},"black::black")),(0,r.kt)("li",null,(0,r.kt)("inlineCode",{parentName:"td"},"white::white")),(0,r.kt)("li",null,(0,r.kt)("inlineCode",{parentName:"td"},"silver::silver")),(0,r.kt)("li",null,(0,r.kt)("inlineCode",{parentName:"td"},"red::red")),(0,r.kt)("li",null,(0,r.kt)("inlineCode",{parentName:"td"},"blue::blue"))))))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"For the additional fields, the endpoint parameters will be the same as the custom-defined identifiers.")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/6df10153b95b90dee0efa5b3008f9a78.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/6df10153b95b90dee0efa5b3008f9a78.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"When you are done, click ","[Add]"," at the bottom of the screen the save this content structure."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/056fd27c4799006d9a9d595904efe77e.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/056fd27c4799006d9a9d595904efe77e.png",alt:"Image from Gyazo"})),(0,r.kt)("h3",{id:"3-create-categories"},"3. Create categories"),(0,r.kt)("p",null,"Finally, create ",(0,r.kt)("a",{parentName:"p",href:"/docs/management/content-structure-topics-category/"},"categories"),' to classify your mobile devices. "Category name" is the item category value, and "Field 01" is the key.'),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Category ID"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Category name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Field 01"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"(Auto-generated)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Smartphone"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SP")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"(Auto-generated)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Tablet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TB")))),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/c22287aa94fd9c75d930bbd55e205027.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/c22287aa94fd9c75d930bbd55e205027.png",alt:"Image from Gyazo"})),(0,r.kt)("h2",{id:"create-an-admin-account-to-run-the-back-end-processes"},"Create an admin account to run the back-end processes"),(0,r.kt)("p",null,"Now we need to create an account to run the back-end process. The member ID will be used in the batch process."),(0,r.kt)("h3",{id:"create-a-new-member"},"Create a new member"),(0,r.kt)("p",null,"Open the ",(0,r.kt)("a",{parentName:"p",href:"/docs/management/member/#member-editor"},"Member editor")," and set up a new account as follows:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"System Admin")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Enter a value for back-end use only.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"E-mail"),(0,r.kt)("td",{parentName:"tr",align:"left"},"(your e-mail)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Enter your e-mail address.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Login ID"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"system")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Enter a value for back-end use only.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Password"),(0,r.kt)("td",{parentName:"tr",align:"left"},"(any password)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Set a strong, unique password.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Group"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Admin"),(0,r.kt)("td",{parentName:"tr",align:"left"},'Select a group with superuser privileges. For this tutotial, we are using the default group "Admin" (group ID = 1).')))),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/f9756c11376912d05ec701d44645eaa6.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/f9756c11376912d05ec701d44645eaa6.png",alt:"Image from Gyazo"})),(0,r.kt)("h3",{id:"define-the-constants"},"Define the constants"),(0,r.kt)("p",null,"You also need to add a new ",(0,r.kt)("a",{parentName:"p",href:"/docs/management/constants/"},"constant")," for the batch process."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"SYSTEM_MEMBER_ID"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("td",{parentName:"tr",align:"left"},'(Enter the member ID of the "System Admin" account you created above.)')))),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/06ccf1b3b18a25a19a3e8eeb0cfe0553.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/06ccf1b3b18a25a19a3e8eeb0cfe0553.png",alt:"Image from Gyazo"}),"  "),(0,r.kt)("h2",{id:"api-settings"},"API settings"),(0,r.kt)("h3",{id:"create-a-new-api"},"Create a new API"),(0,r.kt)("p",null,"Access the ",(0,r.kt)("a",{parentName:"p",href:"/docs/management/api-list/"},"API")," screen and create a new API to set the endpoint for backend processing.  "),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Mixing endpoints with different purposes (for front-end, back-end, etc.) in the same API complicates authentication settings.\nSince this may increase security risks, it is recommended to separate the API settings by usage.")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/1dc3002c34eb9d712ff5e158cf3e0de4.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/1dc3002c34eb9d712ff5e158cf3e0de4.png",alt:"Image from Gyazo"})),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Item name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"title"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Internal API"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Set a value that makes it easy to identify that it is for backend use.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"version"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1.0"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"description"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Internal API for Backend Process"),(0,r.kt)("td",{parentName:"tr",align:"left"})))),(0,r.kt)("p",null,"After creating the API, click ","[Security]",", select ","[Dynamic Access Token]",", and save."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/afbae4943c2c1e93f6cfae6e527f0182.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/afbae4943c2c1e93f6cfae6e527f0182.png",alt:"Image from Gyazo"})),(0,r.kt)("h3",{id:"add-the-bulk_upsert-endpoint"},"Add the ",(0,r.kt)("inlineCode",{parentName:"h3"},"bulk_upsert")," endpoint"),(0,r.kt)("p",null,"Click the ","[Add new endpoint]"," button to add the bulk_upsert endpoint to the API you just set up. "),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/7b423a69ccff0c059738fdda16713c70.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/7b423a69ccff0c059738fdda16713c70.png",alt:"Image from Gyazo"})),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Item name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Path"),(0,r.kt)("td",{parentName:"tr",align:"left"},"mobile_devices/bulk_upsert"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Model"),(0,r.kt)("td",{parentName:"tr",align:"left"},"category\u30fc: Content",(0,r.kt)("br",null),"Model: Topics (v1)",(0,r.kt)("br",null),"Operation: bulk_upsert"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"API request restriction"),(0,r.kt)("td",{parentName:"tr",align:"left"},"GroupAuth (Admin)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Set a group that the member created previously at ",(0,r.kt)("a",{parentName:"td",href:"#create-a-new-member"},"Create a new member")," belongs to.")))),(0,r.kt)("p",null,"For the basic settings and advanced settings, set the following values."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/b0f40c599f4b58e100926182ef913f3e.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/b0f40c599f4b58e100926182ef913f3e.png",alt:"Image from Gyazo"}),"  "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Parameter name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"topics_group_id"),(0,r.kt)("td",{parentName:"tr",align:"left"},"12"),(0,r.kt)("td",{parentName:"tr",align:"left"},'ID of the topics group to be updated. Set the ID numbered to the topics group "mobile device" created previously.')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"id_reference_allow_list"),(0,r.kt)("td",{parentName:"tr",align:"left"},"slug"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Set items that can be specified as keys when updating content. Detail is explained below.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ignore_errors"),(0,r.kt)("td",{parentName:"tr",align:"left"},"true"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Ignores rows with validation errors and add/update only valid content.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Regarding id_reference_allow_list parameter")),(0,r.kt)("p",null,"When updating existing content with the bulk_upsert API, you need to specify the ",(0,r.kt)("inlineCode",{parentName:"p"},"topics_id")," which is the key to identify the target content. Normally, we specify the number automatically assigned by Kuroco as follows."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n    "topics_id": 1,\n    "slug": "ITEM-00000001",\n    "subject": "Smartphone",\n    ...\n}\n')),(0,r.kt)("p",null,"The problem here is how to identify the ",(0,r.kt)("inlineCode",{parentName:"p"},"topics_id")," to be updated.  "),(0,r.kt)("p",null,"For other items, values can be converted from the CSV file, but ",(0,r.kt)("inlineCode",{parentName:"p"},"topics_id")," is data held only by Kuroco. In order to identify this value, it is necessary to call the list API in advance to obtain the existing content. However, implementing this has the following problems:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Program gets complicated"),(0,r.kt)("li",{parentName:"ul"},"Process time increases")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"id_reference_allow_list")," is a parameter prepared to solve the above. If it is set, you can add or update content using any item as a key instead of topics_id. For example, if ",(0,r.kt)("inlineCode",{parentName:"p"},"slug")," is set like this time, the following requests can be specified."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n    "topics_id": "slug",\n    "slug": "ITEM-00000001",\n    "subject": "Updated Title",\n    ...\n}\n')),(0,r.kt)("p",null,"If the above data is sent, if the content of ",(0,r.kt)("inlineCode",{parentName:"p"},'slug = "ITEM-00000001"')," already exists, it will be updated, otherwise it will be newly added. This makes it possible to add content using only the ID of the original data without considering the ",(0,r.kt)("inlineCode",{parentName:"p"},"topics_id")," numbered by Kuroco."),(0,r.kt)("h2",{id:"implement-batch-process"},"Implement batch process"),(0,r.kt)("p",null,"Using the settings set up so far, we will implement batch process that executes daily import.  "),(0,r.kt)("p",null,"First, access the ",(0,r.kt)("a",{parentName:"p",href:"/docs/management/batch/#batch-editor"},"Batch editor")," screen and enter the following contents."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/ef837bb2c38b9d5640036c85073b2f17.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/ef837bb2c38b9d5640036c85073b2f17.png",alt:"Image from Gyazo"})),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Item name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"title"),(0,r.kt)("td",{parentName:"tr",align:"left"},"upsert_mobile_devices")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Identifier"),(0,r.kt)("td",{parentName:"tr",align:"left"},"upsert_mobile_devices")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Batch"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Every day/00:00")))),(0,r.kt)("p",null,"After entering above, enter the following code in the ",(0,r.kt)("inlineCode",{parentName:"p"},"Process")," field and click ","[Add]",".  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-smarty"},"{*\n    Pre-processing\n*}\n{* Authenticate using the member ID set in the constant *}\n{login member_id=$smarty.const.SYSTEM_MEMBER_ID overwrite=true}\n\n{* Check if CSV file is placed *}\n{assign var='uploaded_csv_path' value='/files/ltd/bulk_upsert/mobile_devices.csv'}\n{if !$uploaded_csv_path|rcms_file_exists}\n    {logger msg1='upsert_mobile_devices' msg2='CSV file is not found'}\n    {return}\n{/if}\n{* Check the update date and time of CSV file *}\n{assign var='csv_updated_at' value=$uploaded_csv_path|rcms_file_mtime}\n{if $csv_updated_at < '-1 day 0:00:00'|strtotime}\n    {logger msg1='upsert_mobile_devices' msg2='CSV file is not updated'}\n    {return}\n{/if}\n\n{* %% bulk_upsert %% *}\n")),(0,r.kt)("p",null,"Next, replace the commented part ",(0,r.kt)("inlineCode",{parentName:"p"},"{* %% bulk_upsert %% *}")," in the code above with the actual content update process."),(0,r.kt)("p",null,"First, access the ",(0,r.kt)("a",{parentName:"p",href:"/docs/management/api-list/#swagger-ui"},"Swagger UI")," screen and select the endpoint ",(0,r.kt)("inlineCode",{parentName:"p"},"mobile_devices/bulk_upsert")," created previously.  "),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/56913274f0c4421ce4de7fe8795a1481.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/56913274f0c4421ce4de7fe8795a1481.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Click ","[Request body]"," -> ","[Schema]"," to see the definition of the request body accepted by the bulk_upsert endpoint.  "),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/72daafababe90bb2cc6298c900fd3954.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/72daafababe90bb2cc6298c900fd3954.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"The bulk_upsert API accepts request bodies in the following two formats.\nThis time, we will proceed with processing using the JSON format."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Format"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Request body"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"JSON"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},'{"list": [{...}]}'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"CSV file"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},'{"file": {...}, "encoding": "..."}'))))),(0,r.kt)("h3",{id:"when-updating-in-json-format"},"When updating in JSON format"),(0,r.kt)("p",null,"You can see a detailed definition of each item by expanding the ",(0,r.kt)("inlineCode",{parentName:"p"},"list")," property from the Request body schema.  "),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/6f1d5a6891f8cd3016327ba107119640.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/6f1d5a6891f8cd3016327ba107119640.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Comparing the above schema with the items we are updating, we can see that the request body should look something like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'{\n    "list": [\n        {\n            "topics_id": "slug",\n            "slug": "ITEM-00000001",\n            "subject": "SmartPhone",\n            "contents_type": 78,\n            "open_flg": 1,\n            "ymd": "2020-12-10",\n            "item_number": "00000001",\n            "description": "Smartphone",\n            "status": "1",\n            "item_color": ["black", "white", "red", "blue"]\n        },\n        {\n            "topics_id": "slug",\n            "slug": "ITEM-00000001",\n            // ...\n        },\n        // ...\n    ]\n}\n')),(0,r.kt)("p",null,"Now that we know the format of the request body to pass to the endpoint, we can implement batch process. Add the following code to the batch process created earlier and click the ","[Update]"," button."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-smarty"},"{*\n    Initiate necessary constants\n*}\n{* json body ({\"list\": []}) passed to bulk_upsert endpoint *}\n{assign_array var='bulk_upsert_body'      values=''}\n{assign_array var='bulk_upsert_body.list' values=''}\n\n{assign_array   var='csv_header' values=''}{* CSV header ([]) *}\n{assign         var='chunk_unit' value=1000}{* Unit for split upload *}\n\n{*\n    Get the total number of rows of CSV to be processed in advance\n*}\n{assign var='last_index' value=-1}\n{read_file name='uploaded_csv' row='csv_row' type='csv' path=$uploaded_csv_path}\n    {assign var='last_index' value=$last_index+1}\n    {logger msg1=\"last_index\u53d6\u5f97\u51e6\u7406\" msg2=$last_index}\n{/read_file}\n\n{*\n    Update process\n*}\n{* index indicating the row being processed *}\n{assign var='i' value=0}\n{* Read CSV file *}\n{read_file name='uploaded_csv' row='csv_row' type='csv' path=$uploaded_csv_path}\n    {if !$csv_row|@is_array}\n        {logger msg1='upsert_mobile_devices' msg2='Invalid csv row' msg3=$csv_row}\n    {elseif $i === 0}\n        {* Get CSV header *}\n        {assign var='csv_header' value=$csv_row}\n        {$csv_header|@rcms_json_encode}\n        {logger msg1=\"CGet CSV header\" msg2=$csv_row}\n    {else}\n        {logger msg1=\"Get CSV header\"}\n        {* CSV\u884c\u306e\u5909\u63db *}\n        {assign_array var='topics'           values=''}\n        {assign       var='topics.topics_id' value='slug'}{* add/update slug as key *}\n        {foreach from=$csv_row key='k' item='v'}\n            {assign var='col_name'   value=$csv_header[$k]}{* Get CSV Item name *}\n            {if     $col_name == 'item_number'}\n                {* Product no. *}\n                {assign var='topics.slug'        value=\"ITEM-`$v`\"}\n                {assign var='topics.item_number' value=$v}\n            {elseif $col_name == 'item_name'}\n                {* Item name *}\n                {assign var='topics.subject' value=$v}\n            {elseif $col_name == 'category'}\n                {* category *}\n                {if     $v == 'SP'}\n                    {assign var='topics.contents_type' value=78}\n                {elseif $v == 'TB'}\n                    {assign var='topics.contents_type' value=79}\n                {/if}\n            {elseif $col_name == 'item_color'}\n                {* color *}\n                {assign var='topics.item_color' value=','|explode:$v}\n            {elseif $col_name == 'release_date'}\n                {* release date *}\n                {strtodate var='topics.ymd' format='Y-m-d' timestamp=$v}\n            {elseif $col_name == 'is_public'}\n                {* public/private *}\n                {if $v == 'TRUE'}\n                    {assign var='topics.open_flg' value=1}\n                {else}\n                    {assign var='topics.open_flg' value=0}\n                {/if}\n            {else}\n                {* Others *}\n                {assign var=\"topics.`$col_name`\" value=$v}\n            {/if}\n        {/foreach}\n        {* Add to JSON body ({\"list\": [..., {...}]}) *}\n        {assign var='bulk_upsert_body.list.' value=$topics}\n    {/if}\n    {* Update by dividing for each number defined in $chunk_unit *}\n    {if $bulk_upsert_body|@count === $chunk_unit ||\n        ($i === $last_index && $bulk_upsert_body|@count > 0)}\n        {* Request to bulk_upsert endpoint (Add _async=true parameter and execute in batch process) *}\n        {api_internal\n            var='bulk_upsert_response'\n            status_var='bulk_upsert_status'\n            endpoint='/rcms-api/8/mobile_devices/bulk_upsert?_async=true'\n            method='POST'\n            queries=$bulk_upsert_body\n            member_id=$smarty.session.member_id}\n        {* Output to log if failed *}\n        {if !$bulk_upsert_status || $bulk_upsert_response.errors}\n            {logger msg1='upsert_mobile_devices' msg2='Request failed' msg3=\"index: `$i`\" msg4=$bulk_upsert_response}\n        {/if}\n        {* JSON body\u306e\u521d\u671f\u5316 ({\"list\": []}) *}\n        {assign_array var='bulk_upsert_body.list' values=''}\n    {/if}\n    {logger msg1=$i msg2=$last_index msg3=$topics msg4=$csv_row}\n    {assign var='i' value=$i+1}\n{/read_file}\n")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Replace ",(0,r.kt)("inlineCode",{parentName:"p"},"/rcms-api/8/mobile_devices/bulk_upsert")," with your own endpoint.",(0,r.kt)("br",{parentName:"p"}),"\n","Use the category ID in your environment for ",(0,r.kt)("inlineCode",{parentName:"p"},"{assign var='topics.contents_type' value=78}"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"{assign var='topics.contents_type' value=79}"),".")),(0,r.kt)("p",null,"We supplement the details of the processing."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"About reading CSV files")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"read_file")," is a plugin for reading text data line by line. It can be used to read CSV files by specifying ",(0,r.kt)("inlineCode",{parentName:"p"},"csv")," for the ",(0,r.kt)("inlineCode",{parentName:"p"},"type")," parameter.",(0,r.kt)("br",{parentName:"p"}),"\n","The character code that can be read by ",(0,r.kt)("inlineCode",{parentName:"p"},"read_file")," is UTF-8 only.  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-smarty"},"{read_file name='uploaded_csv' row='csv_row' type='csv' path=$uploaded_csv_path}\n    {* ... *}\n{/read_file}\n")),(0,r.kt)("p",null,"The CSV row data is assigned to the variable name ",(0,r.kt)("inlineCode",{parentName:"p"},"$csv_row")," specified by the ",(0,r.kt)("inlineCode",{parentName:"p"},"row")," parameter. You can check the contents of the data by writing the following process inside the ",(0,r.kt)("inlineCode",{parentName:"p"},"{read_file}{/read_file}")," block.  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-smarty"},"{$csv_row|@rcms_json_encode}\n")),(0,r.kt)("p",null,"The following array data is output. The request body is generated by transforming these values based on the field definition.  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'["00000001", "SmartPhone", "SP", "Smartphone", "1", "black,white,red,blue", "2020/12/10", "TRUE"]\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"About adding/updating contents")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"api_internal")," plugin is used to call the ",(0,r.kt)("inlineCode",{parentName:"p"},"bulk_upsert")," endpoint for adding/updating content.",(0,r.kt)("br",{parentName:"p"}),"\n","Please refer to ",(0,r.kt)("a",{parentName:"p",href:"/docs/faq/how-to-request-kuroco-api-from-smarty-function/"},"Can I call Kuroco's API from custom function?")," for more information on how to use it."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-smarty"},"{api_internal\n    var='bulk_upsert_response'\n    status_var='bulk_upsert_status'\n    endpoint='/rcms-api/23/mobile_devices/bulk_upsert?_async=true'\n    method='POST'\n    queries=$bulk_upsert_body\n    member_id=$smarty.session.member_id}\n")),(0,r.kt)("p",null,"The endpoint path has the ",(0,r.kt)("inlineCode",{parentName:"p"},"_async=true")," parameter to execute API processing asynchronously.  "),(0,r.kt)("p",null,"Calls to endpoints are typically synchronous. After submitting the request, you need to wait for the processing to complete. However, since the bulk_upsert API handles a large amount of content at once, depending on the number of CSV data, it may take some time to complete the process, resulting in a timeout.  "),(0,r.kt)("p",null,"If you use the ",(0,r.kt)("inlineCode",{parentName:"p"},"_async=true")," parameter, it will only register the batch process and return the response immediately without executing the addition/update process at the time of the request. The processing of the called API is executed in a separate process from the caller, so timeout issues can be avoided. Specify this when the number of data to be updated is large.  "),(0,r.kt)("h2",{id:"check-the-operation"},"Check the operation"),(0,r.kt)("p",null,"Now that the settings have been completed, let's check the operation.",(0,r.kt)("br",{parentName:"p"}),"\n","First, place the CSV file (",(0,r.kt)("inlineCode",{parentName:"p"},"mobile_devices.csv"),") in the directory (",(0,r.kt)("inlineCode",{parentName:"p"},"/ltd/bulk_upsert"),") specified by batch processing.\u3000\u3000\nSince the KurocoFiles (Private) folder will be ",(0,r.kt)("inlineCode",{parentName:"p"},"ltd"),", create a ",(0,r.kt)("inlineCode",{parentName:"p"},"bulk_upsert")," folder under it and set the CSV file.  "),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/9cf8603faace864ed3669f67d9b807e2.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/9cf8603faace864ed3669f67d9b807e2.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Next, access the editor screen created previously and click ","[Run now]",".",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/3a1b7c113849f37aa1bbf22013f238e6.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/3a1b7c113849f37aa1bbf22013f238e6.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,'If you check the contents list of "mobile device", you can see that the contents are registered from CSV.  '),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/e42398db58721d3da48ea595f8c3de6c.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/e42398db58721d3da48ea595f8c3de6c.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Confirmation of operation is completed."),(0,r.kt)("h2",{id:"related-documents"},"Related documents"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/management/batch/"},"Batch")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/management/constants/"},"Constants")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/faq/how-to-request-kuroco-api-from-smarty-function/"},"Can I call Kuroco's API from custom function?")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/faq/can-i-update-topics-files-using-bulk_upsert-api/"},"Can I update image and file fields with the bulk_upsert API for content?"))))}c.isMDXComponent=!0}}]);