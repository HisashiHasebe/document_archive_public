"use strict";(self.webpackChunkkurokuro=self.webpackChunkkurokuro||[]).push([[13412],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>g});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),m=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=m(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=m(a),c=r,g=p["".concat(l,".").concat(c)]||p[c]||u[c]||i;return a?n.createElement(g,o(o({ref:t},d),{},{components:a})):n.createElement(g,o({ref:t},d))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:r,o[1]=s;for(var m=2;m<i;m++)o[m]=a[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},12739:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>m});var n=a(87462),r=(a(67294),a(3905));const i={title:"Set form response data to member information of users that automatically registered via form submission",description:"In this tutorial, we will introduce how to add form response data to the member information of automatically registered users using custom function."},o=void 0,s={unversionedId:"tutorials/how-to-implement-original-function-into-the-member-info-when-form-send-with-member-regist",id:"tutorials/how-to-implement-original-function-into-the-member-info-when-form-send-with-member-regist",title:"Set form response data to member information of users that automatically registered via form submission",description:"In this tutorial, we will introduce how to add form response data to the member information of automatically registered users using custom function.",source:"@site/docs/tutorials/how-to-implement-original-function-into-the-member-info-when-form-send-with-member-regist.md",sourceDirName:"tutorials",slug:"/tutorials/how-to-implement-original-function-into-the-member-info-when-form-send-with-member-regist",permalink:"/docs/tutorials/how-to-implement-original-function-into-the-member-info-when-form-send-with-member-regist",draft:!1,editUrl:"https://github.com/diverta/kuroco-documents/tree/main/packages/create-docusaurus/templates/shared/docs/tutorials/how-to-implement-original-function-into-the-member-info-when-form-send-with-member-regist.md",tags:[],version:"current",frontMatter:{title:"Set form response data to member information of users that automatically registered via form submission",description:"In this tutorial, we will introduce how to add form response data to the member information of automatically registered users using custom function."},sidebar:"documentationSidebar",previous:{title:"Sending notification messages to users who submitted a form response",permalink:"/docs/tutorials/sending-notification-messages-to-users-who-submitted-form-responses"},next:{title:"Registering notification subscribers",permalink:"/docs/tutorials/how-to-register-subscribers-on-magazine"}},l={},m=[{value:"Overview",id:"overview",level:2},{value:"What you&#39;ll learn",id:"what-youll-learn",level:3},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Setting up the API used in custom function",id:"setting-up-the-api-used-in-custom-function",level:2},{value:"API settings for internal processing",id:"api-settings-for-internal-processing",level:3},{value:"Creating API",id:"creating-api",level:4},{value:"Security settings",id:"security-settings",level:4},{value:"CORS settings",id:"cors-settings",level:4},{value:"Create API endpoints for internal processing",id:"create-api-endpoints-for-internal-processing",level:3},{value:"Creating an form response information detailed acquisition API",id:"creating-an-form-response-information-detailed-acquisition-api",level:4},{value:"Creating a Member Update API",id:"creating-a-member-update-api",level:4},{value:"Creating Custom function",id:"creating-custom-function",level:2},{value:"1. Display the list of custom function",id:"1-display-the-list-of-custom-function",level:3},{value:"2. Accessing the custom function editor page",id:"2-accessing-the-custom-function-editor-page",level:3},{value:"3. Enter the title and identifier",id:"3-enter-the-title-and-identifier",level:3},{value:"Custom function",id:"custom-function",level:4},{value:"Form Item Settings",id:"form-item-settings",level:4},{value:"Member Item Settings",id:"member-item-settings",level:4},{value:"4. Save custom function",id:"4-save-custom-function",level:3},{value:"5. To only link form data and member items during the initial registration",id:"5-to-only-link-form-data-and-member-items-during-the-initial-registration",level:3},{value:"Uncomment the following code in the post-process",id:"uncomment-the-following-code-in-the-post-process",level:4},{value:"Pre-process custom function to check if user is already registered as a member",id:"pre-process-custom-function-to-check-if-user-is-already-registered-as-a-member",level:4},{value:"Set the created custom function as a post-process in the endpoint",id:"set-the-created-custom-function-as-a-post-process-in-the-endpoint",level:2},{value:"Verify the operation using Swagger.",id:"verify-the-operation-using-swagger",level:2},{value:"Sample data",id:"sample-data",level:4},{value:"Member information after registration",id:"member-information-after-registration",level:4},{value:"Related documents",id:"related-documents",level:2}],d={toc:m},p="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(p,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,'By checking the "Automatic user registration" option in the form basic settings, you can automatically register users with the email address that submitted the form response. In this tutorial, we will introduce how to add form response data to the member information of automatically registered users using custom function.'),(0,r.kt)("h3",{id:"what-youll-learn"},"What you'll learn"),(0,r.kt)("p",null,"You'll learn how to set up the following functions:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Setting-up-the-API-used-in-custom-processing"},"Setting up the API used in custom function")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Creating-custom-processing"},"Creating custom function")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Setting-the-created-custom-processing-as-the-API-post-process"},"Setting the created custom function as the API post-process")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Verifying-the-operation-using-Swagger"},"Verifying the operation using Swagger"))),(0,r.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"This tutorial assumes that the feature to automatically register member after a form submission has already been set up by referring to the following tutorial:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/tutorials/sending-notification-messages-to-users-who-submitted-form-responses/"},"Sending notification messages to users who submitted a form response"))),(0,r.kt)("h2",{id:"setting-up-the-api-used-in-custom-function"},"Setting up the API used in custom function"),(0,r.kt)("p",null,"Next, we will set the following APIs used in custom function."),(0,r.kt)("h3",{id:"api-settings-for-internal-processing"},"API settings for internal processing"),(0,r.kt)("p",null,"It is recommended to create a separate API for endpoints that are used only within Kuroco. Therefore, first, create a new API for internal use. If it has already been added, you can skip the next step."),(0,r.kt)("h4",{id:"creating-api"},"Creating API"),(0,r.kt)("p",null,"Click ","[Add]"," from the API in the Kuroco Admin panel."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/9ecf385ebd0bbd4ed2fce44c5b03908a.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/9ecf385ebd0bbd4ed2fce44c5b03908a.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"The API creation screen is displayed. Enter the following information and click ","[Add]","."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/4ad1441b5747037b667256ac969fa60a.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/4ad1441b5747037b667256ac969fa60a.png",alt:"Image from Gyazo"})),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Item"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Setting"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Title"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Internal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Version"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("td",{parentName:"tr",align:"left"},"API for internal use")))),(0,r.kt)("p",null,"This completes the API creation."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/42d21c717bec7d592b968486a036da90.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/42d21c717bec7d592b968486a036da90.png",alt:"Image from Gyazo"})),(0,r.kt)("h4",{id:"security-settings"},"Security settings"),(0,r.kt)("p",null,"Next, configure the security settings. Click on ","[Security]","."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/02b9bb7afc1ef03a4f26f524267c76a8.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/02b9bb7afc1ef03a4f26f524267c76a8.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Set security to ","[Dynamic access token]"," and click ","[Save]","."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/0a121f90acd9ef3c1494cd895d922dae.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/0a121f90acd9ef3c1494cd895d922dae.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"After setting security to ","[Dynamic access token]",', the message "Since this API is configured to use token, it is recommended to add an endpoint that implements Authentication::Login::token." is displayed, but it can be ignored if it is only for internal use.'),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/8ab8a67d5768bf7d84e6e8dc79753de1.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/8ab8a67d5768bf7d84e6e8dc79753de1.png",alt:"Image from Gyazo"})),(0,r.kt)("h4",{id:"cors-settings"},"CORS settings"),(0,r.kt)("p",null,"Next, configure the CORS settings. Click on ","[Operation CORS]","."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/706501419568a0dc13e7312f83da4fd4.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/706501419568a0dc13e7312f83da4fd4.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Click ","[Add Origin]"," in CORS_ALLOW_ORIGINS and add the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Admin panel URL")),(0,r.kt)("p",null,"Click ","[Add Method]"," in CORS_ALLOW_METHODS and add the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"GET"),(0,r.kt)("li",{parentName:"ul"},"POST"),(0,r.kt)("li",{parentName:"ul"},"OPTIONS")),(0,r.kt)("p",null,"Make sure that ","[Allow Credentials]"," is checked in CORS_ALLOW_CREDENTIALS."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/cc94eb7d3a09a673440a54c17e69242e.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/cc94eb7d3a09a673440a54c17e69242e.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Click ","[Save]"," after setting."),(0,r.kt)("h3",{id:"create-api-endpoints-for-internal-processing"},"Create API endpoints for internal processing"),(0,r.kt)("p",null,"We will create endpoints that will be used in the newly created API.",(0,r.kt)("br",{parentName:"p"}),"\n","In this tutorial, we will configure the following two endpoints:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Form response information detailed acquisition API"),(0,r.kt)("li",{parentName:"ul"},"Member update API")),(0,r.kt)("h4",{id:"creating-an-form-response-information-detailed-acquisition-api"},"Creating an form response information detailed acquisition API"),(0,r.kt)("p",null,"Click ","[Add new endpoint]","."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/d13dbe050d52ad41b2c82fef6c71d867.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/d13dbe050d52ad41b2c82fef6c71d867.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Create the following endpoint:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Item"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Setting"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Path"),(0,r.kt)("td",{parentName:"tr",align:"left"},"inquiry_details")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Category"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Form")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Model"),(0,r.kt)("td",{parentName:"tr",align:"left"},"InquiryMessage")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Operation"),(0,r.kt)("td",{parentName:"tr",align:"left"},"details")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"GroupAuth"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Admin",(0,r.kt)("br",null),"Although it is an internal processing API group and is not called from the frontend, access restrictions are added as a precaution.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"inquiry_id"),(0,r.kt)("td",{parentName:"tr",align:"left"},'Specify the ID of the form created in the "Prerequisites" section.')))),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/0a63106a448e9bcd0277268b0ac92e40.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/0a63106a448e9bcd0277268b0ac92e40.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Click ","[Add]"," to add the endpoint."),(0,r.kt)("h4",{id:"creating-a-member-update-api"},"Creating a Member Update API"),(0,r.kt)("p",null,"Click ","[Add a new endpoint]","."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/d13dbe050d52ad41b2c82fef6c71d867.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/d13dbe050d52ad41b2c82fef6c71d867.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Create the following endpoint."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Path"),(0,r.kt)("td",{parentName:"tr",align:"left"},"self-member-update")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Category"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Member")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Model"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Member")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Operation"),(0,r.kt)("td",{parentName:"tr",align:"left"},"update")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"self_only"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Check")))),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"The above are the bare minimum settings. Please adjust the settings such as ",(0,r.kt)("inlineCode",{parentName:"p"},"allowed_group_ids")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"use_columns")," accordingly for your site.")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/21a3bd60f150f3ba74ba463b46289e86.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/21a3bd60f150f3ba74ba463b46289e86.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"After configuring, click ","[Add]"," to add the endpoint."),(0,r.kt)("h2",{id:"creating-custom-function"},"Creating Custom function"),(0,r.kt)("p",null,"Now, let's create custom function."),(0,r.kt)("h3",{id:"1-display-the-list-of-custom-function"},"1. Display the list of custom function"),(0,r.kt)("p",null,"Click ","[Operation]"," -> ","[Custom function]"," on the menu."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/25dc5649ab2fc103cdcf869df1733a62.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/25dc5649ab2fc103cdcf869df1733a62.png",alt:"Image from Gyazo"})),(0,r.kt)("h3",{id:"2-accessing-the-custom-function-editor-page"},"2. Accessing the custom function editor page"),(0,r.kt)("p",null,"Click ","[Add]"," in the upper right corner of the custom function list screen."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/f57598cae50ea22b3d6822aed1d888a3.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/f57598cae50ea22b3d6822aed1d888a3.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Then, the custom function editor will be displayed."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/476c58d9cdd8f356a8e5658e8bc5b1de.jpg?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/476c58d9cdd8f356a8e5658e8bc5b1de.jpg",alt:"Image from Gyazo"})),(0,r.kt)("h3",{id:"3-enter-the-title-and-identifier"},"3. Enter the title and identifier"),(0,r.kt)("p",null,"Let's create custom function. First, enter the title and identifier as follows:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Title: Link inquiry and member registration data"),(0,r.kt)("li",{parentName:"ul"},"Identifier: member-register-when-inquiry-send")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"The title and identifier cannot overlap with other custom functions. Please avoid using the same name as other contents, e.g. the name of the endpoints to be implemented.")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/664c9fc520671f781c0c54ba32101455.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/664c9fc520671f781c0c54ba32101455.png",alt:"Image from Gyazo"})),(0,r.kt)("h4",{id:"custom-function"},"Custom function"),(0,r.kt)("p",null,"Enter the function to update the registered member information based on the contents of the form response as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-smarty"},"{assign var=update_member_flg value=1}\n\n{* Perform processing only if the user is not logged in (if the user is already registered, they have already been registered) *}\n{if $smarty.session.member_id}\n    {assign var=update_member_flg value=0}\n{/if}\n\n{* If there is already a registered member, add judgment processing to the preprocess and uncomment the following part *}\n{*}\n{assign_session var=exist_member_flg key='exist_member_flg'}\n{if $exist_member_flg}\n    {assign var=update_member_flg value=0}\n{/if}\n{*}\n\n{if $update_member_flg}\n    {* Get member ID from inquiry data *}\n    {assign var=inquiry_bn_id value=$json.id}\n    {api_internal endpoint='/rcms-api/2/inquiry_details/'|cat:$inquiry_bn_id member_id=1 method='GET' var=inquiry_response status_var=status}\n    {if $status==1}\n        {assign var=member_id value=$inquiry_response.details.member_id}\n        {if $member_id}\n            {* Get inquiry information *}\n            {assign var=tel value=$inquiry_response.details.ext_01}\n            {assign var=address value=$inquiry_response.details.ext_03}\n            {assign var=sex value=$inquiry_response.details.ext_04.key}{* If it is a selection format, link the key *}\n            {assign var=birth value=$inquiry_response.details.ext_05}\n\n            {* Update member information *}\n            {assign_array var=queries values=''}\n            {assign var=queries.tel value=$tel}\n            {assign var=queries.address1 value=$address}\n            {assign var=queries.ex_sex value=$sex}\n            {assign var=queries.ex_date value=$birth}\n            {api_internal endpoint='/rcms-api/2/self-member-update' method='POST' member_id=$member_id queries=$queries var=member_response status_var=status}\n            {if $status==1}\n                {* Processing succeeded *}\n            {else}\n                {* Error processing *}\n                {logger msg1='member-register-when-inquiry-send' msg2='Cannot set member ext data' msg3=$queries msg4=$member_response}\n            {/if}\n        {else}\n            {* Error processing, case where member registration has failed with standard processing *}\n            {logger msg1='member-register-when-inquiry-send' msg2='Cannot get member_id from inquiry details' msg3=$inquiry_response}\n        {/if}\n    {else}\n        {* Error processing *}\n        {logger msg1='member-register-when-inquiry-send' msg2='Cannot get inquiry details' msg3=$inquiry_response}\n    {/if}\n{/if}\n{$json|@json_encode}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Form item settings for member items"),(0,r.kt)("br",{parentName:"p"}),"\n","The custom function above corresponds to the following form settings/member settings."),(0,r.kt)("p",null,'Configure the following settings in the respective pages, "',(0,r.kt)("a",{parentName:"p",href:"/docs/management/form-field-settings/"},"Form Item Settings"),'" and "',(0,r.kt)("a",{parentName:"p",href:"/docs/management/extra-information/"},"Member's Extended Item Settings"),'".'),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Form Item"),(0,r.kt)("th",{parentName:"tr",align:null},"Form Key Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Member Item"),(0,r.kt)("th",{parentName:"tr",align:null},"Member Key Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Note"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"Last Name",(0,r.kt)("br",null),"First Name"),(0,r.kt)("td",{parentName:"tr",align:null},"name1",(0,r.kt)("br",null),"name2"),(0,r.kt)("td",{parentName:"tr",align:null},"Text"),(0,r.kt)("td",{parentName:"tr",align:null},"Not set for cooperation because it is set by the standard member registration process")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"email"),(0,r.kt)("td",{parentName:"tr",align:null},"email"),(0,r.kt)("td",{parentName:"tr",align:null},"Email"),(0,r.kt)("td",{parentName:"tr",align:null},"email"),(0,r.kt)("td",{parentName:"tr",align:null},"Text"),(0,r.kt)("td",{parentName:"tr",align:null},"Not set for cooperation because it is set by the standard member registration process")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"tel"),(0,r.kt)("td",{parentName:"tr",align:null},"ext_01"),(0,r.kt)("td",{parentName:"tr",align:null},"Phone number"),(0,r.kt)("td",{parentName:"tr",align:null},"tel"),(0,r.kt)("td",{parentName:"tr",align:null},"Text"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"ext_03"),(0,r.kt)("td",{parentName:"tr",align:null},"Address 1"),(0,r.kt)("td",{parentName:"tr",align:null},"address1"),(0,r.kt)("td",{parentName:"tr",align:null},"Text"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sex"),(0,r.kt)("td",{parentName:"tr",align:null},"ext_04"),(0,r.kt)("td",{parentName:"tr",align:null},"Extended-Gender"),(0,r.kt)("td",{parentName:"tr",align:null},"ex_sex"),(0,r.kt)("td",{parentName:"tr",align:null},"Select"),(0,r.kt)("td",{parentName:"tr",align:null},"The options are set to the following for both forms and members. ",(0,r.kt)("br",null),"1::male",(0,r.kt)("br",null),"2::female",(0,r.kt)("br",null),"3::other")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"birth"),(0,r.kt)("td",{parentName:"tr",align:null},"ext_05"),(0,r.kt)("td",{parentName:"tr",align:null},"Extended-Birthday"),(0,r.kt)("td",{parentName:"tr",align:null},"ex_date"),(0,r.kt)("td",{parentName:"tr",align:null},"Date format"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h4",{id:"form-item-settings"},"Form Item Settings"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/4e57dba161c4ba2d2166bcfc49c42a16.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/4e57dba161c4ba2d2166bcfc49c42a16.png",alt:"Image from Gyazo"})),(0,r.kt)("h4",{id:"member-item-settings"},"Member Item Settings"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/8e96c6dd9ad870388cc2a457c8744ab0.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/8e96c6dd9ad870388cc2a457c8744ab0.png",alt:"Image from Gyazo"})),(0,r.kt)("h3",{id:"4-save-custom-function"},"4. Save custom function"),(0,r.kt)("p",null,"After entering the code for the custom function, click the ","[Add]"," button to save."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/e7d8f7e4349b67e52ba13a5624f2f72a.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/e7d8f7e4349b67e52ba13a5624f2f72a.png",alt:"Image from Gyazo"})),(0,r.kt)("h3",{id:"5-to-only-link-form-data-and-member-items-during-the-initial-registration"},"5. To only link form data and member items during the initial registration"),(0,r.kt)("p",null,"The process of registering a member via form submission is only performed when the email address of the existing member does not exist."),(0,r.kt)("p",null,"Therefore, if you do not want to link the form data for users that are already registered as members, add the following process in the pre-process, and uncomment the following code described in the post-process."),(0,r.kt)("h4",{id:"uncomment-the-following-code-in-the-post-process"},"Uncomment the following code in the post-process"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-smarty"},"{*If there are already registered members, add a determination process to the pre-process and uncomment the following part.*}\n{*}\n{assign_session var=exist_member_flg key='exist_member_flg'}\n{if $exist_member_flg}\n    {assign var=update_member_flg value=0}\n{/if}\n{*}\n")),(0,r.kt)("h4",{id:"pre-process-custom-function-to-check-if-user-is-already-registered-as-a-member"},"Pre-process custom function to check if user is already registered as a member"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-smarty"},"{assign_session key='exist_member_flg' value=0}\n{if $smarty.request.email}\n    {*filter member information with email*}\n    {assign var=email value=$smarty.request.email}\n\n    {assign_array var=method_params values=''}\n    {assign var=method_params.filter value='email='|cat:$email}\n    {api_method var=list model=\"Member\" method=\"list\" method_params=$method_params}\n    {if $list.list|@count > 0}\n        {*If exists, do not register new ones or update*}\n        {assign_session key='exist_member_flg' value=1}\n    {/if}\n{/if}\n")),(0,r.kt)("p",null,"The custom function setup is now complete."),(0,r.kt)("h2",{id:"set-the-created-custom-function-as-a-post-process-in-the-endpoint"},"Set the created custom function as a post-process in the endpoint"),(0,r.kt)("p",null,'Set the post-process for the form submission endpoint created in the "Prerequisites" section from the API list screen.',(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/f9ee98b4e21dfaff231bd74920ca6f95.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/f9ee98b4e21dfaff231bd74920ca6f95.png",alt:"Image from Gyazo"})),(0,r.kt)("h2",{id:"verify-the-operation-using-swagger"},"Verify the operation using Swagger."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Call the InquiryMessage:send endpoint with the following sample data from Swagger."),(0,r.kt)("li",{parentName:"ol"},"Confirm that the added member information contains the same information as the form submission.")),(0,r.kt)("h4",{id:"sample-data"},"Sample data"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "test user",\n  "email": "email@example.com",\n  "ext_01": "09022223333",\n  "ext_03": "Tokyo Setagaya-ku",\n  "ext_04": "1",\n  "ext_05": "1980-10-21",\n  "body": "Example Message",\n  "inquiry_category_id": 6\n}\n')),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"inquiry_category_id")," may be different depending on the environment.")),(0,r.kt)("h4",{id:"member-information-after-registration"},"Member information after registration"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/92eb8e49fbeb98f8f74bd4d2e9331888.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/92eb8e49fbeb98f8f74bd4d2e9331888.png",alt:"Image from Gyazo"})),(0,r.kt)("h2",{id:"related-documents"},"Related documents"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/tutorials/sending-notification-messages-to-users-who-submitted-form-responses/"},"Sending notification messages to users who submitted a form response")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/faq/how-to-request-kuroco-api-from-smarty-function/"},"Can I call Kuroco's API from custom function?"))))}u.isMDXComponent=!0}}]);