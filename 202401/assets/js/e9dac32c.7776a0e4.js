"use strict";(self.webpackChunkkurokuro=self.webpackChunkkurokuro||[]).push([[98523],{3905:(e,t,a)=>{a.d(t,{Zo:()=>l,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),c=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},l=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(a),d=r,m=u["".concat(p,".").concat(d)]||u[d]||h[d]||o;return a?n.createElement(m,i(i({ref:t},l),{},{components:a})):n.createElement(m,i({ref:t},l))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},18380:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=a(87462),r=(a(67294),a(3905));const o={title:"How to use batch process in Kuroco",description:"Batch process is an operation that gets executed at regular intervals. Using Kuroco, you can run batch process every 15, 30, 60 minutes, or daily."},i=void 0,s={unversionedId:"tutorials/how-to-use-batch",id:"tutorials/how-to-use-batch",title:"How to use batch process in Kuroco",description:"Batch process is an operation that gets executed at regular intervals. Using Kuroco, you can run batch process every 15, 30, 60 minutes, or daily.",source:"@site/docs/tutorials/how-to-use-batch.md",sourceDirName:"tutorials",slug:"/tutorials/how-to-use-batch",permalink:"/docs/tutorials/how-to-use-batch",draft:!1,editUrl:"https://github.com/diverta/kuroco-documents/tree/main/packages/create-docusaurus/templates/shared/docs/tutorials/how-to-use-batch.md",tags:[],version:"current",frontMatter:{title:"How to use batch process in Kuroco",description:"Batch process is an operation that gets executed at regular intervals. Using Kuroco, you can run batch process every 15, 30, 60 minutes, or daily."},sidebar:"documentationSidebar",previous:{title:"Using custom member filters",permalink:"/docs/tutorials/using-custom-member-filters"},next:{title:"Scheduled generation of screenshot PDFs of external sites",permalink:"/docs/tutorials/how-to-use-generate-pdf"}},p={},c=[{value:"What is batch process?",id:"what-is-batch-process",level:2},{value:"When to use?",id:"when-to-use",level:2},{value:"How to create batch process",id:"how-to-create-batch-process",level:2},{value:"1. Create new batch process.",id:"1-create-new-batch-process",level:3},{value:"2. Specify the batch execution frequency.",id:"2-specify-the-batch-execution-frequency",level:3},{value:"3. Implement the batch process.",id:"3-implement-the-batch-process",level:3},{value:"4. Update",id:"4-update",level:3},{value:"5.How to test",id:"5how-to-test",level:3}],l={toc:c},u="wrapper";function h(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,n.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"what-is-batch-process"},"What is batch process?"),(0,r.kt)("p",null,"Batch process is an operation that gets executed at regular intervals.",(0,r.kt)("br",{parentName:"p"}),"\n","Using Kuroco, you can run batch process every 15, 30, 60 minutes, or daily."),(0,r.kt)("h2",{id:"when-to-use"},"When to use?"),(0,r.kt)("p",null,"It's recommended to run batch process at night or on holidays when there are few system users. This helps to reduce the load on the system and use free resources effectively.  "),(0,r.kt)("p",null,"Additionally, any processes that might increase the load abruptly when multiple users are operating simultaneously can be queued using batch process. The load will be reduced as these processes will be executed one by one.    "),(0,r.kt)("p",null,"For example, you can use it for the following processes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The process of generating CSV to connect with an external system"),(0,r.kt)("li",{parentName:"ul"},"The process of fetching data to Kuroco from an external system by file integration"),(0,r.kt)("li",{parentName:"ul"},"The process of updating various data in the system after the user withdraws"),(0,r.kt)("li",{parentName:"ul"},"The process of aggregating logs to calculate statistical data")),(0,r.kt)("h2",{id:"how-to-create-batch-process"},"How to create batch process"),(0,r.kt)("p",null,"Let's create a batch process that outputs CSV files once a day."),(0,r.kt)("h3",{id:"1-create-new-batch-process"},"1. Create new batch process."),(0,r.kt)("p",null,"Click ","[Operation]"," -> ","[Batch process]"," on the side menu and access the batch process list page.\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/50b86c3ffe79c3bb449cb30e22590760.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/50b86c3ffe79c3bb449cb30e22590760.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Click ","[+Add]"," button on the top right.\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/e2a2665e3fbdc0961749a5cd49ecc022.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/e2a2665e3fbdc0961749a5cd49ecc022.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Input the name and slug of the batch process.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/659cec60231515e85c5d804cc23eb4f2.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/659cec60231515e85c5d804cc23eb4f2.png",alt:"Image from Gyazo"})),(0,r.kt)("h3",{id:"2-specify-the-batch-execution-frequency"},"2. Specify the batch execution frequency."),(0,r.kt)("p",null,'Specify the batch execution frequency in the "Batch" field.',(0,r.kt)("br",{parentName:"p"}),"\n","Kuroco allows the following options:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"every 15 min")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"every 30 min")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"every 1 h")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"every day"))),(0,r.kt)("p",null,'We will set up daily execution at a specific time, so select "Every day" and select "05:00" for the time.'),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/295fb3af90ac36cc434b150cfaf40efa.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/295fb3af90ac36cc434b150cfaf40efa.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Now, the batch process which is executed at 5:00 every day has been created.    "),(0,r.kt)("p",null,'Note:\nIf you select "every day", the process cannot be executed within 23h from the previous execution time.\nFor example, even if you execute it "every 15 minutes" to check the operation and then change the settings to "every day" immediately after that, the previous execution time will be the time when it was executed "every 15 minutes".',(0,r.kt)("br",{parentName:"p"}),"\n","Please note that if the specified time is within 23 hours from that point, the process will be skipped."),(0,r.kt)("h3",{id:"3-implement-the-batch-process"},"3. Implement the batch process."),(0,r.kt)("p",null,'Write the batch process with Smarty syntax in "Process" field.  '),(0,r.kt)("p",null,"First, output the header line  on the temporary file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{assign var="csv_header" value="Topic ID,category ID,category name, title, contents"} {* Note 1 *}\n{write_file var=tmp_path value=$csv_header|cat:"\\n"} {* Note 2 *}\n')),(0,r.kt)("p",null,"Step 1) Use the assign function to save a comma-separated string that will be the CSV header line in a variable called ",(0,r.kt)("inlineCode",{parentName:"p"},"$csv_header"),".    "),(0,r.kt)("p",null,"Step 2) Then save the variable to a temporary file and save the file name to a variable called ",(0,r.kt)("inlineCode",{parentName:"p"},"$tmp_path"),". You can use the write_file function to automatically generate a unique file name and write characters to it.  "),(0,r.kt)("p",null,"Next, get the topic list using API."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{assign var=queries value=$dataSet.emptyArray} {* Step 3 *}\n{append var=queries index=cnt value=0} {* Step 4 *}\n{api_internal   endpoint='/rcms-api/1/topics-list'\n                method='GET'\n                member_id=1\n                queries=$queries\n                var='topics_list_response'\n}\n")),(0,r.kt)("p",null,"Step 3) Prepare an empty array by assigning ",(0,r.kt)("inlineCode",{parentName:"p"},"$dataSet.emptyArray")," to the ",(0,r.kt)("inlineCode",{parentName:"p"},"$queries")," variable. This variable is used as an API query variable."),(0,r.kt)("p",null,"Step 4) Next, assign 0 to the key cnt and make a request to the endpoint'/ rcms-api / 1 / topics-list' with the GET method.",(0,r.kt)("br",{parentName:"p"}),"\n","'/ rcms-api / 1 / topics-list' is supposed to be an endpoint created in advance using the article list module.",(0,r.kt)("br",{parentName:"p"}),"\n","If you pass cnt = 0 to the article list, all articles will be responded without page break. This is done here for simplicity, but actually, set an appropriate number to avoid memory errors.",(0,r.kt)("br",{parentName:"p"}),"\n","If you pass 1 to the member_id attribute of the api_internal function, the API will be called with admin authorization.",(0,r.kt)("br",{parentName:"p"}),"\n","The response is stored in a variable called ",(0,r.kt)("inlineCode",{parentName:"p"},"$topics_list_response"),"."),(0,r.kt)("p",null,"Next, add a response in the temporary file.  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{foreach from=$topics_list_response.list item="topics"} {* Step 5 *}\n  {assign var="row" value=$dataSet.emptyArray} {* Step 6 *}\n  {append var="row" value=$topics.topics_id}{* topic ID *}\n  {append var="row" value=$topics.contents_type}{* category ID *}\n  {append var="row" value=$topics.contents_type_nm|escapeCSV:false:"UTF-8"}{* category name *} {* Step 7 *}\n  {append var="row" value=$topics.subject|escapeCSV:false:"UTF-8"}{* title *}\n  {append var="row" value=$topics.contents|escapeCSV:false:"UTF-8"}{* contents *}\n  {assign var="row_str" value=","|implode:$row} {* Step 8 *}\n  {write_file path=$tmp_path value=$row_str|cat:"\\n" is_append=1} {* Step 9 *}\n{/foreach}\n\n')),(0,r.kt)("p",null,"Step 5) Since the topic data is stored as an array in ",(0,r.kt)("inlineCode",{parentName:"p"},"$topics_list_response.list"),", it loops with each element of the array.    "),(0,r.kt)("p",null,"Step 6) Again, initialize the ",(0,r.kt)("inlineCode",{parentName:"p"},"$row")," variable with ",(0,r.kt)("inlineCode",{parentName:"p"},"$dataSet.emptyArray")," (empty array) and add the array elements in the order of the header rows."),(0,r.kt)("p",null,"Step 7) When adding multi-byte characters, use the escapeCSV qualifier to enclose them in double quotes and convert the character code to UTF-8. Note that: false after escapeCSV specifies whether to escape the line feed code."),(0,r.kt)("p",null,"Step 8) It concatenates the value saved in ",(0,r.kt)("inlineCode",{parentName:"p"},"$row")," array to comma-separated string.    "),(0,r.kt)("p",null,"Step 9) Use the write_file function again to append the string + newline code from step 8 to the temporary file. If is_append = 1 is specified, the write_file function will be in append mode. At this time, you must specify the temporary file name using the path attribute, so specify the file name obtained in Step 2).    "),(0,r.kt)("p",null,"At last, upload the temporary file to the online storage."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{assign var=csv_path value='/path/to/topics_list.csv'} {* Step 10 *}\n{assign var=\"tmp_abs_path\" value=$smarty.const.TEMP_DIR2|cat:'/'|cat:$tmp_path} {* Step 11 *}\n{put_file path=$csv_path tmp_path=$tmp_abs_path} {* Step 12 *}\n\n")),(0,r.kt)("p",null,"Step 10) Specify the file name on the online storage by file path."),(0,r.kt)("p",null,"Step 11) Change the temporary file path to an absolute path. The temporary file is saved in the path called 'TEMP_DIR2'."),(0,r.kt)("p",null,"Step 12) Upload the temporary file on the online storage."),(0,r.kt)("p",null,"The complete script is as below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{assign var="csv_header" value="topic ID,category ID,category name, title, contents"}\n{write_file var=tmp_path value=$csv_header|cat:"\\n"}\n\n{assign var=queries value=$dataSet.emptyArray}\n{append var=queries index=cnt value=0}\n{api_internal   endpoint=\'/rcms-api/1/topics-list\'\n                method=\'GET\'\n                member_id=1\n                queries=$queries\n                var=\'topics_list_response\'\n}\n{foreach from=$topics_list_response.list item="topics"}\n  {assign var="row" value=$dataSet.emptyArray}\n  {append var="row" value=$topics.topics_id}{* topic ID *}\n  {append var="row" value=$topics.contents_type}{* category ID *}\n  {append var="row" value=$topics.contents_type_nm|escapeCSV:false:"UTF-8"}{* category name*}\n  {append var="row" value=$topics.subject|escapeCSV:false:"UTF-8"}{* title *}\n  {append var="row" value=$topics.contents|escapeCSV:false:"UTF-8"}{* contents *}\n  {assign var="row_str" value=","|implode:$row}\n  {write_file path=$tmp_path value=$row_str|cat:"\\n" is_append=1}\n{/foreach}\n\n{assign var=csv_path value=\'/path/to/topics_list.csv\'}\n{assign var="tmp_abs_path" value=$smarty.const.TEMP_DIR2|cat:\'/\'|cat:$tmp_path}\n{put_file path=$csv_path tmp_path=$tmp_abs_path}\n')),(0,r.kt)("h3",{id:"4-update"},"4. Update"),(0,r.kt)("p",null,"After completing the above, click ","[Update]"," button and save the configuration. Then, wait until the fixed time 05:00.",(0,r.kt)("br",{parentName:"p"}),"\n","After it is executed, the file is generated on the specified online storage path.  "),(0,r.kt)("h3",{id:"5how-to-test"},"5.How to test"),(0,r.kt)("p",null,"If you use the debug_print_var modifier, the contents of the variable will be printed on the batch edit screen.",(0,r.kt)("br",{parentName:"p"}),"\n","Here, the first argument is the depth of the array to be displayed, and the second argument is the maximum character string length."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{$csv_header|@debug_print_var:0:1000}\n")),(0,r.kt)("p",null,"By clicking ","[Test]"," button, you can execute the batch process without saving the changes."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/9251e3e8c008d5f8956e85af8a9089a2.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/9251e3e8c008d5f8956e85af8a9089a2.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"We can confirm that the header line was saved in $ csv_header.",(0,r.kt)("br",{parentName:"p"}),"\n","After checking, delete the debug_print_var line."))}h.isMDXComponent=!0}}]);