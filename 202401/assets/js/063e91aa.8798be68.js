"use strict";(self.webpackChunkkurokuro=self.webpackChunkkurokuro||[]).push([[60303],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var n=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=n.createContext({}),d=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},c=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=d(a),p=o,m=u["".concat(l,".").concat(p)]||u[p]||h[p]||r;return a?n.createElement(m,s(s({ref:t},c),{},{components:a})):n.createElement(m,s({ref:t},c))}));function m(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,s=new Array(r);s[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:o,s[1]=i;for(var d=2;d<r;d++)s[d]=a[d];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},20467:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var n=a(87462),o=(a(67294),a(3905));const r={date:new Date("2022-04-08T00:00:00.000Z"),title:"Headless CMS",description:"A brief introduction to Headless CMS",slug:"headless-cms",authors:"diverta",hide_table_of_contents:!1},s=void 0,i={permalink:"/blog/headless-cms",source:"@site/blog/headless-cms.md",title:"Headless CMS",description:"A brief introduction to Headless CMS",date:"2022-04-08T00:00:00.000Z",formattedDate:"April 8, 2022",tags:[],readingTime:6.345,hasTruncateMarker:!0,authors:[{name:"Diverta",title:"Creator of Kuroco service",url:"https://www.diverta.co.jp",imageURL:"https://github.com/diverta.png",key:"diverta"}],frontMatter:{date:"2022-04-08T00:00:00.000Z",title:"Headless CMS",description:"A brief introduction to Headless CMS",slug:"headless-cms",authors:"diverta",hide_table_of_contents:!1},prevItem:{title:"Headless CMS for Jamstack",permalink:"/blog/headless-cms-for-jamstack"},nextItem:{title:"Jamstack and Serverless",permalink:"/blog/jamstack-and-serverless"}},l={authorsImageUrls:[void 0]},d=[{value:"What is a Headless CMS?",id:"what-is-a-headless-cms",level:2},{value:"Headless CMS vs Traditional (\u2018Coupled\u2019) CMS",id:"headless-cms-vs-traditional-coupled-cms",level:2},{value:"Features of a traditional CMS:",id:"features-of-a-traditional-cms",level:2},{value:"When Should You Consider Using a Headless CMS?",id:"when-should-you-consider-using-a-headless-cms",level:2},{value:"How a Headless CMS can Increase Your Digital Agility",id:"how-a-headless-cms-can-increase-your-digital-agility",level:2},{value:"Technology Agnostic Frontends",id:"technology-agnostic-frontends",level:3},{value:"The Rise of Jamstack Sites",id:"the-rise-of-jamstack-sites",level:3},{value:"How Should You Host Your Headless CMS?",id:"how-should-you-host-your-headless-cms",level:2},{value:"Kuroco Headless CMS",id:"kuroco-headless-cms",level:2},{value:"Common Headless CMS Use Cases",id:"common-headless-cms-use-cases",level:2},{value:"Summary",id:"summary",level:2},{value:"Related Articles",id:"related-articles",level:2}],c={toc:d},u="wrapper";function h(e){let{components:t,...a}=e;return(0,o.kt)(u,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"A brief introduction to Headless CMS"),(0,o.kt)("img",{src:"/files/user/img/blog/Kuroco_Headless_Overview.svg",alt:"Kuroco Headless Overview"}),(0,o.kt)("h2",{id:"what-is-a-headless-cms"},"What is a Headless CMS?"),(0,o.kt)("p",null,"A content management system (CMS) is a type of software tool that allows non-technical users to easily create and manage the content of their website or application, stored as data on a backend content repository (database)."),(0,o.kt)("p",null,"A 'headless' CMS provides the same functionality as a traditional CMS, while decoupling the backend data from the frontend, and exposing it via 'application programing interfaces' (APIs). These APIs are typically RESTful or GraphQL, and can be consumed by any frontend on any device."),(0,o.kt)("p",null,'In other words, the concept of a CMS being \u201cheadless\u201d comes from separating or decoupling the frontend code ("head) from the backend code ("body"). In traditional CMSs the frontend and backend code are usually coupled; with a "headless" CMS any frontend can be used for presenting the content/data from the backend.'),(0,o.kt)("h2",{id:"headless-cms-vs-traditional-coupled-cms"},"Headless CMS vs Traditional (\u2018Coupled\u2019) CMS"),(0,o.kt)("p",null,"Since a headless CMS is able to serve decoupled API data, this content can be easily consumed on any browser type on virtually any device, making it suitable for omnichannel websites and applications."),(0,o.kt)("p",null,"In traditional CMSs (in use for decades), the backend data is tightly coupled with the HTML code that is served to the frontend layer. This makes it very difficult to use the data outside of the templates custom built for that CMS."),(0,o.kt)("h2",{id:"features-of-a-traditional-cms"},"Features of a traditional CMS:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Interface enabling users to create and edit read/write data (content)."),(0,o.kt)("li",{parentName:"ul"},"Database to store read/write data."),(0,o.kt)("li",{parentName:"ul"},"Role based access control, typically with an admin panel to grant user permission for managing the content."),(0,o.kt)("li",{parentName:"ul"},"Frontend presentation layer (i.e. the actual website that people can see), with the content data mixed into the code.")),(0,o.kt)("p",null,"In web development, the best known traditional CMS platforms include WordPress, Drupal, as well as low or no code website editor options like Wix and Squarespace. In each of these platforms, the frontend presentation layers are tightly coupled with the backend data, which cannot usually be exported to other channels outside the platform."),(0,o.kt)("p",null,"While traditional CMSs worked well in the past, the near ubiquitous use of mobile and other smart devices, the rise of omnichannel marketing, and the shift toward more progressive frontend web frameworks (like React, Vue, and Angular) require a more flexible and performant approach for serving content data."),(0,o.kt)("h2",{id:"when-should-you-consider-using-a-headless-cms"},"When Should You Consider Using a Headless CMS?"),(0,o.kt)("p",null,"Any enterprise that wants to unlock the power of its data should consider using a headless CMS. Websites and applications built on legacy technology stacks may have a lot of data stored in a database, but if this data is only used for a single frontend view (ex. desktop web browser), it is not being used to its full potential."),(0,o.kt)("p",null,"In particular, if your company\u2019s frontend developers are responsible for building modern UI/UX views that work not only on desktop web browsers, but also on mobile and other devices, they will need access to this data in the form of a modern API."),(0,o.kt)("p",null,"In order to avoid disruptions for the content creators and marketers on other teams, this data should also be manageable in a non-technical content management interface - which is where a headless CMS comes into play."),(0,o.kt)("h2",{id:"how-a-headless-cms-can-increase-your-digital-agility"},"How a Headless CMS can Increase Your Digital Agility"),(0,o.kt)("p",null,"Digital agility is the ability of organizations to rapidly develop, test, and ship new systems and processes."),(0,o.kt)("p",null,"In the case of an enterprise website or application, there are usually multiple teams working on projects with many dependencies."),(0,o.kt)("p",null,"For example, many modern frontend websites and applications are now built with next-generation JavaScript frameworks like React and Vue. Frontend teams need to iterate rapidly to build UI/UX designs that meet user needs. If the frontend and backend data are tightly coupled, then any data changes requested from the frontend team could result in breaking changes on the backend."),(0,o.kt)("p",null,"Backend teams are generally more concerned with reliability, security, and overall performance. If they have to work closely with frontend teams to ensure that tightly coupled data is being served to meet the frontend's needs, this can result in long and costly delays in development."),(0,o.kt)("p",null,"A decoupled API solves this problem - ensuring that frontend teams can consume the data without having to change any of the backend code. This separation of concerns greatly increases productivity, leading to far fewer bugs during development and faster time to launch."),(0,o.kt)("h3",{id:"technology-agnostic-frontends"},"Technology Agnostic Frontends"),(0,o.kt)("p",null,"Frontend developers can also choose any technology they want to work with, without having to worry about any framework bugs that might crop up in stacks used by other frontend teams. For example, one team might be using a React Native library for a mobile app, and another might be using a static site generator for a desktop site - both consuming the same data from the backend API, but without any conflicting dependencies."),(0,o.kt)("h3",{id:"the-rise-of-jamstack-sites"},"The Rise of Jamstack Sites"),(0,o.kt)("p",null,"Often the newer progressive Javascrip frameworks (React, Vue, etc.) are used to build Jamstack websites. The advantage to this method is improved performance (esp. page loading speed) and better security compared to sites built on traditional coupled CMSs."),(0,o.kt)("p",null,"For more information on Jamstack, check out this ",(0,o.kt)("a",{parentName:"p",href:"/blog/jamstack"},"related article"),"."),(0,o.kt)("h2",{id:"how-should-you-host-your-headless-cms"},"How Should You Host Your Headless CMS?"),(0,o.kt)("p",null,"There are various options for hosting a headless CMS. Open source options are available, but will require backend developers to manage the hosting and maintenance on your internal systems (or cloud infrastructure that you pay for). Alternatively, services that offer paid backend cloud hosting are available (usually at a low cost)"),(0,o.kt)("h2",{id:"kuroco-headless-cms"},"Kuroco Headless CMS"),(0,o.kt)("p",null,"Kuroco is a heavily API-focused headless CMS that makes it easy to configure endpoints for different frontends. This flexibility makes our platform's API management a similar solution to the ",(0,o.kt)("a",{parentName:"p",href:"/blog/what-is-the-backend-to-frontend-design-pattern"},"'backend-for-frontend' (BFF)")," model, enabling more granular queries for different frontends."),(0,o.kt)("p",null,"For more information on Kuroco, and how it can be a great fit for your online business, check out our comprehensive ",(0,o.kt)("a",{parentName:"p",href:"https://hisashihasebe.github.io/document_archive_public/202401/docs/"},"documentation site"),"."),(0,o.kt)("h2",{id:"common-headless-cms-use-cases"},"Common Headless CMS Use Cases"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Progressive Web Apps:")," Built with next-generation Javascript libraries like React/Next.js, Vue/Nuxt.js, Angular, etc."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Native Mobile Apps:")," Native apps built for iOS (Swift), Android (Java), and/or Windows Phone (C#)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"E-commerce:")," Simplified content creation on websites built with popular e-commerce backends like Shopify, Magento, Bigcommerce, or Jamstack solutions like Snipcart."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Static Site Generators:")," Manage content on popular SSG frameworks like Jekyll, Hugo, Gatsby, and Gridsome"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Overall API Management:")," While not all headless CMSs have advanced API customization functionality built-in, platforms like ",(0,o.kt)("a",{parentName:"li",href:"https://hisashihasebe.github.io/document_archive_public/202401/"},"Kuroco")," can make this process a breeze.")),(0,o.kt)("h2",{id:"summary"},"Summary"),(0,o.kt)("p",null,"While different companies have different needs and use cases for various CMS options available on the market today, the overall trend continues toward the 'headless' approach. The advantages of decoupling your data from a single frontend view, and opening it up to be more securely used by any number of independent frontends are simply undeniable."),(0,o.kt)("p",null,"You can greatly increase your business's productivity, free up you frontend team to more rapidly build and test their UI/UX designs, and make it easy for non-technical content creators and marketers to manage their content."),(0,o.kt)("p",null,"We hope you will give Kuroco a try - particularly if your business is focused on having a future-proof API management strategy. You can ",(0,o.kt)("a",{parentName:"p",href:"https://hisashihasebe.github.io/document_archive_public/202401/free_trial/"},"get started today")," and test it out for free, or feel free to check out our site to learn more information!"),(0,o.kt)("img",{src:"/files/user/img/blog/Kuroco_Headless_CMS.svg",alt:"Kuroco Headless CMS"}),(0,o.kt)("h2",{id:"related-articles"},"Related Articles"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/blog/guide-to-choosing-an-enterprise-headless-cms"},"A Guide to Choosing an Enterprise Headless CMS")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/blog/git-based-vs-api-centric-headless-cms"},"Git-based Vs API-centric Headless CMS")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/blog/what-are-the-benefits-of-a-headless-cms"},"What Are the Benefits of a Headless CMS?")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/blog/why-is-a-headless-cms-important-for-enterprises"},"Why is a Headless CMS Important for Enterprises?"))))}h.isMDXComponent=!0}}]);