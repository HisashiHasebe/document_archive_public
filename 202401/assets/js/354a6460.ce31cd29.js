"use strict";(self.webpackChunkkurokuro=self.webpackChunkkurokuro||[]).push([[55518],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>h});var r=a(67294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,s=function(e,t){if(null==e)return{};var a,r,s={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var l=r.createContext({}),c=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,s=e.mdxType,n=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=c(a),m=s,h=p["".concat(l,".").concat(m)]||p[m]||u[m]||n;return a?r.createElement(h,i(i({ref:t},d),{},{components:a})):r.createElement(h,i({ref:t},d))}));function h(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var n=a.length,i=new Array(n);i[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[p]="string"==typeof e?e:s,i[1]=o;for(var c=2;c<n;c++)i[c]=a[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},62666:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>n,metadata:()=>o,toc:()=>c});var r=a(87462),s=(a(67294),a(3905));const n={date:new Date("2022-04-08T00:00:00.000Z"),title:"Jamstack",description:"A brief introduction to Jamstack",slug:"jamstack",authors:"diverta",hide_table_of_contents:!1},i=void 0,o={permalink:"/blog/jamstack",source:"@site/blog/jamstack.md",title:"Jamstack",description:"A brief introduction to Jamstack",date:"2022-04-08T00:00:00.000Z",formattedDate:"April 8, 2022",tags:[],readingTime:7.82,hasTruncateMarker:!0,authors:[{name:"Diverta",title:"Creator of Kuroco service",url:"https://www.diverta.co.jp",imageURL:"https://github.com/diverta.png",key:"diverta"}],frontMatter:{date:"2022-04-08T00:00:00.000Z",title:"Jamstack",description:"A brief introduction to Jamstack",slug:"jamstack",authors:"diverta",hide_table_of_contents:!1},prevItem:{title:"Jamstack for Enterprise",permalink:"/blog/jamstack-for-enterprise"},nextItem:{title:"Serverless",permalink:"/blog/serverless"}},l={authorsImageUrls:[void 0]},c=[{value:"What is Jamstack?",id:"what-is-jamstack",level:2},{value:"JavaScript",id:"javascript",level:3},{value:"APIs",id:"apis",level:3},{value:"Markup",id:"markup",level:3},{value:"Key Features of Jamstack",id:"key-features-of-jamstack",level:2},{value:"Decoupling",id:"decoupling",level:3},{value:"Static-first",id:"static-first",level:3},{value:"Pre-rendering",id:"pre-rendering",level:3},{value:"Benefits of Jamstack",id:"benefits-of-jamstack",level:2},{value:"Faster",id:"faster",level:3},{value:"More Secure",id:"more-secure",level:3},{value:"Superior Experience for Developers",id:"superior-experience-for-developers",level:3},{value:"Less Expensive",id:"less-expensive",level:3},{value:"Use Cases",id:"use-cases",level:2},{value:"Blogging",id:"blogging",level:3},{value:"E-commerce",id:"e-commerce",level:3},{value:"Enterprise",id:"enterprise",level:3},{value:"Summary",id:"summary",level:2},{value:"Other Resources for Learning About Jamstack",id:"other-resources-for-learning-about-jamstack",level:2},{value:"Web links",id:"web-links",level:3},{value:"Videos",id:"videos",level:3},{value:"Related Articles",id:"related-articles",level:2}],d={toc:c},p="wrapper";function u(e){let{components:t,...a}=e;return(0,s.kt)(p,(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"A brief introduction to Jamstack"),(0,s.kt)("img",{src:"/files/user/img/blog/Kuroco_Jamstack.svg",alt:"Kuroco Jamstack"}),(0,s.kt)("h2",{id:"what-is-jamstack"},"What is Jamstack?"),(0,s.kt)("p",null,"Jamstack (or JAMstack) is a frontend web application/architecture that dynamically fetches content as needed and rewrites websites using static HTML as a base. It allows you to design websites that are faster, safer, and easier to extend."),(0,s.kt)("p",null,'The name "Jamstack" refers to the technology stack that combines JavaScript, APIs, and pre-rendered Markup, which decouple client-side applications from traditional backend services or any particular web server.'),(0,s.kt)("p",null,"The Jamstack ecosystem was popularized by Netlify in 2015, as a new approach to web development. Leveraging newer Javascript frameworks like Angular, React, and Vue, it became possible to run build commands that would pre-render Javascript files, and compile web pages into static files. These static files, which are much leaner and faster-loading that pages built on the server-side of traditional CMS-driven websites (e.g. WordPress) can be uploaded to content delivery networks (CDNs) and delivered to clients much more quickly, securely, and at a lower cost."),(0,s.kt)("p",null,"This approach is particularly beneficial for mobile users, as the amount of data required for the first load on the browser of a prerendered Jamstack page is usually a fraction of what is loaded on traditional server-loaded web pages. This greatly improves the user experience, and reduces bounce rates on landing pages."),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"The 3 main parts that make up the Jamstack are as follows:")),(0,s.kt)("h3",{id:"javascript"},"JavaScript"),(0,s.kt)("p",null,"Dynamic functionality on Jamstack pages is handled by JavaScript, using the browser as the universal runtime layer for your site. JavaScript is also what allows static pages to fetch API data when the page is mounted."),(0,s.kt)("h3",{id:"apis"},"APIs"),(0,s.kt)("p",null,"Instead of using the traditional serverside method of fetching data from a database, these operations are now abstracted into APIs that can be called clientside over HTTPS, using JavaScript. As long as the APIs are properly maintained and configured with the necessary endpoints, a Jamstack site can (in theory) run without ever touching a server."),(0,s.kt)("p",null,"In reality, however, ",(0,s.kt)("a",{parentName:"p",href:"/blog/api-management"},"API gateways")," are commonly deployed to ensure that only secure requests are made before data is sent to the browser."),(0,s.kt)("h3",{id:"markup"},"Markup"),(0,s.kt)("p",null,"HTML markup is the skeleton of the modern web, used to create the document object model (DOM) parsed by browsers. Traditionally, HTML pages are generated by a server and sent to the browser. In Jamstack, pages are prerendered in advance (using a build tool, found static site generators like Gatsby and Gridsome) and stored on a content delivery network (CDN)."),(0,s.kt)("p",null,"Because all the Jamstack pages are served from the CDN as prerendered static assets, there is a much reduced loading time compared to pages loaded from traditional backend servers."),(0,s.kt)("h2",{id:"key-features-of-jamstack"},"Key Features of Jamstack"),(0,s.kt)("h3",{id:"decoupling"},"Decoupling"),(0,s.kt)("p",null,"Websites built on Jamstack differ from HTML-only sites in that they use JavaScript to communicate with the back-end server and provide dynamic content. Authentication and comment functions, payment, user personalizations, and other areas that generally require dynamic mechanisms are also implemented with JavaScript."),(0,s.kt)("p",null,"The API economy enables developers to implement functionality without complex server-side development. Jamstack leverages APIs to decouple technical complexity from the risks involved, thereby increasing the flexibility and portability of your websites."),(0,s.kt)("p",null,"The front end uses tooling separate from the back end. The front end is typically built using a static site generator. And the back end is often integrated with the front through the use of APIs used during the build process. Server-side processes can also be run using serverless functions."),(0,s.kt)("img",{src:"/files/user/img/blog/Kuroco_Jamstack_Decoupling.svg",alt:"Kuroco Jamstack"}),(0,s.kt)("h3",{id:"static-first"},"Static-first"),(0,s.kt)("p",null,"While various practices exist for introducing dynamic elements to Jamstack sites, most are pre-rendered, which means the front end was built and compiled into HTML, CSS, and JavaScript files."),(0,s.kt)("h3",{id:"pre-rendering"},"Pre-rendering"),(0,s.kt)("p",null,"Many Jamstack frameworks use special notations and templates, which are then converted into static HTML when deployed as websites. Unlike conventional web development mechanisms that generate HTML in response to user requests, the pre-rendered approach generates assets such as HTML, CSS, JavaScript, and images in advance."),(0,s.kt)("p",null,"Using a CDN enables such static content to be delivered at high speed."),(0,s.kt)("p",null,"JavaScript can be introduced to pre-rendered sites on an as-needed basis, thus increasing performance in the browser."),(0,s.kt)("h2",{id:"benefits-of-jamstack"},"Benefits of Jamstack"),(0,s.kt)("h3",{id:"faster"},"Faster"),(0,s.kt)("p",null,"Pre-rendered static pages are able to load lightning-fast, directly in the browser, compared to traditional pages that have to first be generated by a server, and then parsed in the browser."),(0,s.kt)("p",null,"Faster page loading speeds provide a superior user experience. This is particularly important for users on mobile devices, where slow loading pages result in significantly higher bounce rates. Static pages also typically use less data to render."),(0,s.kt)("h3",{id:"more-secure"},"More Secure"),(0,s.kt)("p",null,"Since Jamstack pages are static and decoupled from any backend servers, there is no attack vector for malicious code to work on. This remains true, even if the pages contain JavaScript for fetching data from APIs - as long as the API itself is secure."),(0,s.kt)("p",null,"This is in contrast to sites built on traditional CMSs like WordPress, where frontend and backend is tightly coupled. These security vulnerabilities are well-known and discussed by ",(0,s.kt)("a",{parentName:"p",href:"https://blog.hubspot.com/website/wordpress-security-issues"},"authoritative blogs")," online."),(0,s.kt)("h3",{id:"superior-experience-for-developers"},"Superior Experience for Developers"),(0,s.kt)("p",null,"As the Jamstack ecosystem has continued to grow, the ease with which developers can build websites using popular frameworks like Next.js, Nuxt.js, Gatsby, Gridsome, etc. has increased dramatically. It is possible to build a basic static website in a matter of minutes, and ship it to hosting service like Kuroco, Netlify, or Github Pages."),(0,s.kt)("p",null,"Once the basic site is up and running, the developer can focus on building out the frontend UI components - without having to worry about the usual issues involved with building out a backend application from scratch."),(0,s.kt)("h3",{id:"less-expensive"},"Less Expensive"),(0,s.kt)("p",null,"Related to the previous point, Jamstack projects require a lot less (or in some cases, zero) support from backend teams. This eliminates a lot of the overhead that is normally required to manage backend servers and databases."),(0,s.kt)("p",null,"As a project scales, it may be necessary to make use of some backend support (ex. if setting up custom API gateways or other serverless infrastructure), but in nearly all cases this will still be much more cost effective than maintaining a self-hosted backend at scale."),(0,s.kt)("h2",{id:"use-cases"},"Use Cases"),(0,s.kt)("p",null,"In the beginning, Jamstack was mainly used by developers for publishing their own blogs and websites. The attraction was the ability to run a highly performant site (using the latest JavaScript frameworks), without having to set up servers or maintain a complicated backend."),(0,s.kt)("p",null,"Instead, the backend could be handled by popular ",(0,s.kt)("a",{parentName:"p",href:"/blog/serverless"},"\u2018serverless\u2019")," frameworks, hosted on cloud providers (including AWS, Google Cloud, or Netlify)"),(0,s.kt)("p",null,"Some of the more common use cases for Jamstack include:"),(0,s.kt)("h3",{id:"blogging"},"Blogging"),(0,s.kt)("p",null,"For any blogger with technical/coding abilities, Jamstack makes a far better (and cheaper) choice than nearly other option."),(0,s.kt)("p",null,"In the first place, it is possible to host the static pages extremely cheaply (or free) on many services. Paid hosting for other blog platforms using traditional CMSs will be sigificantly costlier."),(0,s.kt)("p",null,"As discussed above, Jamstack pages are also much faster to load in the browser, meaning readers of your blog will have a better user experience."),(0,s.kt)("p",null,"However, the main downside is that without at least some basic technical knowledge, it is unlikely that a non-technical blogger could set up and customize a blog site on their own. Paying a developer to build a Jamstack site, with a ",(0,s.kt)("a",{parentName:"p",href:"https://kuroco.app/"},"headless CMS")," for the content creator to use and manage their site's content is still a reasonable option."),(0,s.kt)("h3",{id:"e-commerce"},"E-commerce"),(0,s.kt)("p",null,"The most common approach for e-commerce remains traditional CMS platforms, like WordPress (using e-commerce plugins). Other paid plaforms like Shopify provide an easy content creation experience."),(0,s.kt)("p",null,"However, excellent Jamstack compatible options do exist. Since Jamstack pages are powered by APIs, it is possible to connect them to cloud-based e-commerce services with just a few lines of code. Once the page is mounted, that third-party data will load on the page separately."),(0,s.kt)("p",null,"Examples of Jamstack-related e-commerce services include ",(0,s.kt)("a",{parentName:"p",href:"https://snipcart.com/"},"Snipcart"),", and ",(0,s.kt)("a",{parentName:"p",href:"https://www.shopify.com/starter"},"Shopify Lite"),"."),(0,s.kt)("p",null,"In addition to the e-commerce functionality itself, page content can be managed by marketers using a headless CMS."),(0,s.kt)("h3",{id:"enterprise"},"Enterprise"),(0,s.kt)("p",null,"As the Jamstack ecosystem continues to grow and improve, the benefits for larger enterprises are becoming apparent. See this related article for more information: ",(0,s.kt)("a",{parentName:"p",href:"/blog/jamstack-for-enterprise"},'"Jamstack for Enterprise"'),"."),(0,s.kt)("h2",{id:"summary"},"Summary"),(0,s.kt)("p",null,"Jamstack is a next-generation web technology stack that leverages the power of JavaScript frameworks and APIs consumable in the browser, to build leaner, more performant, and more cost effective sites."),(0,s.kt)("p",null,"One of the most important factors in making a Jamstack viable for a team that includes dedicated content creators and marketers, is having a headless CMS. Kuroco is a headless CMS built with enterprise clients in mind, and is an ideal solution for content-heavy Jamstack projects."),(0,s.kt)("p",null,"We hope you will give Kuroco a try. You can ",(0,s.kt)("a",{parentName:"p",href:"https://kuroco.app/free_trial/"},"get started today")," and test it out for free, or feel free to check out ",(0,s.kt)("a",{parentName:"p",href:"https://kuroco.app/"},"our site")," to learn more information!"),(0,s.kt)("h2",{id:"other-resources-for-learning-about-jamstack"},"Other Resources for Learning About Jamstack"),(0,s.kt)("h3",{id:"web-links"},"Web links"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://jamstack.org/"},"Jamstack")," Official website for Jamstack."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://www.netlify.com/jamstack/"},"Welcome to The Jamstack")," An introduction by Netlify, a supporter of Jamstack.")),(0,s.kt)("h3",{id:"videos"},"Videos"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://www.youtube.com/c/JAMstackConf"},"Jamstack TV - YouTube")," Official YouTube channel for Jamstack. Includes videos on the annual ",(0,s.kt)("a",{parentName:"li",href:"https://jamstack.org/conf/"},"Jamstack Conf")," and other related content."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://www.udemy.com/course/jamstack/"},"Jamstack: The Complete Guide | Udemy")," Udemy course on web development using Jamstack.")),(0,s.kt)("h2",{id:"related-articles"},"Related Articles"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/blog/differences-between-jamstack-and-conventional-websites"},"Differences Between Jamstack and Conventional Websites")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/blog/headless-cms-for-jamstack"},"Headless CMS for Jamstack")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/blog/jamstack-architecture"},"Jamstack Architecture")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/blog/jamstack-for-enterprise"},"Jamstack for Enterprise")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/blog/pros-and-cons-of-jamstack"},"Pros and Cons of Jamstack"))))}u.isMDXComponent=!0}}]);