"use strict";(self.webpackChunkkurokuro=self.webpackChunkkurokuro||[]).push([[93941],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>u});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(a),g=r,u=d["".concat(s,".").concat(g)]||d[g]||m[g]||o;return a?n.createElement(u,i(i({ref:t},p),{},{components:a})):n.createElement(u,i({ref:t},p))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},90218:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=a(87462),r=(a(67294),a(3905));const o={title:"Sending messages to LINE users",description:"This page explains how to send messages from Kuroco to LINE users by integrating Kuroco with the LINE Messaging API."},i=void 0,l={unversionedId:"tutorials/how-to-connect-to-line",id:"tutorials/how-to-connect-to-line",title:"Sending messages to LINE users",description:"This page explains how to send messages from Kuroco to LINE users by integrating Kuroco with the LINE Messaging API.",source:"@site/docs/tutorials/how-to-connect-to-line.md",sourceDirName:"tutorials",slug:"/tutorials/how-to-connect-to-line",permalink:"/docs/tutorials/how-to-connect-to-line",draft:!1,editUrl:"https://github.com/diverta/kuroco-documents/tree/main/packages/create-docusaurus/templates/shared/docs/tutorials/how-to-connect-to-line.md",tags:[],version:"current",frontMatter:{title:"Sending messages to LINE users",description:"This page explains how to send messages from Kuroco to LINE users by integrating Kuroco with the LINE Messaging API."},sidebar:"documentationSidebar",previous:{title:"Importing WordPress files into Kuroco",permalink:"/docs/tutorials/import-wordpress-xml-files-into-kuroco"},next:{title:"Registering as a User Using a LINE Account and Adding the Official Account as a Friend",permalink:"/docs/tutorials/implementing-oauth-sp-for-line"}},s={},c=[{value:"Overview",id:"overview",level:2},{value:"What you&#39;ll learn",id:"what-youll-learn",level:3},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Creating a Channel in the LINE Developers Console",id:"creating-a-channel-in-the-line-developers-console",level:2},{value:"Configure LINE Connection",id:"configure-line-connection",level:2},{value:"Integrating Kuroco with LINE in the Kuroco Admin Panel",id:"integrating-kuroco-with-line-in-the-kuroco-admin-panel",level:2},{value:"Obtaining the LINE User ID from the Webhook when adding friends to the LINE Official Account",id:"obtaining-the-line-user-id-from-the-webhook-when-adding-friends-to-the-line-official-account",level:2},{value:"Preparing a group",id:"preparing-a-group",level:3},{value:"Creating an endpoint to receive webhooks",id:"creating-an-endpoint-to-receive-webhooks",level:3},{value:"Creating Custom function for User Registration",id:"creating-custom-function-for-user-registration",level:3},{value:"Setting the Webhook URL in LINE Channel Settings",id:"setting-the-webhook-url-in-line-channel-settings",level:3},{value:"Adding LINE Official Account as a Friend for Testing",id:"adding-line-official-account-as-a-friend-for-testing",level:3},{value:"Send a Message to User Using Kuroco&#39;s Custom Function",id:"send-a-message-to-user-using-kurocos-custom-function",level:2}],p={toc:c},d="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This page explains how to send messages from Kuroco to LINE users by integrating Kuroco with the LINE Messaging API."),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Kuroco provides the feature to send messages to LINE users. Messages are sent to users by sending instructions from Kuroco to LINE using the LINE Messaging API. Sending messages requires writing code in Kuroco's custom function."),(0,r.kt)("p",null,"When adding friends to a LINE official account, you can register users in Kuroco using the LINE user ID (no log in permission required), and use the trigger function to trigger various events in Kuroco and send LINE messages to any user at any timing."),(0,r.kt)("h3",{id:"what-youll-learn"},"What you'll learn"),(0,r.kt)("p",null,"You will learn how to send messages from Kuroco to LINE users using the following steps:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#overview"},"Overview"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#what-you-can-learn"},"What you can learn")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#prerequisites"},"Prerequisites")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#creating-a-channel-in-the-line-developers-console"},"Creating a Channel in the LINE Developers Console")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#configure-line-connection"},"Configure LINE Connection")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#integrating-kuroco-with-line-from-the-kuroco-admin-panel"},"Integrating Kuroco with LINE from the Kuroco Admin Panel")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#obtaining-the-line-user-id-from-the-webhook-when-adding-friends-to-the-line-official-account"},"Obtaining the LINE User ID from the Webhook when Adding Friends to the LINE Official Account"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#preparing-a-group"},"Preparing a Group")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#creating-an-endpoint-to-receive-webhooks"},"Creating an Endpoint to Receive Webhooks")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#creating-custom-function-for-user-registration"},"Creating Custom function for User Registration")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#setting-the-webhook-url-in-line-channel-settings"},"Setting the Webhook URL in LINE Channel Settings")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#adding-line-official-account-as-a-friend-for-testing"},"Adding LINE Official Account as a Friend for Testing")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#send-a-message-to-user-using-kurocos-custom-function"},"Send a Message to User Using Kuroco's Custom Function"))),(0,r.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"Obtain the LINE User ID from the Webhook sent when adding friends to the LINE official account."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"You can also use the OAuth integration feature to register members in Kuroco using a LINE account.",(0,r.kt)("br",{parentName:"p"}),"\n","For more details, please refer to the tip in ",(0,r.kt)("a",{parentName:"p",href:"#obtaining-the-line-user-id-from-the-webhook-when-adding-friends-to-the-line-official-account"},"Obtaining the LINE User ID from the Webhook when Adding Friends to the LINE Official Account"),".")),(0,r.kt)("h2",{id:"creating-a-channel-in-the-line-developers-console"},"Creating a Channel in the LINE Developers Console"),(0,r.kt)("p",null,"First, you need to create a channel in the LINE Developers Console. If you don't have a LINE account, please create one.  "),(0,r.kt)("p",null,"Log in to the ",(0,r.kt)("a",{parentName:"p",href:"https://developers.line.biz/console/"},"LINE Developers Console")," (When logging in for the first time, you will be asked whether to register as a developer or not, you will need to register as a developer in this case).",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/1e68b4787cedfad1b0be8908d1ad3645.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/1e68b4787cedfad1b0be8908d1ad3645.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Next, create a new provider by clicking the ","[Create]"," button.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/394f7fe83b5cfd4db2f284f603057f6e.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/394f7fe83b5cfd4db2f284f603057f6e.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,'Specify the provider name. Here, we will use "KurocoSampleProvider".',(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/889675fb22171815ac6f0448c7d00d9e.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/889675fb22171815ac6f0448c7d00d9e.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Next, create a channel by clicking ","[Create New Channel]",".",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/d8b2f603c43ce189fcde3013d144a11b.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/d8b2f603c43ce189fcde3013d144a11b.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Select ","[Messaging API]"," as the channel type.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/f0feab5cae76d4a3bacfa92daa18592c.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/f0feab5cae76d4a3bacfa92daa18592c.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"You will be redirected to the new channel creation screen.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/31998fe866b9f4d1a9d540ba9a58b5ff.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/31998fe866b9f4d1a9d540ba9a58b5ff.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Enter the following items and click the ","[Create]"," button."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Item"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Channel type"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Messaging API")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Provider"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Specify the provider created in the previous steps.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Company or owner's country or region"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Select the country/region where the company is located for corporations, or select the country/region where the store or residence is located for individuals.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Channel icon"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Upload an image that will be the icon of the channel.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Channel name"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Specify the channel name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Channel description"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Enter the description of the channel.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Category"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Select the main category.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Subcategory"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Select the Subcategory.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Email address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Enter the email address of the person who will be the administrator of this channel.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Privacy policy URL"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Check the checkbox after confirming the content.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Terms of use URL"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Check the checkbox after confirming the content.")))),(0,r.kt)("p",null,'A confirmation dialog will be displayed. If there are no issues, click "OK".',(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/f4e40f373076560caf8c616f317b645c.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/f4e40f373076560caf8c616f317b645c.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"After creating, the channel will be displayed as shown below. Click to check the detailed information.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/9a66984b94a11bef32a7931316207285.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/9a66984b94a11bef32a7931316207285.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"That's it, the channel has been created.",(0,r.kt)("br",{parentName:"p"}),"\n","Note down the Channel ID as it will be used later."),(0,r.kt)("h2",{id:"configure-line-connection"},"Configure LINE Connection"),(0,r.kt)("p",null,"Next, we will configure the connection between Kuroco and LINE.  "),(0,r.kt)("p",null,"First, prepare a pair of public and private keys, and register the public key in the settings screen of the channel created earlier.  "),(0,r.kt)("p",null,"There are several ways to create a pair of public and private keys, but if your web browser supports ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API"},"Web Crypto API")," (such as Google Chrome), you can generate the private and public keys using the ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/generateKey"},"SubtleCrypto.generateKey()")," method.",(0,r.kt)("br",{parentName:"p"}),"\n","Here, we will explain how to create the public and private keys using Google Chrome as an example."),(0,r.kt)("p",null,"Launch Google Chrome and open the browser's developer tools.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/4929a291937fbc25a13e2292e50814e4.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/4929a291937fbc25a13e2292e50814e4.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Enter the following code in the JavaScript console and execute it (press Enter key)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'(async () => {\n  const pair = await crypto.subtle.generateKey(\n    {\n      name: "RSASSA-PKCS1-v1_5",\n      modulusLength: 2048,\n      publicExponent: new Uint8Array([1, 0, 1]),\n      hash: "SHA-256",\n    },\n    true,\n    ["sign", "verify"]\n  );\n\n  console.log("=== private key ===");\n  console.log(\n    JSON.stringify(\n      await crypto.subtle.exportKey("jwk", pair.privateKey),\n      null,\n      "  "\n    )\n  );\n\nconsole.log("=== public key ===");\nconsole.log(\n  JSON.stringify(\n    await crypto.subtle.exportKey("jwk", pair.publicKey),\n    null,\n    "  "\n  )\n);\n})();\n')),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/a81b434637a10cddfe1edfa6cc480e33.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/a81b434637a10cddfe1edfa6cc480e33.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"When successful, the following secret key and public key will be generated."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example of secret key")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "alg": "RS256",\n  "d": "B6A6he..........",\n  "dp": "ogd_VFa..........",\n  "dq": "qt9TJZV..........",\n  "e": "AQAB",\n  "ext": true,\n  "key_ops": [\n    "sign"\n  ],\n  "kty": "RSA",\n  "n": "wQoAaMQmz..........",\n  "p": "92ODEIUZY..........",\n  "q": "x8ItprfI7..........",\n  "qi": "kfmYirMr.........."\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example of public key")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "alg": "RS256",\n  "e": "AQ..........",\n  "ext": true,\n  "key_ops": [\n    "verify"\n  ],\n  "kty": "RSA",\n  "n": "wQoAaMQm.........."\n}\n')),(0,r.kt)("p",null,"Click the ","[Register a public key]",' button next to the "Assertion Signing Key" in the channel settings screen you created earlier.\n',(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/7ad00db5ef9ebf9dade72c3896c0ec60.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/7ad00db5ef9ebf9dade72c3896c0ec60.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Enter the created public key. Click the ","[Register]"," button.\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/2c26a70b92c3b4320dd8da8cb7b31527.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/2c26a70b92c3b4320dd8da8cb7b31527.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"When the registration of the public key is successful, the ",(0,r.kt)("inlineCode",{parentName:"p"},"kid")," will be displayed, copy it for later use.\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/f8be8bdea4e58afc587e65ce59d7686d.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/f8be8bdea4e58afc587e65ce59d7686d.png",alt:"Image from Gyazo"})),(0,r.kt)("h2",{id:"integrating-kuroco-with-line-in-the-kuroco-admin-panel"},"Integrating Kuroco with LINE in the Kuroco Admin Panel"),(0,r.kt)("p",null,"Next, go to the Kuroco admin panel and click ","[External system integration]"," -> ","[LINE]","."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/ca81570c9a383e102c47974f08d6ffab.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/ca81570c9a383e102c47974f08d6ffab.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,'Check the "Enable" checkbox in the ',"[LINE]"," section, enter the channel ID, secret key, and assertion signing key (kid) that you copied earlier, and click ","[Update]","."),(0,r.kt)("p",null,"The Kuroco settings are now complete."),(0,r.kt)("h2",{id:"obtaining-the-line-user-id-from-the-webhook-when-adding-friends-to-the-line-official-account"},"Obtaining the LINE User ID from the Webhook when adding friends to the LINE Official Account"),(0,r.kt)("p",null,"Next, set it up so that when a LINE user adds the official account as a friend, the user is automatically registered as a member of Kuroco."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"It is also possible to use the OAuth integration function to register members in Kuroco using a LINE account.  "),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"To save the LINE User ID by logging in to LINE with OAuth integration, refer to ",(0,r.kt)("a",{parentName:"li",href:"/docs/tutorials/implementing-oauth-sp-based-sso/"},"Implementing SSO using OAuth authentication with external accounts"),"."),(0,r.kt)("li",{parentName:"ul"},"Set the LINE Login channel and the Messaging API channel in the same provider."),(0,r.kt)("li",{parentName:"ul"},"Link the Messaging API channel in ","[Channel Basic Settings]"," -> ","[Linked Bot]"," of LINE Login."))),(0,r.kt)("h3",{id:"preparing-a-group"},"Preparing a group"),(0,r.kt)("p",null,'Create a group called "LINE Users". Take note the ID of the created group.',(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/f76cf8884b0182ce5d8b2fa6c488eba5.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/f76cf8884b0182ce5d8b2fa6c488eba5.png",alt:"Image from Gyazo"})),(0,r.kt)("h3",{id:"creating-an-endpoint-to-receive-webhooks"},"Creating an endpoint to receive webhooks"),(0,r.kt)("p",null,"We need a webhook endpoint on the Kuroco side to receive LINE events.",(0,r.kt)("br",{parentName:"p"}),"\n","Create an endpoint with the following settings for the API that uses ",(0,r.kt)("inlineCode",{parentName:"p"},"Cookie")," as security."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Item"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Path"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"line/webhook"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Model"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Api / Api / v1 / request_api_post")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Summary"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Endpoint for LINE Webhook")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"API Request Limit"),(0,r.kt)("td",{parentName:"tr",align:"left"},"None")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"name"),(0,r.kt)("td",{parentName:"tr",align:"left"},"line_webhook")))),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/a65fcf99c164907cdce874fb4a3a18e1.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/a65fcf99c164907cdce874fb4a3a18e1.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Also, create another endpoint for member registration.\nCreate an endpoint with the following settings for the API that uses ",(0,r.kt)("inlineCode",{parentName:"p"},"Dynamic Token")," as security."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Item Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Input Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Path"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"member/line/register"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Model"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Member / Member / v1 / insert")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Summary"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LINE member registration")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"API Request Limit"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Group Auth / Administrator")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"default_group_id"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ID of the created group above")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"not_login_after_insert"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Unchecked")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"login_ok_flg"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Unchecked")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"use_columns"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"name1"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"name1"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"login_ok_flg"))))),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/f530eba9b0db9d93fbfffda086479f16.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/f530eba9b0db9d93fbfffda086479f16.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/e23adb698020d86b4ab4d02d4148a589.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/e23adb698020d86b4ab4d02d4148a589.png",alt:"Image from Gyazo"})),(0,r.kt)("h3",{id:"creating-custom-function-for-user-registration"},"Creating Custom function for User Registration"),(0,r.kt)("p",null,"Create a custom function with the following details:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Title: LINE Webhook"),(0,r.kt)("li",{parentName:"ul"},"Category: Uncategorized"),(0,r.kt)("li",{parentName:"ul"},"Identifier: line_webhook"),(0,r.kt)("li",{parentName:"ul"},"Process: (see below)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-smarty",metastring:'reference title="line_webhook"',reference:!0,title:'"line_webhook"'},"https://github.com/diverta/kuroco-documents/blob/main/sample_code/custom_function/request_api_post/line_webhook.txt\n")),(0,r.kt)("h3",{id:"setting-the-webhook-url-in-line-channel-settings"},"Setting the Webhook URL in LINE Channel Settings"),(0,r.kt)("p",null,"In the LINE Developers Console, open the ","[Messaging API]"," tab in the Messaging API Channel Settings page.",(0,r.kt)("br",{parentName:"p"}),"\n","Register the created endpoint in the ","[Webhook URL]"," field.  "),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/f4ab08f01dc6e8edf55f11792cf7b766.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/f4ab08f01dc6e8edf55f11792cf7b766.png",alt:"Image from Gyazo"})),(0,r.kt)("h3",{id:"adding-line-official-account-as-a-friend-for-testing"},"Adding LINE Official Account as a Friend for Testing"),(0,r.kt)("p",null,"Scan the ","[QR code]"," displayed on the Messaging API Channel Settings page with your device and add the LINE Official Account as a friend."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/97f907f26ea88a7bec8ee272dbe0efc6.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/97f907f26ea88a7bec8ee272dbe0efc6.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Check the displayed official channel name and tap ","[Get friends-only info]","."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/84501ba2c198a748362f9df6ac83eefa.jpg?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/84501ba2c198a748362f9df6ac83eefa.jpg",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Confirm that the member is added to the member list in the Kuroco management screen."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/300ed4e1db74e5563aa8ad20e09e24c4.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/300ed4e1db74e5563aa8ad20e09e24c4.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/d800d67997228d6f73dc8bc1c68cb831.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/d800d67997228d6f73dc8bc1c68cb831.png",alt:"Image from Gyazo"})),(0,r.kt)("h2",{id:"send-a-message-to-user-using-kurocos-custom-function"},"Send a Message to User Using Kuroco's Custom Function"),(0,r.kt)("p",null,"For testing purposes, create a custom function and write the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Title: LINE test"),(0,r.kt)("li",{parentName:"ul"},"Category: Uncategorized"),(0,r.kt)("li",{parentName:"ul"},"Identifier: line_test"),(0,r.kt)("li",{parentName:"ul"},"Process: (see below)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-smarty"},'{sendmail\n    var=result\n    subject=\'LINE message test\' \n    contents="Hello [emoji:5ac21a8c040ab15980c9b43f:001][emoji:5ac21a8c040ab15980c9b43f:002][emoji:5ac21a8c040ab15980c9b43f:003] " \n    to="Uxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx@text.line.r-cms.jp" \n}\n')),(0,r.kt)("p",null,"Enter ",(0,r.kt)("inlineCode",{parentName:"p"},"(LINE User ID)@text.line.r-cms.jp")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"to")," field."),(0,r.kt)("p",null,"You can include emojis in the ",(0,r.kt)("inlineCode",{parentName:"p"},"contents")," field as shown above. To insert an emoji, use the following format:  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[emoji:(Product ID):(Emoji ID)]\n")),(0,r.kt)("p",null,"For available emojis, refer to the ",(0,r.kt)("a",{parentName:"p",href:"https://developers.line.biz/en/docs/messaging-api/emoji-list/#line-emoji-definitions"},"LINE Emoji Definitions"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Result of the Message"),"\n",(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/9c527584161039638f34a5dd6ff32637.jpg?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/9c527584161039638f34a5dd6ff32637.jpg",alt:"Image from Gyazo"})))}m.isMDXComponent=!0}}]);