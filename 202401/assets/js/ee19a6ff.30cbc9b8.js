"use strict";(self.webpackChunkkurokuro=self.webpackChunkkurokuro||[]).push([[37657],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(n),c=r,g=u["".concat(l,".").concat(c)]||u[c]||m[c]||i;return n?a.createElement(g,o(o({ref:t},d),{},{components:n})):a.createElement(g,o({ref:t},d))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},64098:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={title:"Creating a Subscription Form for Subscribers using Kuroco and Nuxt.js",category:"Frontend",description:"This tutorial explains how to create a form to register and unsubscribe subscribers for a delivery feature in a Nuxt.js project using Kuroco."},o=void 0,s={unversionedId:"tutorials/implement-a-magazine-subscription-unsubscription-form",id:"tutorials/implement-a-magazine-subscription-unsubscription-form",title:"Creating a Subscription Form for Subscribers using Kuroco and Nuxt.js",description:"This tutorial explains how to create a form to register and unsubscribe subscribers for a delivery feature in a Nuxt.js project using Kuroco.",source:"@site/docs/tutorials/implement-a-magazine-subscription-unsubscription-form.md",sourceDirName:"tutorials",slug:"/tutorials/implement-a-magazine-subscription-unsubscription-form",permalink:"/docs/tutorials/implement-a-magazine-subscription-unsubscription-form",draft:!1,editUrl:"https://github.com/diverta/kuroco-documents/tree/main/packages/create-docusaurus/templates/shared/docs/tutorials/implement-a-magazine-subscription-unsubscription-form.md",tags:[],version:"current",frontMatter:{title:"Creating a Subscription Form for Subscribers using Kuroco and Nuxt.js",category:"Frontend",description:"This tutorial explains how to create a form to register and unsubscribe subscribers for a delivery feature in a Nuxt.js project using Kuroco."},sidebar:"documentationSidebar",previous:{title:"Building a multi-language website with Kuroco and Nuxt.js",permalink:"/docs/tutorials/building-a-multi-language-site"},next:{title:"Add comments function to content with Kuroco and Nuxt.js",permalink:"/docs/tutorials/integrate-activity-comment"}},l={},p=[{value:"Overview",id:"overview",level:2},{value:"What you will learn",id:"what-you-will-learn",level:3},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Require login to register and unsubscribe from the delivery",id:"require-login-to-register-and-unsubscribe-from-the-delivery",level:2},{value:"Registering the endpoints",id:"registering-the-endpoints",level:3},{value:"Endpoint for registering the delivery",id:"endpoint-for-registering-the-delivery",level:4},{value:"Endpoint for unsubscribing from the delivery",id:"endpoint-for-unsubscribing-from-the-delivery",level:4},{value:"Login endpoint",id:"login-endpoint",level:4},{value:"Profile endpoint",id:"profile-endpoint",level:4},{value:"Frontend implementation",id:"frontend-implementation",level:3},{value:"Confirming the operation",id:"confirming-the-operation",level:3},{value:"Subscribe",id:"subscribe",level:4},{value:"Unsubscribe",id:"unsubscribe",level:4},{value:"Making subscription registration and cancellation without login required",id:"making-subscription-registration-and-cancellation-without-login-required",level:2},{value:"Registering Endpoints",id:"registering-endpoints",level:3},{value:"Subscription Registration Endpoint",id:"subscription-registration-endpoint",level:4},{value:"Subscription Unsubscribe Endpoint",id:"subscription-unsubscribe-endpoint",level:4},{value:"Creating Custom Processing",id:"creating-custom-processing",level:3},{value:"Frontend Implementation",id:"frontend-implementation-1",level:3},{value:"Confirmation of operation",id:"confirmation-of-operation",level:3},{value:"Register for delivery",id:"register-for-delivery",level:4},{value:"Send a delivery message",id:"send-a-delivery-message",level:4},{value:"Unsubscribe using the link in the message",id:"unsubscribe-using-the-link-in-the-message",level:4},{value:"Related Documents",id:"related-documents",level:2}],d={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"This tutorial explains how to create a form to register and unsubscribe subscribers for a delivery feature in a Nuxt.js project using Kuroco.",(0,r.kt)("br",{parentName:"p"}),"\n","The ",(0,r.kt)("inlineCode",{parentName:"p"},"MagazineSubscriber::subscribe/unsubscribe")," endpoint for registering/unsubscribing from the delivery only requires posting the ",(0,r.kt)("inlineCode",{parentName:"p"},"email"),", but if the URL of the endpoint is known, it is possible to register/unsubscribe someone else's email address."),(0,r.kt)("p",null,"Therefore, in this tutorial, we will introduce two methods: requiring login and using a key to unsubscribe from the delivery."),(0,r.kt)("h3",{id:"what-you-will-learn"},"What you will learn"),(0,r.kt)("p",null,"We will implement the following two operations to register and unsubscribe subscribers for the delivery:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#require-login-to-register-and-unsubscribe-from-the-delivery"},"Require login to register and unsubscribe from the delivery")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#making-subscription-registration-and-cancellation-without-login-required"},"Making subscription registration and cancellation without login required"))),(0,r.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"This page assumes that a project using Kuroco and Nuxt.js has already been set up.",(0,r.kt)("br",{parentName:"p"}),"\n","If you have not set it up yet, please refer to the ",(0,r.kt)("a",{parentName:"p",href:"/docs/tutorials/beginners-guide/"},"Kuroco Beginner's Guide")," for instructions on how to set it up."),(0,r.kt)("h2",{id:"require-login-to-register-and-unsubscribe-from-the-delivery"},"Require login to register and unsubscribe from the delivery"),(0,r.kt)("p",null,"We will implement the functionality for registering and unsubscribing from deliveries to work only when logged in.",(0,r.kt)("br",{parentName:"p"}),"\n","The endpoint set to require login (",(0,r.kt)("inlineCode",{parentName:"p"},"self_only")," configuration) does not work when posting ",(0,r.kt)("inlineCode",{parentName:"p"},"email"),", but it will be used to register and unsubscribe from deliveries by posting the user's own ",(0,r.kt)("inlineCode",{parentName:"p"},"member_id")," while logged in."),(0,r.kt)("h3",{id:"registering-the-endpoints"},"Registering the endpoints"),(0,r.kt)("p",null,"Click on ","[Add new endpoint]"," to create the endpoint for registering the delivery and the login endpoint.  "),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/16bb089658b6714e8fe9e861eb5675e1.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/16bb089658b6714e8fe9e861eb5675e1.png",alt:"Image from Gyazo"})),(0,r.kt)("h4",{id:"endpoint-for-registering-the-delivery"},"Endpoint for registering the delivery"),(0,r.kt)("p",null,"Set the following information and click ","[Add]","."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Setting"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Path"),(0,r.kt)("td",{parentName:"tr",align:"left"},"magazine_subscribe")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Category"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Delivery")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Model"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MagazineSubscriber")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Operation"),(0,r.kt)("td",{parentName:"tr",align:"left"},"subscribe")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"allow_magazine_id"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"self_only"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Check the box")))),(0,r.kt)("h4",{id:"endpoint-for-unsubscribing-from-the-delivery"},"Endpoint for unsubscribing from the delivery"),(0,r.kt)("p",null,"Set the following information and click ","[Add]","."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Setting"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Path"),(0,r.kt)("td",{parentName:"tr",align:"left"},"magazine_unsubscribe")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Category"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Delivery")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Model"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MagazineSubscriber")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Operation"),(0,r.kt)("td",{parentName:"tr",align:"left"},"subscribe")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"allow_magazine_id"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"self_only"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Check the box")))),(0,r.kt)("h4",{id:"login-endpoint"},"Login endpoint"),(0,r.kt)("p",null,"Use the default login endpoint that is already set up.\nIf it does not exist, create a login endpoint with the following information:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Setting"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Path"),(0,r.kt)("td",{parentName:"tr",align:"left"},"login")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Category"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Authentication")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Model"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Login")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Operation"),(0,r.kt)("td",{parentName:"tr",align:"left"},"login_challenge")))),(0,r.kt)("h4",{id:"profile-endpoint"},"Profile endpoint"),(0,r.kt)("p",null,"Use the default profile endpoint that is already set up.\nIf it does not exist, create a profile endpoint with the following information:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Setting"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Path"),(0,r.kt)("td",{parentName:"tr",align:"left"},"profile")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Category"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Authentication")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Model"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Login")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Operation"),(0,r.kt)("td",{parentName:"tr",align:"left"},"profile")))),(0,r.kt)("h3",{id:"frontend-implementation"},"Frontend implementation"),(0,r.kt)("p",null,"Next, create a form for subscribing to the magazine delivery on the frontend.",(0,r.kt)("br",{parentName:"p"}),"\n","Create a folder called ",(0,r.kt)("inlineCode",{parentName:"p"},"subscribe_with_login")," and add the following ",(0,r.kt)("inlineCode",{parentName:"p"},"index.vue")," file.  "),(0,r.kt)("p",null,"In the event of an error in the post processing, the response can be received using ",(0,r.kt)("inlineCode",{parentName:"p"},"error.response.data"),". In the file below, the Kuroco message is obtained using the description ",(0,r.kt)("inlineCode",{parentName:"p"},"this.resultMessage = error.response.data.errors[0].message"),".  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markdown",metastring:'title="/pages/subscribe_with_login/index.vue"',title:'"/pages/subscribe_with_login/index.vue"'},'<template>\n  <div>\n    <form>\n      <h1>Subscribe to Magazine</h1>\n      <p v-if="resultMessage !== null">\n        {{ resultMessage }}\n      </p>\n      <form @submit.prevent="login">\n        <input v-model="email" name="email" type="email" placeholder="email" />\n        <input v-model="password" name="password" type="password" placeholder="password" />\n        <button type="submit">Login</button>\n      </form>\n      <button v-on:click.prevent="subscribeSubmit">Subscribe</button>\n      <button v-on:click.prevent="unsubscribeSubmit">Unsubscribe</button>\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      email: \'\',\n      password: \'\',\n      resultMessage: null,\n    }\n  },\n  methods: {\n    //Login\n    async login() {\n      try {\n        const payload = {\n          email: this.email,\n          password: this.password,\n        };\n        await this.$axios.$post(\'/rcms-api/1/login\', payload);\n        this.resultMessage = \'Successful login\';\n      } catch (error) {\n        this.resultMessage = error.response.data.errors[0].message\n      }\n    },\n    //Subscribe\n    async subscribeSubmit() {\n      try {\n        const payload = {\n          email: this.email\n        }\n        // post data\n        const response = await this.$axios.$post(`/rcms-api/1/magazine_subscribe/1`, payload)\n        this.resultMessage = response.messages[0]\n      } catch (error) {\n        this.resultMessage = error.response.data.errors[0].message\n      }\n    },\n    //Unsubscribe\n    async unsubscribeSubmit() {\n      try {\n        // post data\n        const response = await this.$axios.$post(`/rcms-api/1/magazine_unsubscribe/1`, {})\n        this.resultMessage = response.messages[0]\n      } catch (error) {\n        this.resultMessage = error.response.data.errors[0].message\n      }\n    },\n  }\n}\n<\/script>\n')),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"The above sample code is minimal for reference purposes.",(0,r.kt)("br",{parentName:"p"}),"\n","When using it in practice, please also use libraries such as ",(0,r.kt)("inlineCode",{parentName:"p"},"@nuxt/auth")," for validation processing and login functionality.")),(0,r.kt)("h3",{id:"confirming-the-operation"},"Confirming the operation"),(0,r.kt)("h4",{id:"subscribe"},"Subscribe"),(0,r.kt)("p",null,"Run ",(0,r.kt)("inlineCode",{parentName:"p"},"npm run dev")," to confirm the operation.",(0,r.kt)("br",{parentName:"p"}),"\n","After logging in at the URL ",(0,r.kt)("inlineCode",{parentName:"p"},"/subscribe_with_login"),", when you click ","[Subscribe]",', an API request is made to the Kuroco endpoint, and you can see the message "Registered".  '),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/fe0ba027f9acbceaeaee1e72f81a17af.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/fe0ba027f9acbceaeaee1e72f81a17af.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"When you check the ",(0,r.kt)("a",{parentName:"p",href:"/docs/management/notification-subscribers/"},"Subscribers")," page, you can see that the subscriber has been registered."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/0a54788561ec8c733494c1d1942a9ebb.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/0a54788561ec8c733494c1d1942a9ebb.png",alt:"Image from Gyazo"})),(0,r.kt)("h4",{id:"unsubscribe"},"Unsubscribe"),(0,r.kt)("p",null,"Next, when you click ","[Unsubscribe]",', an API request is made to the Kuroco endpoint, and you can see the message "Resigned".  '),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/a50950f87eadf52bc143b6b0222d4d19.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/a50950f87eadf52bc143b6b0222d4d19.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"On the Subscribers page, you can see that the subscriber has been removed."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/b367c0f6b8451be3ab546aa517ae63d3.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/b367c0f6b8451be3ab546aa517ae63d3.png",alt:"Image from Gyazo"})),(0,r.kt)("h2",{id:"making-subscription-registration-and-cancellation-without-login-required"},"Making subscription registration and cancellation without login required"),(0,r.kt)("p",null,"Modify the implementation so that subscription registration can be done with just an email, and subscription cancellation can be done by clicking the ","[Unsubscribe]"," link in the subscription message.",(0,r.kt)("br",{parentName:"p"}),"\n","For unsubscribing without logging in, use the key assigned to each subscriber to prevent unauthorized cancellation of other people's subscriptions."),(0,r.kt)("p",null,"You can check the key on the ",(0,r.kt)("a",{parentName:"p",href:"/docs/management/notification-subscribers/"},"Subscribers")," page in the management screen."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/d35032d6441ad6989d26c909a9d1f72b.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/d35032d6441ad6989d26c909a9d1f72b.png",alt:"Image from Gyazo"})),(0,r.kt)("h3",{id:"registering-endpoints"},"Registering Endpoints"),(0,r.kt)("p",null,"Click on ","[Add New Endpoint]"," to create endpoints for subscription registration and login."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/16bb089658b6714e8fe9e861eb5675e1.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/16bb089658b6714e8fe9e861eb5675e1.png",alt:"Image from Gyazo"})),(0,r.kt)("h4",{id:"subscription-registration-endpoint"},"Subscription Registration Endpoint"),(0,r.kt)("p",null,'Set the following information and click on "Add".'),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Setting"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Path"),(0,r.kt)("td",{parentName:"tr",align:"left"},"magazine_subscribe_with_key")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Category"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Subscription")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Model"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MagazineSubscriber")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Operation"),(0,r.kt)("td",{parentName:"tr",align:"left"},"subscribe")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"allow_magazine_id"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1")))),(0,r.kt)("h4",{id:"subscription-unsubscribe-endpoint"},"Subscription Unsubscribe Endpoint"),(0,r.kt)("p",null,'Set the following information and click on "Add".'),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Setting"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Path"),(0,r.kt)("td",{parentName:"tr",align:"left"},"magazine_unsubscribe_with_key")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Category"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Subscription")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Model"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MagazineSubscriber")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Operation"),(0,r.kt)("td",{parentName:"tr",align:"left"},"subscribe")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"allow_magazine_id"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"required_key"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Check the box")))),(0,r.kt)("h3",{id:"creating-custom-processing"},"Creating Custom Processing"),(0,r.kt)("p",null,"The key for unsubscribing from the subscription is displayed in ",(0,r.kt)("a",{parentName:"p",href:"/docs/management/notification-subscribers/"},"Subscribers")," page. Create a custom processing to make this key usable within the subscription message."),(0,r.kt)("p",null,"Click on ","[Operation]"," -> ","[Custom function]","."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/9a9b5f1fa42555de0222180269ef487b.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/9a9b5f1fa42555de0222180269ef487b.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Click on ","[Add]","."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/52169f762d9ea4abf1d05bb56d553906.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/52169f762d9ea4abf1d05bb56d553906.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"Enter the following information:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Setting"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Title"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Insertion of Magazine (to make key and email usable)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Identifier"),(0,r.kt)("td",{parentName:"tr",align:"left"},"substitution_key")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Component using this"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Trigger: ",(0,r.kt)("inlineCode",{parentName:"td"},"Insertion of Subscription"),(0,r.kt)("br",null),"Value: 1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Processing"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The following code")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-smarty"},"{assign_array var=substitutions values=''}\n{assign var=substitutions.key   value=$member_info.key}\n{assign var=substitutions.email value=$member_info.email}\n")),(0,r.kt)("h3",{id:"frontend-implementation-1"},"Frontend Implementation"),(0,r.kt)("p",null,"Create a page for subscription registration and a page for subscription unsubscribe in the frontend."),(0,r.kt)("p",null,"First, create a page for subscription registration.",(0,r.kt)("br",{parentName:"p"}),"\n","Create a folder named ",(0,r.kt)("inlineCode",{parentName:"p"},"subscribe_with_key")," and add the following ",(0,r.kt)("inlineCode",{parentName:"p"},"index.vue")," file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markup",metastring:'title="/pages/subscribe_with_key/index.vue"',title:'"/pages/subscribe_with_key/index.vue"'},'<template>\n  <div>\n    <form>\n      <h1>Subscribe to Magazine</h1>\n      <p v-if="resultMessage !== null">\n        {{ resultMessage }}\n      </p>\n      <input v-model="emailEntered" name="email" type="email" placeholder="email">\n      <button v-on:click.prevent="subscribeSubmit">Subscribe</button>\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      emailEntered: \'\',\n      resultMessage: null,\n    }\n  },\n  methods: {\n    //Subscribe\n    async subscribeSubmit() {\n      try {\n        const payload = {\n          email: this.emailEntered\n        }\n        // post data\n        const response = await this.$axios.$post(`/rcms-api/1/magazine_subscribe_with_key/1`, payload)\n        this.resultMessage = response.messages[0]\n      } catch (error) {\n        this.resultMessage = error.response.data.errors[0].message\n      }\n    }\n  }\n}\n<\/script>\n')),(0,r.kt)("p",null,"Next, create a page for subscription unsubscribe.",(0,r.kt)("br",{parentName:"p"}),"\n","Add the following ",(0,r.kt)("inlineCode",{parentName:"p"},"unsubscribe.vue")," file to the ",(0,r.kt)("inlineCode",{parentName:"p"},"subscribe_with_key")," folder."),(0,r.kt)("p",null,"The page for subscription unsubscribe assumes that it will be accessed through a link specified in the subscription message."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markup",metastring:'title="/pages/subscribe_with_key/unsubscribe.vue"',title:'"/pages/subscribe_with_key/unsubscribe.vue"'},'<template>\n  <div>\n    <h1>Unsubscribe to Magazine</h1>\n    <div>\n      Email: {{$route.query.email}}\n    </div>\n    <p v-if="resultMessage !== null">\n      {{ resultMessage }}\n    </p>\n  </div>\n</template>\n\n```markdown\n<script>\nexport default {\n  validate({ query }) {\n    return /[!-~]{32}/.test(query.key)\n  },\n  data() {\n    return {\n      error: null,\n      resultMessage: null,\n    }\n  },\n  methods: {\n    async unsubscribeSubmit() {\n      try {\n        const payload = {\n          email: this.$route.query.email,\n          key: this.$route.query.key\n        }\n        const response = await this.$axios.$post(`/rcms-api/1/magazine_unsubscribe_with_key/1`, payload)\n        this.resultMessage = response.messages[0]\n      } catch (error) {\n        this.resultMessage = error.response.data.errors[0].message\n      }\n    }\n  },\n  mounted($route) {\n    this.unsubscribeSubmit();\n  }\n}\n<\/script>\n')),(0,r.kt)("h3",{id:"confirmation-of-operation"},"Confirmation of operation"),(0,r.kt)("h4",{id:"register-for-delivery"},"Register for delivery"),(0,r.kt)("p",null,"Run ",(0,r.kt)("inlineCode",{parentName:"p"},"npm run dev")," to confirm the operation.",(0,r.kt)("br",{parentName:"p"}),"\n","When you enter an email address in the URL ",(0,r.kt)("inlineCode",{parentName:"p"},"/subscribe_with_key")," and click ","[Subscribe]",', an API request is made to Kuroco\'s endpoint, and you can see the message "Registered".  '),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/50aa5a0cd879f69dce6187c5f8349188.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/50aa5a0cd879f69dce6187c5f8349188.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"When you check the ",(0,r.kt)("a",{parentName:"p",href:"/docs/management/notification-subscribers/"},"Subscribers")," page, you can see that the subscriber is registered."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/6b479e8d98070cf81582221e94a214d6.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/6b479e8d98070cf81582221e94a214d6.png",alt:"Image from Gyazo"})),(0,r.kt)("h4",{id:"send-a-delivery-message"},"Send a delivery message"),(0,r.kt)("p",null,"Send the following email to the subscriber from ",(0,r.kt)("a",{parentName:"p",href:"/docs/management/notification-message-editor/"},"Notification Message Editor"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<p>Thank you for trying our service!</p>\n<p>This email is sent from Kuroco. If you wish to unsubscribe, please click <a href="http://localhost:3000/subscribe_with_key/unsubscribe?email=%email%&key=%key%">here</a>.</p>\n<p>Best regards,<br>Kuroco Team</p>\n')),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/3c6eac8e506101755ad4fbe559130aa0.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/3c6eac8e506101755ad4fbe559130aa0.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"You will receive a delivery message with a link to the unsubscribe page.  "),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/4425d4855b7580238c7ef8411b4eeb6f.jpg?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/4425d4855b7580238c7ef8411b4eeb6f.jpg",alt:"Image from Gyazo"})),(0,r.kt)("h4",{id:"unsubscribe-using-the-link-in-the-message"},"Unsubscribe using the link in the message"),(0,r.kt)("p",null,"Accessing the link will send the email and key attached as query parameters to Kuroco's endpoint, completing the unsubscribe process.  "),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/9389feb6c4f958f9294766463bc44516.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/9389feb6c4f958f9294766463bc44516.png",alt:"Image from Gyazo"})),(0,r.kt)("p",null,"This concludes the explanation of how to build a form to register and unsubscribe subscribers for the delivery function.  "),(0,r.kt)("h2",{id:"related-documents"},"Related Documents"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/reference/trigger-variables/#notification-substitution"},"List of triggers and variables available for custom functions - Notification substitution"))))}m.isMDXComponent=!0}}]);