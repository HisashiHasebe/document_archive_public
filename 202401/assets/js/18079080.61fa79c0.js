"use strict";(self.webpackChunkkurokuro=self.webpackChunkkurokuro||[]).push([[67979],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=i.createContext({}),c=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},g=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=c(n),g=r,f=u["".concat(l,".").concat(g)]||u[g]||d[g]||o;return n?i.createElement(f,s(s({ref:t},p),{},{components:n})):i.createElement(f,s({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=g;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[u]="string"==typeof e?e:r,s[1]=a;for(var c=2;c<o;c++)s[c]=n[c];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}g.displayName="MDXCreateElement"},13433:(e,t,n)=>{n.d(t,{Z:()=>r});var i=n(67294);function r(e){let{faqs:t=[]}=e;if(0===(Array.isArray(t)?t.filter((e=>e.question&&e.answer)):[]).length)return null;const n={"@context":"https://schema.org","@type":"FAQPage",mainEntity:t.map((e=>({"@type":"Question",name:e.question,acceptedAnswer:{"@type":"Answer",text:e.answer}})))},r=JSON.stringify(n,null,2);return i.createElement("script",{type:"application/ld+json"},r)}},43815:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>g,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var i=n(87462),r=(n(67294),n(3905)),o=n(13433);const s={title:"Why Are Triggers Called Twice After Content Update?",description:"Triggers may be called twice when processing within a trigger includes logic that meets its own execution conditions, essentially creating a trigger loop.",category:"trouble"},a=void 0,l={unversionedId:"faq/why-is-the-trigger-called-twice-after-content-update",id:"faq/why-is-the-trigger-called-twice-after-content-update",title:"Why Are Triggers Called Twice After Content Update?",description:"Triggers may be called twice when processing within a trigger includes logic that meets its own execution conditions, essentially creating a trigger loop.",source:"@site/docs/faq/why-is-the-trigger-called-twice-after-content-update.mdx",sourceDirName:"faq",slug:"/faq/why-is-the-trigger-called-twice-after-content-update",permalink:"/docs/faq/why-is-the-trigger-called-twice-after-content-update",draft:!1,editUrl:"https://github.com/diverta/kuroco-documents/tree/main/packages/create-docusaurus/templates/shared/docs/faq/why-is-the-trigger-called-twice-after-content-update.mdx",tags:[],version:"current",frontMatter:{title:"Why Are Triggers Called Twice After Content Update?",description:"Triggers may be called twice when processing within a trigger includes logic that meets its own execution conditions, essentially creating a trigger loop.",category:"trouble"},sidebar:"faqSidebar",previous:{title:"Why do I sometimes see non-existent data in past articles after modifying the content structure?",permalink:"/docs/faq/why-do-I-sometimes-see-nonexistent-data-in-past-articles-after-modifying-the-content-structure"}},c={},p=[{value:"About Infinite Loops",id:"about-infinite-loops",level:2},{value:"Constraints on Loops Configured in APIs",id:"constraints-on-loops-configured-in-apis",level:2},{value:"Prohibition of Requests to One&#39;s Own Endpoint",id:"prohibition-of-requests-to-ones-own-endpoint",level:3},{value:"Prohibition of Multi-level APIs",id:"prohibition-of-multi-level-apis",level:3},{value:"Trigger-Based Loop Processing",id:"trigger-based-loop-processing",level:2},{value:"Process Until Loop Termination",id:"process-until-loop-termination",level:3},{value:"Writing Code to Terminate Trigger Loops in One Execution",id:"writing-code-to-terminate-trigger-loops-in-one-execution",level:3}],u={toc:p},d="wrapper";function g(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(o.Z,{faqs:[{question:"Why Are Triggers Called Twice After Content Update?",answer:"Triggers may be called twice when processing within a trigger includes logic that meets its own execution conditions, essentially creating a trigger loop."}],mdxType:"StructuredDataFaqs"}),(0,r.kt)("p",null,"When processing within a trigger includes logic that meets its own execution conditions, effectively creating a trigger loop, triggers may be called twice. Below, we explain the constraints in Kuroco regarding infinite loops and the reasons for triggers being called twice."),(0,r.kt)("h2",{id:"about-infinite-loops"},"About Infinite Loops"),(0,r.kt)("p",null,'In cases where incorrect implementations such as "calling one\'s own endpoint within a custom process set for Api::request_api\'s endpoint" or "calling one\'s own endpoint in post-processing" occur, related actions are executed continuously, resulting in a program that never terminates. Infinite loops are a serious issue as they increase server load and lead to resource wastage.'),(0,r.kt)("h2",{id:"constraints-on-loops-configured-in-apis"},"Constraints on Loops Configured in APIs"),(0,r.kt)("p",null,"Kuroco has established the following restrictions as a preventive measure against infinite loops:"),(0,r.kt)("h3",{id:"prohibition-of-requests-to-ones-own-endpoint"},"Prohibition of Requests to One's Own Endpoint"),(0,r.kt)("p",null,"In custom processes, it is not possible to send requests to the endpoint that called itself. This constraint cancels requests to the endpoint and terminates the process in cases such as:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Calling one's own endpoint within the custom process set for Api::request_api/Api::request_api_post's endpoint"),(0,r.kt)("li",{parentName:"ul"},"Calling one's own endpoint in pre-processing/post-processing, and so on.")),(0,r.kt)("h3",{id:"prohibition-of-multi-level-apis"},"Prohibition of Multi-level APIs"),(0,r.kt)("p",null,"At Kuroco, calling APIs in a nested manner is prohibited. For instance, invoking an API from the ",(0,r.kt)("inlineCode",{parentName:"p"},"{api_internal}")," plugin, and if ",(0,r.kt)("inlineCode",{parentName:"p"},"{api_internal}")," is further executed during that API call, it will result in an error."),(0,r.kt)("h2",{id:"trigger-based-loop-processing"},"Trigger-Based Loop Processing"),(0,r.kt)("h3",{id:"process-until-loop-termination"},"Process Until Loop Termination"),(0,r.kt)("p",null,"When creating a loop based on triggers, for example, if you make an API call to edit content within a trigger after editing the content, the API call in the first trigger is initiated from the admin content editing page. Therefore, it is not subject to the constraints of ",(0,r.kt)("a",{parentName:"p",href:"#prohibition-of-requests-to-ones-own-endpoint"},"prohibiting requests to your own endpoint"),", and content editing via the API is performed, and the second trigger is executed."),(0,r.kt)("p",null,"In the second trigger, the API call is made from your own endpoint, causing the API request to be canceled, and the loop terminates."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Content Update(Admin panel)\n\u2193\nTrigger Execution (1st time)\nContent Update API Request (1st time)\n\u2193\nContent Update(API)\n\u2193\nTrigger Execution (2nd time)\nContent Update API Request is canceled due to the constraint\n\u2193\nProcess Completion\n")),(0,r.kt)("h3",{id:"writing-code-to-terminate-trigger-loops-in-one-execution"},"Writing Code to Terminate Trigger Loops in One Execution"),(0,r.kt)("p",null,"To end the execution of triggers in one go when using the trigger after content updates to update content with the same content definition, please include the following code at the beginning of your custom process:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-smarty"},"{if $smarty.server.HTTP_RCMS_X_API_REQUEST_CNT > 0}\n    {return}\n{/if}\n")))}g.isMDXComponent=!0}}]);