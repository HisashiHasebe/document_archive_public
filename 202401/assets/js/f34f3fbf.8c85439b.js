"use strict";(self.webpackChunkkurokuro=self.webpackChunkkurokuro||[]).push([[78817],{3905:(e,t,o)=>{o.d(t,{Zo:()=>l,kt:()=>m});var r=o(67294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function c(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},a=Object.keys(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var u=r.createContext({}),s=function(e){var t=r.useContext(u),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},l=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,a=e.originalType,u=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=s(o),f=n,m=p["".concat(u,".").concat(f)]||p[f]||d[f]||a;return o?r.createElement(m,i(i({ref:t},l),{},{components:o})):r.createElement(m,i({ref:t},l))}));function m(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=o.length,i=new Array(a);i[0]=f;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c[p]="string"==typeof e?e:n,i[1]=c;for(var s=2;s<a;s++)i[s]=o[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,o)}f.displayName="MDXCreateElement"},93529:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var r=o(87462),n=(o(67294),o(3905));const a={title:"KurocoFront",category:"kuroco_front",weight:1},i=void 0,c={unversionedId:"about/kurocofront",id:"about/kurocofront",title:"KurocoFront",description:"KurocoFront is a static content hosting service that uses a CDN. You can use your own domain and set up TLS certificates, basic authentication, and IP-based access restrictions for free.",source:"@site/docs/about/kurocofront.md",sourceDirName:"about",slug:"/about/kurocofront",permalink:"/docs/about/kurocofront",draft:!1,editUrl:"https://github.com/diverta/kuroco-documents/tree/main/packages/create-docusaurus/templates/shared/docs/about/kurocofront.md",tags:[],version:"current",frontMatter:{title:"KurocoFront",category:"kuroco_front",weight:1},sidebar:"aboutSidebar",previous:{title:"About Kuroco",permalink:"/docs/about/about-kuroco"},next:{title:"Differences between Jamstack and conventional websites",permalink:"/docs/about/jamstack-website"}},u={},s=[{value:"Specifications",id:"specifications",level:2},{value:"Tutorials",id:"tutorials",level:2},{value:"Other documentation",id:"other-documentation",level:2}],l={toc:s},p="wrapper";function d(e){let{components:t,...o}=e;return(0,n.kt)(p,(0,r.Z)({},l,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"KurocoFront is a static content hosting service that uses a CDN. You can use your own domain and set up TLS certificates, basic authentication, and IP-based access restrictions for free.\nThe documentation for KurocoFront is listed below. New content will be added regularly."),(0,n.kt)("h2",{id:"specifications"},"Specifications"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Commit hashes keep files static each time they are deployed from GitHub Actions."),(0,n.kt)("li",{parentName:"ul"},"CDN caches have a validity period of 365 days (or 31,536,000 seconds). Changing the commit hashes clears all caches.  "),(0,n.kt)("li",{parentName:"ul"},"The query string in the URL does not serve as a cache key.  "),(0,n.kt)("li",{parentName:"ul"},"Image files with extensions .gif, .png, .jpg, .jpeg, and .webp are dynamically converted and optimized."),(0,n.kt)("li",{parentName:"ul"},"The trailing slash (i.e., auto-addition of a terminal ",(0,n.kt)("inlineCode",{parentName:"li"},"/")," to URLs) is typically enabled. ")),(0,n.kt)("h2",{id:"tutorials"},"Tutorials"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/tutorials/using-a-custom-domain-name-on-kurocofront/"},"How to use your original domain name on KurocoFront")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/tutorials/connect-to-github-with-kuroco-front/"},"How to deploy the source from GitHub to KurocoFront"))),(0,n.kt)("h2",{id:"other-documentation"},"Other documentation"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/faq/what-is-kuroco_front_json/"},"FAQ: What is kuroco_front.json?")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/faq/how-do-i-verify-the-hash-responses-used-by-kurocofront/"},"FAQ: How do I verify the hash responses used by KurocoFront?")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/reference/api-convert-image/"},"Reference: Dynamic image conversion")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/faq/can-i-access-kurocofront-through-a-proxy-server/"},"FAQ: Can I access KurocoFront through a proxy server?")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/faq/what-should-I-do-if-file-updates-are-not-reflected-in-kurocofront/"},"FAQ: My file updates are not reflected in KurocoFront. What should I do?"))))}d.isMDXComponent=!0}}]);