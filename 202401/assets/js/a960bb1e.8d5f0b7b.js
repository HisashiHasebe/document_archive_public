"use strict";(self.webpackChunkkurokuro=self.webpackChunkkurokuro||[]).push([[48949],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=i,u=d["".concat(p,".").concat(m)]||d[m]||g[m]||o;return n?a.createElement(u,r(r({ref:t},c),{},{components:n})):a.createElement(u,r({ref:t},c))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[d]="string"==typeof e?e:i,r[1]=s;for(var l=2;l<o;l++)r[l]=n[l];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},44716:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>g,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=n(87462),i=(n(67294),n(3905));const o={title:"Splitting your contents list into multiple pages using Kuroco and Nuxt.js",description:"This tutorial uses Kuroco and Nuxt.js to split the contents list created in the contents list page tutorial."},r=void 0,s={unversionedId:"tutorials/splitting-the-contents-list-into-multiple-pages",id:"tutorials/splitting-the-contents-list-into-multiple-pages",title:"Splitting your contents list into multiple pages using Kuroco and Nuxt.js",description:"This tutorial uses Kuroco and Nuxt.js to split the contents list created in the contents list page tutorial.",source:"@site/docs/tutorials/splitting-the-contents-list-into-multiple-pages.md",sourceDirName:"tutorials",slug:"/tutorials/splitting-the-contents-list-into-multiple-pages",permalink:"/docs/tutorials/splitting-the-contents-list-into-multiple-pages",draft:!1,editUrl:"https://github.com/diverta/kuroco-documents/tree/main/packages/create-docusaurus/templates/shared/docs/tutorials/splitting-the-contents-list-into-multiple-pages.md",tags:[],version:"current",frontMatter:{title:"Splitting your contents list into multiple pages using Kuroco and Nuxt.js",description:"This tutorial uses Kuroco and Nuxt.js to split the contents list created in the contents list page tutorial."},sidebar:"documentationSidebar",previous:{title:"Integrating preview page",permalink:"/docs/tutorials/integrate-preview-page"},next:{title:"Setting up inquiry forms with Kuroco and Nuxt.js",permalink:"/docs/tutorials/setting-up-inquiry-forms"}},p={},l=[{value:"Setting the number of contents per page on Kuroco",id:"setting-the-number-of-contents-per-page-on-kuroco",level:2},{value:"Verifying that Swagger UI can retrieve the information for each page",id:"verifying-that-swagger-ui-can-retrieve-the-information-for-each-page",level:2},{value:"Creating dynamic pages",id:"creating-dynamic-pages",level:2},{value:"Adding current page information to the parameters",id:"adding-current-page-information-to-the-parameters",level:2},{value:"Displaying page transition links",id:"displaying-page-transition-links",level:2}],c={toc:l},d="wrapper";function g(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"When you have a large number of content entries, you may wish to split the contents list into multiple pages.\nSince Kuroco's topics list endpoints include the number of contents, current page, total page count, and other information in their responses, you can implement pagination without having to calculate the page count on the front-end."),(0,i.kt)("p",null,"This tutorial uses Kuroco and Nuxt.js to split the contents list created in ",(0,i.kt)("a",{parentName:"p",href:"/docs/tutorials/integrate-kuroco-with-nuxt/"},"this earlier tutorial"),"."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"To use this tutorial, you should have already built your project with Kuroco and Nuxt.js and created a contents list page. If you have not yet done so, refer to the tutorials below:"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/tutorials/beginners-guide/"},"Beginner's guide to Kuroco")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/tutorials/integrate-kuroco-with-nuxt/"},"Creating content list page with Kuroco and Nuxt.js")))),(0,i.kt)("h2",{id:"setting-the-number-of-contents-per-page-on-kuroco"},"Setting the number of contents per page on Kuroco"),(0,i.kt)("p",null,"The number of contents displayed per page is fixed. You can set up this parameter in Kuroco's admin panel. The admin panel passes information about the pages to be displayed to the endpoints as parameters, enabling you to receive the responses for each page."),(0,i.kt)("p",null,"First, navigate to the endpoint list screen for the target contents list (for this tutorial, we will use the news list as an example)."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/5f8d874e0a746f643ad34ef81eb6ed88.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/5f8d874e0a746f643ad34ef81eb6ed88.png",alt:"Image from Gyazo"}),"\nClick ","[Update]"," next to the news list endpoint (in this case ",(0,i.kt)("inlineCode",{parentName:"p"},"/rcms-api/2/news"),")."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/04800e4b5648e593b7c69fb85df68fc6.jpg?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/04800e4b5648e593b7c69fb85df68fc6.jpg",alt:"Image from Gyazo"}),'\nIn the endpoint configuration dialog, enter the number of entries per page in the "cnt" field (for this tutorial, enter ',(0,i.kt)("inlineCode",{parentName:"p"},"4"),"). Then click ","[Update]"," to save these settings."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/31459ae79ab23daf6059c5d2f2e8a990.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/31459ae79ab23daf6059c5d2f2e8a990.png",alt:"Image from Gyazo"}),(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/d8a3014317f7a9e821d11daad16e7792.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/d8a3014317f7a9e821d11daad16e7792.png",alt:"Image from Gyazo"})),(0,i.kt)("h2",{id:"verifying-that-swagger-ui-can-retrieve-the-information-for-each-page"},"Verifying that Swagger UI can retrieve the information for each page"),(0,i.kt)("p",null,"Next, verify the endpoint response. Go to the endpoint list screen containing the news list endpoint."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/5f8d874e0a746f643ad34ef81eb6ed88.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/5f8d874e0a746f643ad34ef81eb6ed88.png",alt:"Image from Gyazo"}),"\nClick ","[Swagger UI]","."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/9981d7d67c9b1b96419263e2ccd70e12.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/9981d7d67c9b1b96419263e2ccd70e12.png",alt:"Image from Gyazo"}),'\nUnder "Content", select the news list endpoint and click ',"[Try it out]","."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/f832f6209f154ccfc2dfd617447a356f.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/f832f6209f154ccfc2dfd617447a356f.png",alt:"Image from Gyazo"}),"\nEnter ",(0,i.kt)("inlineCode",{parentName:"p"},"1"),' in the "pageID" field.'),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/12850b643d2379d2b5c0969f53fd7ca7.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/12850b643d2379d2b5c0969f53fd7ca7.png",alt:"Image from Gyazo"}),"\nThen, click ","[Execute]","."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/9bab9bd7d45ee201d0c99c07e49e4971.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/9bab9bd7d45ee201d0c99c07e49e4971.png",alt:"Image from Gyazo"}),"\nIn the response body, you should see 4 entries for the first page under ",(0,i.kt)("inlineCode",{parentName:"p"},"pageInfo"),"."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/7adaa2de0573cf4fe8773607cddba737.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/7adaa2de0573cf4fe8773607cddba737.png",alt:"Image from Gyazo"}),"\nSimilarly, enter a different page ID and click ","[Execute]"," to view the respective ",(0,i.kt)("inlineCode",{parentName:"p"},"pageInfo")," response. Use this method to implement pagination on the front-end."),(0,i.kt)("h2",{id:"creating-dynamic-pages"},"Creating dynamic pages"),(0,i.kt)("p",null,"Nuxt.js allows you to create dynamic pages by setting directory and file names starting with ",(0,i.kt)("inlineCode",{parentName:"p"},"_")," (underscore).",(0,i.kt)("br",{parentName:"p"}),"\n","Paste the file ",(0,i.kt)("inlineCode",{parentName:"p"},"index.vue")," into the ",(0,i.kt)("inlineCode",{parentName:"p"},"/news/list/")," directory and rename it to ",(0,i.kt)("inlineCode",{parentName:"p"},"_page.vue"),"."),(0,i.kt)("p",null,"For dynamic pages, the ",(0,i.kt)("inlineCode",{parentName:"p"},"1")," in ",(0,i.kt)("inlineCode",{parentName:"p"},"/news/list/1")," can be displayed as ",(0,i.kt)("inlineCode",{parentName:"p"},"{{ this.$route.params.page }}")," when accessed via the URL.\nAdd the line ",(0,i.kt)("inlineCode",{parentName:"p"},"<p>News list page {{ this.$route.params.page }}</p>")," as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-markup",metastring:"[/pages/news/list/_page.vue]","[/pages/news/list/_page.vue]":!0},'<template>\n  <div>\n    <p>News list page{{ this.$route.params.page }}</p>\n    <div v-for="n in response.list" :key="n.slug">\n      <nuxt-link :to="\'/news/\' + n.slug">{{ n.ymd }} {{ n.subject }}</nuxt-link>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  async asyncData({ $axios }) {\n    try {\n      const response = await $axios.$get(\n        process.env.BASE_URL + \'/rcms-api/2/news\'\n      );\n      return { response };\n    } catch (e) {\n      console.log(e.message);\n    }\n  },\n};\n<\/script>\n')),(0,i.kt)("p",null,"Verify that the current page number is displayed on ",(0,i.kt)("inlineCode",{parentName:"p"},"http://localhost:3000/news/list/**")," as follows."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/521b5c5c381ea6963101df914e657c6a.gif?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/521b5c5c381ea6963101df914e657c6a.gif",alt:"Image from Gyazo"}),"\nAt this stage, no page number information has been sent to the endpoint to Kuroco. Therefore, the news content displayed is identical no matter which URL is used to access the site."),(0,i.kt)("h2",{id:"adding-current-page-information-to-the-parameters"},"Adding current page information to the parameters"),(0,i.kt)("p",null,"The next step is to add information about the current page to the parameters to obtain the response for each page.",(0,i.kt)("br",{parentName:"p"}),"\n","Modify ",(0,i.kt)("inlineCode",{parentName:"p"},"_page.vue")," as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-markup",metastring:"[/pages/news/list/_page.vue]","[/pages/news/list/_page.vue]":!0},'<template>\n  <div>\n    <p>News list page{{ this.$route.params.page }}</p>\n    <div v-for="n in response.list" :key="n.slug">\n      <nuxt-link :to="\'/news/\' + n.slug">{{ n.ymd }} {{ n.subject }}</nuxt-link>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  async asyncData({ $axios, params }) {\n    try {\n      const response = await $axios.$get(\n        process.env.BASE_URL + \'/rcms-api/2/news\',\n        {\n          params: {\n            pageID: params.page,\n          },\n        }\n      );\n      return { response };\n    } catch (e) {\n      console.log(e.message);\n    }\n  },\n};\n<\/script>\n')),(0,i.kt)("p",null,"Now you should see the news list displaying changing based on the access URL."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/518e376a910439644384a6329ea31b51.gif?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/518e376a910439644384a6329ea31b51.gif",alt:"Image from Gyazo"})),(0,i.kt)("h2",{id:"displaying-page-transition-links"},"Displaying page transition links"),(0,i.kt)("p",null,"Next, we need to create links to transition between the pages.",(0,i.kt)("br",{parentName:"p"}),"\n","The ",(0,i.kt)("inlineCode",{parentName:"p"},"pageInfo")," for the endpoint response contains information about the current page number and the last page. We will use this information."),(0,i.kt)("p",null,"For example, we can insert the simple description below:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-markup",metastring:"[/pages/news/list/_page.vue]","[/pages/news/list/_page.vue]":!0},'<template>\n  <div>\n    <p>News list page{{ this.$route.params.page }}</p>\n    <div v-for="n in response.list" :key="n.slug">\n      <nuxt-link :to="\'/news/\' + n.slug">{{ n.ymd }} {{ n.subject }}</nuxt-link>\n    </div>\n\n    <ul style="list-style: none; display: flex">\n      <li v-if="response.pageInfo.pageNo === 1">Previous</li>\n      <li v-else>\n        <nuxt-link :to="\'/news/list/\' + (response.pageInfo.pageNo - 1)"\n          >Previous</nuxt-link\n        >\n      </li>\n      <li v-for="i in response.pageInfo.totalPageCnt" :key="i">\n        <nuxt-link :to="\'/news/list/\' + i">{{ i }}</nuxt-link>\n      </li>\n      <li v-if="response.pageInfo.pageNo === response.pageInfo.totalPageCnt">\n        Next\n      </li>\n      <li v-else>\n        <nuxt-link :to="\'/news/list/\' + (response.pageInfo.pageNo + 1)"\n          >Next</nuxt-link\n        >\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  async asyncData({ $axios, params }) {\n    try {\n      const response = await $axios.$get(\n        process.env.BASE_URL + \'/rcms-api/2/news\',\n        {\n          params: {\n            pageID: params.page,\n          },\n        }\n      );\n      return { response };\n    } catch (e) {\n      console.log(e.message);\n    }\n  },\n};\n<\/script>\n')),(0,i.kt)("p",null,"This adds ","[Previous]"," and ","[Next]"," links to each page."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/43c94232ac11b4c2221c8c1805325511.gif?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/43c94232ac11b4c2221c8c1805325511.gif",alt:"Image from Gyazo"}),"\nFinally, create ",(0,i.kt)("inlineCode",{parentName:"p"},"index.vue")," by copying ",(0,i.kt)("inlineCode",{parentName:"p"},"_page.vue")," so that it can also be accessed at the ",(0,i.kt)("inlineCode",{parentName:"p"},"/news/list/")," URL."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"pages\n - news\n   - list\n     - _page.vue\n     - index.vue\n")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/84a54baf4764a4e59309f70a5b505592.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/84a54baf4764a4e59309f70a5b505592.png",alt:"Image from Gyazo"})))}g.isMDXComponent=!0}}]);