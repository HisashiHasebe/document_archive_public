"use strict";(self.webpackChunkkurokuro=self.webpackChunkkurokuro||[]).push([[90933],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>f});var a=n(67294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function r(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,a,o=function(t,e){if(null==t)return{};var n,a,o={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var l=a.createContext({}),c=function(t){var e=a.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):r(r({},e),t)),n},p=function(t){var e=c(t.components);return a.createElement(l.Provider,{value:e},t.children)},d="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var n=t.components,o=t.mdxType,i=t.originalType,l=t.parentName,p=s(t,["components","mdxType","originalType","parentName"]),d=c(n),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(f,r(r({ref:e},p),{},{components:n})):a.createElement(f,r({ref:e},p))}));function f(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var i=n.length,r=new Array(i);r[0]=m;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s[d]="string"==typeof t?t:o,r[1]=s;for(var c=2;c<i;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},68822:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(87462),o=(n(67294),n(3905));const i={title:"Notify GitHub Actions build results to Slack using slack-send",description:"In this tutorial, we will combine GitHub Actions and slack-send to notify build results to Slack."},r=void 0,s={unversionedId:"tutorials/handling-a-slack-send-in-github-actions",id:"tutorials/handling-a-slack-send-in-github-actions",title:"Notify GitHub Actions build results to Slack using slack-send",description:"In this tutorial, we will combine GitHub Actions and slack-send to notify build results to Slack.",source:"@site/docs/tutorials/handling-a-slack-send-in-github-actions.md",sourceDirName:"tutorials",slug:"/tutorials/handling-a-slack-send-in-github-actions",permalink:"/docs/tutorials/handling-a-slack-send-in-github-actions",draft:!1,editUrl:"https://github.com/diverta/kuroco-documents/tree/main/packages/create-docusaurus/templates/shared/docs/tutorials/handling-a-slack-send-in-github-actions.md",tags:[],version:"current",frontMatter:{title:"Notify GitHub Actions build results to Slack using slack-send",description:"In this tutorial, we will combine GitHub Actions and slack-send to notify build results to Slack."},sidebar:"documentationSidebar",previous:{title:'Handling a "generate" error in GitHub Actions',permalink:"/docs/tutorials/handling-a-generate-error-in-github-actions"},next:{title:"Adding Comments Only Visible to Specific Users with Activity Function",permalink:"/docs/tutorials/how-to-only-display-comments-that-are-addressed-to-a-specific-user"}},l={},c=[{value:"Overview",id:"overview",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Create a notification app from Slack app settings",id:"create-a-notification-app-from-slack-app-settings",level:2},{value:"Install the app in the workspace",id:"install-the-app-in-the-workspace",level:2},{value:"Add Webhook URL to GitHub Secrets",id:"add-webhook-url-to-github-secrets",level:2},{value:"Creating a Workflow File for Slack Notifications",id:"creating-a-workflow-file-for-slack-notifications",level:2}],p={toc:c},d="wrapper";function u(t){let{components:e,...n}=t;return(0,o.kt)(d,(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"overview"},"Overview"),(0,o.kt)("p",null,"In this tutorial, we will combine GitHub Actions and slack-send to notify build results to Slack."),(0,o.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"This tutorial assumes that you are operating a website under the following conditions:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Using Next.js/Nuxt.js."),(0,o.kt)("li",{parentName:"ul"},"Using KurocoFront."),(0,o.kt)("li",{parentName:"ul"},"Using GitHub Actions.")),(0,o.kt)("p",null,"Also, in this tutorial, we will use slack-send to send notifications to Slack.\nPlease refer to the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/marketplace/actions/slack-send"},"slack-send documentation")," for details."),(0,o.kt)("h2",{id:"create-a-notification-app-from-slack-app-settings"},"Create a notification app from Slack app settings"),(0,o.kt)("p",null,"Create an app from the following screen:\n",(0,o.kt)("a",{parentName:"p",href:"https://api.slack.com/apps?new_app=1"},"https://api.slack.com/apps?new_app=1")),(0,o.kt)("p",null,"Select ",(0,o.kt)("inlineCode",{parentName:"p"},"From an app manifest"),".\n",(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/7f71f308af9438575efab8f5a34452b6.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/7f71f308af9438575efab8f5a34452b6.png",alt:"Image from Gyazo"})),(0,o.kt)("p",null,"Select the workspace to add the app.\n",(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/b82feba53d594319fb081662d1192e90.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/b82feba53d594319fb081662d1192e90.png",alt:"Image from Gyazo"})),(0,o.kt)("p",null,"Set the following YAML in ",(0,o.kt)("inlineCode",{parentName:"p"},"App Manifest"),".\nUse incoming-webhook to send notifications to Slack."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"_metadata:\n  major_version: 1\n  minor_version: 1\ndisplay_information:\n  name: github-action-slack-send\nfeatures:\n  bot_user:\n    display_name: github-action-slack-send\noauth_config:\n  scopes:\n    bot:\n      - incoming-webhook\n")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/368a7240d14111e8f79764fe2d159d96.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/368a7240d14111e8f79764fe2d159d96.png",alt:"Image from Gyazo"})),(0,o.kt)("p",null,"Click ","[Create]"," to create the app.\n",(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/53ee0dcbfb91c61cb538bc2383c984de.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/53ee0dcbfb91c61cb538bc2383c984de.png",alt:"Image from Gyazo"})),(0,o.kt)("h2",{id:"install-the-app-in-the-workspace"},"Install the app in the workspace"),(0,o.kt)("p",null,"Install the app you created in the workspace from ",(0,o.kt)("inlineCode",{parentName:"p"},"Install to Workspace")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"Basic Information"),".\n",(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/b87265fe036478803a870fde77d73fd2.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/b87265fe036478803a870fde77d73fd2.png",alt:"Image from Gyazo"})),(0,o.kt)("p",null,"Select the channel to notify.\n",(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/284e65bf367d54d4cc06841c47492064.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/284e65bf367d54d4cc06841c47492064.png",alt:"Image from Gyazo"})),(0,o.kt)("p",null,"After the app is added, you can see that ",(0,o.kt)("inlineCode",{parentName:"p"},"Bot User OAuth Token")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Webhook URL")," are added to ",(0,o.kt)("inlineCode",{parentName:"p"},"Install app"),".\nCopy the ",(0,o.kt)("inlineCode",{parentName:"p"},"Webhook URL")," as it will be registered in GitHub.\n",(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/9ad1726519c4f79f22dfe63a8c808a2a.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/9ad1726519c4f79f22dfe63a8c808a2a.png",alt:"Image from Gyazo"})),(0,o.kt)("h2",{id:"add-webhook-url-to-github-secrets"},"Add Webhook URL to GitHub Secrets"),(0,o.kt)("p",null,"Open the GitHub repository page.\nClick ",(0,o.kt)("inlineCode",{parentName:"p"},"Settings")," -> ",(0,o.kt)("inlineCode",{parentName:"p"},"Secrets and variables")," -> ",(0,o.kt)("inlineCode",{parentName:"p"},"New repository secret")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"Actions"),".\n",(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/a7fd74fd355d28ff13d31fd221c434d5.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/a7fd74fd355d28ff13d31fd221c434d5.png",alt:"Image from Gyazo"})),(0,o.kt)("p",null,"Set ",(0,o.kt)("inlineCode",{parentName:"p"},"SLACK_INCOMING_WEBHOOK_URL")," in Name.\nSet the copied ",(0,o.kt)("inlineCode",{parentName:"p"},"Webhook URL")," in Secret.\n",(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/d7f0c1dd230b542c6970dcafe533a97f.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/d7f0c1dd230b542c6970dcafe533a97f.png",alt:"Image from Gyazo"})),(0,o.kt)("p",null,"Once you have entered the information, click ","[Add secret]"," to add the GitHub secret."),(0,o.kt)("h2",{id:"creating-a-workflow-file-for-slack-notifications"},"Creating a Workflow File for Slack Notifications"),(0,o.kt)("p",null,"Create a file named ",(0,o.kt)("inlineCode",{parentName:"p"},"slack-build-notifier.yml")," in the ",(0,o.kt)("inlineCode",{parentName:"p"},".github/workflows/")," directory and configure it with the following content. In the ",(0,o.kt)("inlineCode",{parentName:"p"},"workflows")," section, set the name of the workflow file for the build."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'name: Slack Build Notifier\non:\n  workflow_run:\n    workflows:\n      - Build and deploy to Kuroco front\n    types: [completed]\njobs:\n  on-success:\n    runs-on: ubuntu-latest\n    if: ${{ github.event.workflow_run.conclusion == \'success\' }}\n    steps:\n      - uses: actions/checkout@v2\n      - name: Send GitHub Action trigger data to Slack workflow\n        id: slack\n        uses: slackapi/slack-github-action@v1.23.0\n        with:\n          payload: |\n            {\n              "blocks": [\n                {\n                  "type": "section",\n                  "text": {\n                    "type": "mrkdwn",\n                    "text": "Build succeeded"\n                  }\n                },\n                {\n                  "type": "section",\n                  "text": {\n                    "type": "mrkdwn",\n                    "text": "GitHub Actions: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }}"\n                  }\n                },\n                {\n                  "type": "context",\n                  "elements": [\n                    {\n                      "type": "mrkdwn",\n                      "text": "Author: <https://github.com/${{ github.event.sender.login }}|@${{ github.event.sender.login }}>"\n                    }\n                  ]\n                }\n              ]\n            }\n        env:\n          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK\n          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_INCOMING_WEBHOOK_URL }}\n  on-failure:\n    runs-on: ubuntu-latest\n    if: ${{ github.event.workflow_run.conclusion == \'failure\' }}\n    steps:\n      - uses: actions/checkout@v2\n      - name: Send GitHub Action trigger data to Slack workflow\n        id: slack\n        uses: slackapi/slack-github-action@v1.23.0\n        with:\n          payload: |\n            {\n              "blocks": [\n                {\n                  "type": "section",\n                  "text": {\n                    "type": "mrkdwn",\n                    "text": "Build failed"\n                  }\n                },\n                {\n                  "type": "section",\n                  "text": {\n                    "type": "mrkdwn",\n                    "text": "GitHub Actions: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }}"\n                  }\n                },\n                {\n                  "type": "context",\n                  "elements": [\n                    {\n                      "type": "mrkdwn",\n                      "text": "Author: <https://github.com/${{ github.event.sender.login }}|@${{ github.event.sender.login }}>"\n                    }\n                  ]\n                }\n              ]\n            }\n        env:\n          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK\n          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_INCOMING_WEBHOOK_URL }}\n')),(0,o.kt)("p",null,"When the notification is successful, it will be sent to Slack as shown below.\n",(0,o.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/d9adc3954dad22ef61b39b7521f7f379.png?width=600","data-zoom-src":"https://t.gyazo.com/teams/diverta/d9adc3954dad22ef61b39b7521f7f379.png",alt:"Image from Gyazo"})))}u.isMDXComponent=!0}}]);