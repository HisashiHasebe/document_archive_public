"use strict";(self.webpackChunkkurokuro=self.webpackChunkkurokuro||[]).push([[578],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>b});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(a),u=r,b=d["".concat(l,".").concat(u)]||d[u]||h[u]||s;return a?n.createElement(b,i(i({ref:t},p),{},{components:a})):n.createElement(b,i({ref:t},p))}));function b(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,i=new Array(s);i[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[d]="string"==typeof e?e:r,i[1]=o;for(var c=2;c<s;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},5743:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var n=a(87462),r=(a(67294),a(3905));const s={date:new Date("2022-04-13T00:00:00.000Z"),title:"Differences Between Jamstack and Conventional Websites",description:"This section explains how websites built on Jamstack differ from conventional sites.",slug:"differences-between-jamstack-and-conventional-websites",authors:"diverta",hide_table_of_contents:!1},i=void 0,o={permalink:"/blog/differences-between-jamstack-and-conventional-websites",source:"@site/blog/differences-between-jamstack-and-conventional-websites.md",title:"Differences Between Jamstack and Conventional Websites",description:"This section explains how websites built on Jamstack differ from conventional sites.",date:"2022-04-13T00:00:00.000Z",formattedDate:"April 13, 2022",tags:[],readingTime:3.77,hasTruncateMarker:!0,authors:[{name:"Diverta",title:"Creator of Kuroco service",url:"https://www.diverta.co.jp",imageURL:"https://github.com/diverta.png",key:"diverta"}],frontMatter:{date:"2022-04-13T00:00:00.000Z",title:"Differences Between Jamstack and Conventional Websites",description:"This section explains how websites built on Jamstack differ from conventional sites.",slug:"differences-between-jamstack-and-conventional-websites",authors:"diverta",hide_table_of_contents:!1},prevItem:{title:"What is a Progressive Web App?",permalink:"/blog/what-is-a-progressive-web-app"},nextItem:{title:"Jamstack Architecture",permalink:"/blog/jamstack-architecture"}},l={authorsImageUrls:[void 0]},c=[{value:"What is a conventional website?",id:"what-is-a-conventional-website",level:2},{value:"Web (HTTP) server",id:"web-http-server",level:4},{value:"Application server",id:"application-server",level:4},{value:"Database server",id:"database-server",level:4},{value:"Similarities between conventional and Jamstack websites",id:"similarities-between-conventional-and-jamstack-websites",level:2},{value:"Differences between conventional and Jamstack websites",id:"differences-between-conventional-and-jamstack-websites",level:2},{value:"How conventional websites work",id:"how-conventional-websites-work",level:4},{value:"How Jamstack websites work",id:"how-jamstack-websites-work",level:3},{value:"Advantages of display processing by the web browser",id:"advantages-of-display-processing-by-the-web-browser",level:2},{value:"Kuroco Is Built with Enterprise-Grade Projects in Mind",id:"kuroco-is-built-with-enterprise-grade-projects-in-mind",level:2}],p={toc:c},d="wrapper";function h(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This section explains how websites built on Jamstack differ from conventional sites."),(0,r.kt)("h2",{id:"what-is-a-conventional-website"},"What is a conventional website?"),(0,r.kt)("p",null,"In this guide, a conventional website refers to one implemented with the following basic server architecture. There may be some variations depending on the specific case: for example, PHP websites have an integrated HTTP server and application server."),(0,r.kt)("h4",{id:"web-http-server"},"Web (HTTP) server"),(0,r.kt)("p",null,"Receives a request from a web browser and calls the application server. It then receives the HTML and returns it to the browser. Some web servers hold static content and return the HTML and images unchanged."),(0,r.kt)("h4",{id:"application-server"},"Application server"),(0,r.kt)("p",null,"Receives data from the web server and exchanges information with the database server. Subsequently, it generates the HTML and sends it to the web server."),(0,r.kt)("h4",{id:"database-server"},"Database server"),(0,r.kt)("p",null,"A database server stores the information on users, products, contents, etc. It returns the requested data when called by the application server."),(0,r.kt)("p",null,"Before the advent of web API-based sites, the above architecture was commonly implemented."),(0,r.kt)("h2",{id:"similarities-between-conventional-and-jamstack-websites"},"Similarities between conventional and Jamstack websites"),(0,r.kt)("p",null,"Conventional and Jamstack websites may look identical. When you visit a site in your browser, you may not be able to tell which one it is at first glance."),(0,r.kt)("h2",{id:"differences-between-conventional-and-jamstack-websites"},"Differences between conventional and Jamstack websites"),(0,r.kt)("p",null,"The main difference between the two is the task flow of the browser from the site visit to the content display."),(0,r.kt)("h4",{id:"how-conventional-websites-work"},"How conventional websites work"),(0,r.kt)("p",null,"A conventional website (e.g., CMS, e-commerce site) is displayed via the following process."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/fcf26a09cc3493b6585c147d090fcdf9.png",alt:"Image from Gyazo"})),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"The browser sends a request to the web server."),(0,r.kt)("li",{parentName:"ol"},"The application server and database server exchange information within the web server."),(0,r.kt)("li",{parentName:"ol"},"The application server generates the HTML using data."),(0,r.kt)("li",{parentName:"ol"},"The web server returns the HTML to the browser."),(0,r.kt)("li",{parentName:"ol"},"Finally, the browser displays the HTML.")),(0,r.kt)("p",null,"The browser and website engage in the above exchange each time you move to a different page."),(0,r.kt)("h3",{id:"how-jamstack-websites-work"},"How Jamstack websites work"),(0,r.kt)("p",null,"In contrast, a website built on Jamstack follows the mechanism below."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/986ebae6068ccbcc83d9eddbc489d18b.png",alt:"Image from Gyazo"})),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"The browser sends a request to the web server (typically a CDN)."),(0,r.kt)("li",{parentName:"ol"},"The web server (or CDN) returns the HTML to the browser."),(0,r.kt)("li",{parentName:"ol"},"The browser displays the HTML.")),(0,r.kt)("p",null,"The application server does not interact with the database or generate the HTML. Since no dynamic processing is involved, the system load is greatly reduced, and the website can display much faster. Moreover, the CDN also speeds up the content delivery and display."),(0,r.kt)("p",null,'The dynamic parts (e.g., payment, authentication, certain content types) are obtained through external services known as "microservices." Since they often provide very limited functionality, the browser usually calls multiple microservices as needed for a single website.'),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://t.gyazo.com/teams/diverta/c5485119b9f103fd4dbdeeaa3f6fc0cd.png",alt:"Image from Gyazo"})),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"The browser sends a request to the external service (microservice) API."),(0,r.kt)("li",{parentName:"ol"},"The external service returns the processing results to the browser."),(0,r.kt)("li",{parentName:"ol"},"The browser then rewrites the HTML according to the processing results.")),(0,r.kt)("p",null,"Unlike the case of a conventional website, the external service returns the data mostly as JSON (instead of HTML) to the web browser. The browser then displays the data using JavaScript."),(0,r.kt)("h2",{id:"advantages-of-display-processing-by-the-web-browser"},"Advantages of display processing by the web browser"),(0,r.kt)("p",null,"The difference between server-side HTML generation and display processing done by the browser lies in the display speed. For the browser, displaying HTML requires heavy processing, which includes interpreting the DOM, applying style sheets, and calculating the heights and widths of any images. This process is repeated with every single page transition, causing lags in the site display."),(0,r.kt)("p",null,"With Jamstack, only the data is returned, so display elements are replaced only where necessary. This eliminates the need to re-display the entire HTML and greatly improves the loading speed. Your UX (user experience) also improves with every click from one screen to another."),(0,r.kt)("p",null,"Furthermore, Jamstack eliminates the need for the server to generate HTML. Sites that require authentication often have trouble caching the generated HTML. However, with Jamstack, data that does not rely on user authentication (such as product lists) can be cached without any issues. This also helps to reduce the server load."),(0,r.kt)("h2",{id:"kuroco-is-built-with-enterprise-grade-projects-in-mind"},"Kuroco Is Built with Enterprise-Grade Projects in Mind"),(0,r.kt)("p",null,"Kuroco, the enterprise headless CMS, has all the serverless infrastructure your enterprise project would need to be highly scalable, secure, and performant."),(0,r.kt)("p",null,"Kuroco also allows you to ",(0,r.kt)("a",{parentName:"p",href:"/blog/api-management"},"configure your API")," with different paths containing different microservice endpoints for each frontend you have."),(0,r.kt)("p",null,"You can get started today and test it out for free, or feel free to ",(0,r.kt)("a",{parentName:"p",href:"https://hisashihasebe.github.io/document_archive_public/202401/docs/about/support/"},"reach out to our customer support team")," if you have any questions!"))}h.isMDXComponent=!0}}]);