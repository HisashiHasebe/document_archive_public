(self.webpackChunkkurokuro=self.webpackChunkkurokuro||[]).push([[75885],{49339:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>le});var o=t(39960),r=t(44996),a=t(85942),s=t(67294),i=t(94184),l=t.n(i),c=t(16550),u=t(95999),m=t(52263);const d={"kuroco-register":{ja:"\u30a2\u30ab\u30a6\u30f3\u30c8\u4f5c\u6210",en:"Create an account"},"kuroco-api-permission":{ja:"API\u6a29\u9650\u306e\u5909\u66f4",en:"Update API Permission"},"kuroco-check-auth-api":{ja:"\u8a8d\u8a3cAPI\u306e\u78ba\u8a8d",en:"Check Auth API"},"kuroco-check-content-api":{ja:"\u30b3\u30f3\u30c6\u30f3\u30c4API\u306e\u78ba\u8a8d",en:"Check Content API"},"kuroco-check-form-api":{ja:"\u30d5\u30a9\u30fc\u30e0\u7ba1\u7406API\u306e\u78ba\u8a8d",en:"Check Form API"},"next-install":{ja:"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb",en:"Install",links:[{ja:"Getting Started | Next.js",en:"Getting Started | Next.js",url:"https://nextjs.org/docs/getting-started"}]},"next-auth-state":{ja:"\u8a8d\u8a3c\u95a2\u9023\u6a5f\u80fd\u306e\u5b9f\u88c5",en:"Auth State",links:[{ja:"\u30b3\u30f3\u30c6\u30af\u30b9\u30c8 \u2013 React",en:"Context \u2013 React",url:"https://ja.reactjs.org/docs/context.html"}]},"next-install-packages":{ja:"\u95a2\u9023\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb",en:"Install",links:[{ja:"MUI: The React component library you always wanted",en:"MUI: The React component library you always wanted",url:"https://mui.com/"},{ja:"\u306f\u3058\u3081\u308b | React Hook Form - Simple React forms validation",en:"Get Started | React Hook Form - Simple React forms validation",url:"https://react-hook-form.com/get-started/"}]},"next-env":{ja:"\u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a",en:"Setting environment variables",links:[{ja:"\u57fa\u672c\u6a5f\u80fd\uff1a\u74b0\u5883\u5909\u6570| Next.js",en:"Basic Features: Environment Variables | Next.js",url:"https://nextjs.org/docs/basic-features/environment-variables"}]},"kuroco-cors-setting":{ja:"CORS\u8a2d\u5b9a",en:"CORS settings"},"next-create-register-form":{ja:"\u767b\u9332\u30d5\u30a9\u30fc\u30e0\u4f5c\u6210",en:"Create registration form"},"next-create-login-form":{ja:"\u30ed\u30b0\u30a4\u30f3\u30d5\u30a9\u30fc\u30e0\u4f5c\u6210",en:"Login form creation"},"kuroco-create-content":{ja:"\u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u4f5c\u6210",en:"Creating content",links:[{ja:"\u30b3\u30f3\u30c6\u30f3\u30c4\u5b9a\u7fa9",en:"Content structure",url:"/docs/management/content-structure-topics-group"}]},"kuroco-form-endpoint":{ja:"\u30d5\u30a9\u30fc\u30e0\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u4f5c\u6210",en:"Creating a form endpoint"},"next-content-list":{ja:"\u30b3\u30f3\u30c6\u30f3\u30c4\u4e00\u89a7\u306e\u8868\u793a",en:"Display content list"},"next-create-form":{ja:"\u30d5\u30a9\u30fc\u30e0\u5b9f\u88c5",en:"Form implementation"},"kuroco-preview-setting":{ja:"\u30d7\u30ec\u30d3\u30e5\u30fc\u8a2d\u5b9a",en:"Preview settings",links:[{ja:"\u30b3\u30f3\u30c6\u30f3\u30c4\u5b9a\u7fa9",en:"Content structure",url:"/docs/management/content-structure-topics-group/"}]},"next-content-preview":{ja:"\u30d7\u30ec\u30d3\u30e5\u30fc\u753b\u9762\u306e\u5b9f\u88c5",en:"preview"},"kuroco-front-setting":{ja:"KurocoFront\u3068GitHub\u306e\u9023\u643a",en:"Cooperation between KurocoFront and GitHub"},"next-deploy-config":{ja:"\u30c7\u30d7\u30ed\u30a4\u74b0\u5883\u69cb\u7bc9",en:"Deployment environment construction",links:[{ja:"kuroco_front.json\u3068\u306f\u4f55\u3067\u3059\u304b\uff1f",en:"What is kuroco_front.json?",url:"/docs/faq/what-is-kuroco_front_json/"},{ja:"GitHub Docs GitHub Actions \u306b\u3064\u3044\u3066\u5b66\u3076",en:"Learn GitHub Actions",url:"https://docs.github.com/actions/learn-github-actions"},{ja:"GitHub Docs GitHub Actions\u306e\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u69cb\u6587",en:"Workflow syntax for GitHub Actions",url:"https://docs.github.com/actions/reference/workflow-syntax-for-github-actions"}]}},p=(e,n)=>d[e][n],g=(0,s.createContext)({}),f=e=>{let{children:n}=e;const[t,o]=(0,s.useState)();return(0,s.useEffect)((()=>{const e=location.hash?.replace("#","");(e=>Object.keys(d).includes(e))(e)&&o(e)}),[]),s.createElement(g.Provider,{value:{task:t,setTask:o}},n)},h=()=>(0,s.useContext)(g),y=()=>localStorage.getItem("complete")?.split(",")||[];var x=t(68715),b=t(1984);const k=["kuroco","nextjs","github"],v={community:[{title:{ja:"\u74b0\u5883\u69cb\u7bc9",en:"Environment"},tool:{kuroco:["kuroco-register","kuroco-cors-setting"],nextjs:["next-install","next-env","next-install-packages"]}},{title:{ja:"\u8a8d\u8a3c\u6e96\u5099",en:"Auth State"},tool:{kuroco:["kuroco-check-auth-api"],nextjs:["next-auth-state"]}},{title:{ja:"\u65b0\u898f\u4f1a\u54e1\u767b\u9332\u753b\u9762\u306e\u4f5c\u6210",en:"Creating a new member registration screen"},tool:{kuroco:[],nextjs:["next-create-register-form"]}},{title:{ja:"\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u306e\u4f5c\u6210",en:"Creating a login screen"},tool:{kuroco:[],nextjs:["next-create-login-form"]}},{title:{ja:"\u30b3\u30f3\u30c6\u30f3\u30c4\u8868\u793a",en:"Content display"},tool:{kuroco:["kuroco-create-content","kuroco-preview-setting","kuroco-check-content-api"],nextjs:["next-content-list","next-content-preview"]}},{title:{ja:"\u30e6\u30fc\u30b6\u30fc\u6295\u7a3f",en:"User posts"},tool:{kuroco:["kuroco-check-form-api"],nextjs:["next-create-form"]}},{title:{ja:"\u516c\u958b",en:"Deploy"},tool:{kuroco:["kuroco-front-setting"],nextjs:["next-deploy-config"]}}]},E=e=>{let{title:n,TabIcon:t}=e;return s.createElement("div",{className:"px-4 justify-center flex items-center space-x-2 text-center"},t,s.createElement("span",{className:"block text-lg text-slate-700 dark:text-white font-medium"},n))},w=e=>{let{type:n,completeTasks:t}=e;const{setTask:o}=h(),a=(0,m.default)();return s.createElement("div",null,s.createElement("div",{className:"grid grid-cols-3 border-slate-300 border-solid border-0 gap-2 sticky z-10 top-0 py-4 border-b dark:border-gray-700"},s.createElement("div",null),s.createElement(E,{TabIcon:s.createElement("img",{className:"h-6 overflow-hidden rounded-full block",src:(0,r.Z)("/img/kuroco.png"),alt:""}),title:"Kuroco"}),s.createElement(E,{TabIcon:s.createElement(b.Z,{size:24}),title:"Next.js"})),s.createElement("div",{className:"divide-dashed divide-y divide-gray-400 dark:divide-gray-600"},v[n].map(((e,n)=>s.createElement("div",{className:"grid grid-cols-3 gap-2 border-0 py-6",key:n},s.createElement("h2",null,s.createElement("span",{className:"text-orange-600 font-bold text-base"},"STEP ",n+1),s.createElement("span",{className:"font-bold text-xl dark:text-white block"},e.title[a.i18n.currentLocale])),k.map((n=>s.createElement("div",{key:n,className:"space-y-2"},e.tool[n]?.map((e=>s.createElement("div",{onClick:()=>{o(e),location.hash=e},className:"flex cursor-pointer items-center text-slate-700 dark:text-white text-left space-x-2 w-full",key:e},s.createElement(x.Z,{className:l()("w-6 h-6",t?.includes(e)?"text-lime-500":"opacity-40")}),s.createElement("span",null,p(e,a.i18n.currentLocale)))))))))))))};var C=t(92949),S=t(44080),T=t(74361),F=t(44740),I=t(16896),L=t(86501),N=t(53854),A=t(87462),_=t(62435),j=t(74855),P=t(97084),R=t(31056),B=t(48507),q=t(49085),G=t(86032),U=t(1460),Z=t(73997),O=t(56365);const D=e=>{let{href:n,children:t}=e;const r=n?.match("^http"),a="string"==typeof t[0];return s.createElement(o.Z,{className:l()("text-indigo-600",!a&&"block w-max mx-auto max-w-full"),to:n},t,r&&a&&s.createElement(O.Z,{className:"inline-block w-3 h-3 text-indigo-400 align-top"}))};var K=t(79771),z=t(33772),H=t(45001);const M=e=>{let{node:{tagName:n},children:t}=e;const o={info:K.Z,warning:z.Z,important:H.Z}[n],r={info:{bg:"bg-blue-50",icon:"text-blue-400",text:"text-blue-700"},warning:{bg:"bg-yellow-50",icon:"text-yellow-400",text:"text-yellow-700"},important:{bg:"bg-red-50",icon:"text-red-400",text:"text-red-700"}}[n];return s.createElement("div",{className:`rounded-md not-prose p-4 ${r.bg}`},s.createElement("div",{className:"flex"},s.createElement("div",{className:"flex-shrink-0"},s.createElement(o,{className:`block h-5 w-5 ${r.icon}`,"aria-hidden":"true"})),s.createElement("div",{className:`ml-3 flex-1 text-base ${r.text}`},t)))};var X=t(55046),$=t(51836),Y=t(48570),V=t(74354),W=t(47757),J=t(8456);q.Z.registerLanguage("yml",$.Z),q.Z.registerLanguage("tsx",X.Z),q.Z.registerLanguage("ts",Y.Z),q.Z.registerLanguage("bash",V.Z),q.Z.registerLanguage("json",J.Z),q.Z.registerLanguage("diff",W.Z);const Q=e=>{let{data:n}=e;return s.createElement(P.D,{remarkPlugins:[U.Z,Z.Z,R.Z,B.Z],className:"prose prose-pre:p-0 lg:w-[1000px] dark:prose-invert prose-table:table prose-th:border-none prose-td:border-none prose-tr:border-t-0",components:{a(e){let{href:n,children:t}=e;return s.createElement(D,{href:n},t)},pre(e){let{children:n}=e;return s.createElement("pre",{className:"first:mt-0 last:mb-0 overflow-hidden shadow"},n)},info:M,warning:M,important:M,img(e){let{src:n}=e;return s.createElement("a",{href:n,target:"_blank"},s.createElement("img",{src:n,className:"mx-auto max-w-full rounded-md shadow overflow-hidden block",alt:""}))},code(e){let{node:n,inline:t,className:o,children:r,...a}=e;const i=/language-(\w+)/.exec(o||"")||"bash",l=o?.split(":")?.[1];return!t&&i?s.createElement("div",null,l&&s.createElement("div",{className:"bg-slate-700 border-b flex items-center justify-between border-black text-sm py-1.5 px-3 text-white"},s.createElement("span",{className:"text-slate-400"},l),s.createElement(j.CopyToClipboard,{onCopy:()=>L.ZP.success(s.createElement(u.Z,null,"Copied"),{position:"bottom-center"}),text:String(r)},s.createElement("button",{className:"bg-transparent p-0 border-none cursor-pointer"},s.createElement(_.Z,{className:"block w-5 h-5 text-slate-400"})))),s.createElement(q.Z,(0,A.Z)({style:G.Z,language:i[1],PreTag:"div",customStyle:{margin:0}},a),String(r).replace(/\n$/,""))):s.createElement("code",a,r)}}},n)},ee=e=>{let{id:n}=e;const o=(0,m.default)();try{const e=t(73590)(`./${o.i18n.currentLocale}/${n}.md`)?.default;return s.createElement("div",null,s.createElement(Q,{data:e}))}catch(r){return null}},ne=e=>{let{id:n}=e;const t=(0,s.useRef)(null);(0,s.useEffect)((()=>{if(t.current){const e=localStorage.getItem("playbackRate");t.current.defaultPlaybackRate=e?Number(e):2}}),[t.current]),(0,s.useEffect)((()=>{t.current&&t.current.load()}),[n]);const o=`/videos/${n}.mp4`;return s.createElement("video",{ref:t,loop:!0,autoPlay:!0,controlsList:"nodownload",controls:!0,className:"aspect-video bg-slate-800 w-full",onRateChange:e=>{const n=e.target.playbackRate;localStorage.setItem("playbackRate",String(n))}},s.createElement("source",{src:o}))},te=e=>{let{onComplete:n}=e;const t=(0,s.useRef)(null),r=(0,m.default)(),{colorMode:a}=(0,C.I)(),{task:i,setTask:c}=h(),g=d[i];const f=()=>{c(void 0);const e=window.location.toString();if(e.indexOf("#")>0){const n=e.substring(0,e.indexOf("#"));window.history.replaceState({},document.title,n)}};return s.createElement(S.u.Root,{show:Boolean(i),as:s.Fragment},s.createElement(T.V,{as:"div",className:l()("fixed z-[500] inset-0 overflow-y-auto","dark"===a&&"dark"),initialFocus:t,onClose:f},s.createElement(T.V.Overlay,{as:"div",className:"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0"},s.createElement(S.u.Child,{as:s.Fragment,enter:"ease-out duration-300",enterFrom:"opacity-0",enterTo:"opacity-100",leave:"ease-in duration-200",leaveFrom:"opacity-100",leaveTo:"opacity-0"},s.createElement("div",{className:"fixed inset-0 bg-slate-800 dark:bg-[#000] bg-opacity-75 dark:bg-opacity-75 transition-opacity pointer-events-none"})),s.createElement("span",{className:"hidden sm:inline-block sm:align-middle sm:h-screen","aria-hidden":"true"},"\u200b"),i&&s.createElement(S.u.Child,{as:s.Fragment,enter:"ease-out duration-300",enterFrom:"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95",enterTo:"opacity-100 translate-y-0 sm:scale-100",leave:"ease-in duration-200",leaveFrom:"opacity-100 translate-y-0 sm:scale-100",leaveTo:"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"},s.createElement("div",{className:"inline-block align-bottom bg-white dark:bg-slate-800 rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle"},(e=>d[e].video)(i)&&s.createElement(ne,{id:i}),s.createElement("div",null,s.createElement("div",{className:"xl:flex"},s.createElement("div",{className:"flex-1 px-4 pt-8 pb-4 sm:p-8"},s.createElement(T.V.Title,{as:"h3",className:"text-lg text-center leading-6 font-medium text-gray-900 dark:text-white"},p(i,r.i18n.currentLocale)),s.createElement("div",{className:"mt-3"},g.refs?.length&&s.createElement("div",{className:"text-base p-4 rounded bg-slate-100 mb-4"},s.createElement("p",{className:"mt-0 mb-0.5 text-slate-700"},s.createElement(u.Z,null,"Complete the following tasks.")),g.refs.map(((e,n)=>s.createElement("span",null,Boolean(n)&&",",s.createElement("a",{className:"cursor-pointer hover:underline",onClick:()=>c(e)},p(e,r.i18n.currentLocale)))))),s.createElement(ee,{id:i})),s.createElement("div",{className:"mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense"},(e=>y().includes(e))(i)?s.createElement("button",{type:"button",className:"w-full inline-flex cursor-pointer justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-gray-600 text-base font-medium text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 sm:col-start-2 sm:text-sm",onClick:()=>{if(i){const e=(e=>{const n=y().filter((n=>n!==e));return localStorage.setItem("complete",n.join(",")),n})(i);n(e)}}},s.createElement(u.Z,null,"Incomplete")):s.createElement("button",{type:"button",className:"w-full bg-orange-600 inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 text-base font-medium text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500 sm:col-start-2 sm:text-sm cursor-pointer hover:bg-orange-700",onClick:()=>{if(i){const e=(e=>{const n=y();n.push(e);const t=Array.from(new Set(n));return localStorage.setItem("complete",t.join(",")),t})(i);L.ZP.success(s.createElement(u.Z,null,"Completed!"),{position:"bottom-center"}),n(e)}},ref:t},s.createElement(u.Z,null,"Complete")),s.createElement("button",{type:"button",className:"mt-3 border-none hover:cursor-pointer w-full justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-slate-100 dark:bg-slate-700 dark:border-gray-900 dark:text-white text-base font-medium text-gray-700 hover:bg-gray-200 dark:hover:bg-slate-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500 sm:mt-0 sm:col-start-1 sm:text-sm",onClick:f},s.createElement(u.Z,null,"Close"))),s.createElement("div",{className:"items-center space-x-4 justify-end flex mt-4 text-gray-600 dark:text-white text-sm"},s.createElement("a",{href:"ja"===r.i18n.currentLocale?"/ja/docs/about/support/":"/docs/about/support/",target:"_blank",className:"flex items-center space-x-2 text-current hover:no-underline",rel:"noreferrer"},s.createElement(F.Z,{className:"w-4 h-4 inline"}),s.createElement("span",null,s.createElement(u.Z,null,"Question"))),r.siteConfig.customFields.dev&&s.createElement("a",{href:`vscode://file${r.siteConfig.customFields.projectPath}/tasks/${r.i18n.currentLocale}/${i}.md`,target:"_blank",className:"flex items-center space-x-2 text-current hover:no-underline",rel:"noreferrer"},s.createElement(I.Z,{className:"w-4 h-4 inline"}),s.createElement("span",null,s.createElement(u.Z,null,"Edit"))))),Boolean(g.links?.length)&&s.createElement("div",{className:"xl:w-96 px-8 py-8 bg-slate-100 dark:bg-slate-700"},s.createElement("h2",{className:"text-sm mb-3 text-slate-500 dark:text-white font-medium"},s.createElement(u.Z,null,"Documents")),g.links.map((e=>s.createElement("p",{className:"m-0",key:e.url},s.createElement(o.Z,{target:"_blank",to:e.url},s.createElement("span",{className:"flex-1"},e[r.i18n.currentLocale]),s.createElement(N.x9Z,{className:"w-4"})))))))))))))};var oe=t(97735);const re=e=>{let{step:n,index:t,completeTasks:o}=e;const a=Object.keys(n.tool),i=(0,m.default)(),{setTask:c}=h();return s.createElement("div",{className:"py-8 border-0"},s.createElement("h2",{className:"font-bold mt-0 mb-4 leading-none"},s.createElement("span",{className:"block text-sm text-orange-500"},"STEP ",t+1),s.createElement("span",{className:"block opacity-70 text-base"},n.title[i.i18n.currentLocale])),s.createElement("div",{className:"space-y-3"},a.map((e=>{const t=(e=>({icon:{nextjs:s.createElement(oe.Xou,{className:"block",size:24}),github:s.createElement(oe.pZu,{className:"block",size:24}),kuroco:s.createElement("img",{className:"h-6 overflow-hidden rounded-full block",src:(0,r.Z)("/img/kuroco.png"),alt:""})}[e],label:{nextjs:"Next.js",kuroco:"Kuroco",github:"GitHub"}[e]}))(e);return s.createElement("div",{className:"ml-2",key:e},s.createElement("h3",{className:"flex text-base text-slate-700 dark:text-white items-center space-x-1 font-medium"},t.icon,s.createElement("span",null,t.label)),s.createElement("ul",{className:"pl-0 list-none"},n.tool[e]?.map((e=>s.createElement("li",{key:e},s.createElement("div",{onClick:()=>{c(e),location.hash=e},className:"py-1 flex items-center space-x-1"},s.createElement(x.Z,{className:l()("w-5 h-5",o?.includes(e)?"text-lime-500":"opacity-20")}),s.createElement("span",null,p(e,i.i18n.currentLocale))))))))}))))},ae=e=>{let{type:n,completeTasks:t}=e;return s.createElement("div",{className:"divide-y divide-dashed divide-slate-300"},v[n].map(((e,n)=>s.createElement(re,{completeTasks:t,index:n,key:n,step:e}))))},se=e=>{let{open:n,onClose:t}=e;const{colorMode:o}=(0,C.I)(),r=(0,m.default)();return s.createElement(S.u.Root,{show:n,as:s.Fragment},s.createElement(T.V,{as:"div",className:l()("fixed z-[500] inset-0 overflow-y-auto","dark"===o&&"dark"),onClose:t},s.createElement(T.V.Overlay,{as:"div",className:"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0"},s.createElement(S.u.Child,{as:s.Fragment,enter:"ease-out duration-300",enterFrom:"opacity-0",enterTo:"opacity-100",leave:"ease-in duration-200",leaveFrom:"opacity-100",leaveTo:"opacity-0"},s.createElement("div",{className:"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity pointer-events-none"})),s.createElement("span",{className:"hidden sm:inline-block sm:align-middle sm:h-screen","aria-hidden":"true"},"\u200b"),s.createElement(S.u.Child,{as:s.Fragment,enter:"ease-out duration-300",enterFrom:"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95",enterTo:"opacity-100 translate-y-0 sm:scale-100",leave:"ease-in duration-200",leaveFrom:"opacity-100 translate-y-0 sm:scale-100",leaveTo:"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"},s.createElement("div",{className:"inline-block align-bottom bg-white dark:bg-slate-800 rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-7xl sm:w-full"},s.createElement("div",{className:"p-4"},s.createElement("iframe",{src:`https://www.youtube.com/embed/${"en"===r.i18n.currentLocale?"Zxk3dTGlG2w":"pZW8CvrAtCI"}?autoplay=1`,title:"YouTube video player",className:"aspect-video w-full block",allowFullScreen:!0,allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"})))))))},ie=e=>{let{title:n,description:t,scenes:o,type:a,demo:i}=e;const[l,d]=(0,s.useState)(),[p,g]=(0,s.useState)(!1),h=(0,c.k6)(),x=(0,m.default)();(0,s.useEffect)((()=>{d(y())}),[]);return s.createElement(f,null,s.createElement("div",{className:"relative bg-slate-100 dark:bg-transparent"},s.createElement("div",{className:"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"},s.createElement("div",{className:'opacity-5 dark:opacity-20 absolute inset-0 bg-repeat bg-[url("/img/hideout.svg")] bg-[length:40px]'}),s.createElement("div",{className:"py-10 lg:flex items-center relative z-10"},s.createElement("div",{onClick:()=>g(!0),className:"cursor-pointer overflow-hidden rounded-lg shadow-lg max-w-sm w-full mr-10 mb-4 lg:mb-0"},s.createElement("img",{src:(0,r.Z)(`/img/animation-guide-${x.i18n.currentLocale}.png`),className:"w-full aspect-video block"})),s.createElement(se,{open:p,onClose:()=>g(!1)}),s.createElement("div",{className:"flex-1"},s.createElement("p",{className:"mt-0 mb-3 bg-slate-100 dark:bg-transparent text-slate-500 dark:text-white dark:border-white inline-block px-2 py-1 border border-solid border-slate-400 dark:border-slate-700 text-sm"},s.createElement(u.Z,null,"Quickly grasp the construction image using Kuroco")),s.createElement("h1",null,s.createElement("strong",{className:"text-4xl mr-1 text-orange-600"},s.createElement(u.Z,null,"Membership system")),s.createElement("span",{className:"text-2xl block md:inline"},s.createElement(u.Z,null,"Quick guide"))),s.createElement("p",{className:"lg:text-xl text-base mt-3 lg:mt-6"},s.createElement(u.Z,null,"With Kuroco you can quickly create a membership site.")),s.createElement("button",{className:"text-sm bg-transparent border-none opacity-60 cursor-pointer",onClick:()=>{d((localStorage.removeItem("complete"),[]))}},s.createElement(u.Z,null,"Reset the completion status")))))),s.createElement("div",{className:"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8 w-full"},s.createElement("div",{className:"mb-20"},s.createElement("div",{className:"lg:block hidden"},s.createElement(w,{type:a,completeTasks:l})),s.createElement("div",{className:"block lg:hidden"},s.createElement(ae,{type:a,completeTasks:l})))),s.createElement(te,{onComplete:e=>{h.push("./",{scrollTopPosition:window.scrollY}),d(e)}}))},le=e=>{const n=(0,c.TH)();return(0,s.useEffect)((()=>{new URLSearchParams(n.search).get("id")}),[n.search]),s.createElement(a.Z,{title:"Next.js\u3067\u4f1a\u54e1\u30b5\u30a4\u30c8\u3092\u4f5c\u308b",description:"Next.js\u3068Kuroco\u3092\u4f7f\u3063\u3066\u4f1a\u54e1\u30b5\u30a4\u30c8\u3092\u3064\u304f\u308a\u307e\u3059",pageClassName:"base"},s.createElement(ie,{title:"xxxx",description:"xxx",scenes:[],type:"community",demo:{title:"aaa",description:"bbbb"}}))}},82161:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o='The login state is determined by whether the user can access the user profile. The default profile retrieval API has restricted access to user types, so we need to modify it to allow guest accounts to access the API.\n\nIn Kuroco admin panel > API > Default API > click [Update] for `/rcms-api/1/profile`, and add "Guest" to the "Authorization" section selector.\n\nThe API related to forms also has limited access rights by default, so follow the same procedure as above and add "Guest". The form-related APIs are as follows:\n\n- /rcms-api/1/inquiry/get /{inquiry_id}\n- /rcms-api/1/inquiry/1 \n\n![Image from Gyazo](https://t.gyazo.com/teams/diverta/9905ea7b5604b7c9f409b47d14cf352f.png)'},11664:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o="The following APIs are used for login and registration management, and are provided by default by Kuroco:\n\n- /rcms-api/1/member/register - Account registration\n- /rcms-api/1/login - Login\n- /rcms-api/1/logout - Logout\n- /rcms-api/1/profile - This API is originally for getting a profile, but it is used to confirm the login status.\n\nYou can create your own API and adjust its behavior and permissions as well.\n\n![Image from Gyazo](https://t.gyazo.com/teams/diverta/fc02a9f80fe50b5c980df7ab9f5ec935.png)"},80122:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o="The following APIs are used for content management. Confirm that Kuroco provides these APIs by default.\n\n- /rcms-api/1/content/list - Get a list of contents\n- /rcms-api/1/content/details/{topics_id} - Get a content article\n- /rcms-api/1/content/preview - Get preview content.\n\n![Image from Gyazo](https://t.gyazo.com/teams/diverta/a45e7fdbe10c44ce363f699ed951ab10.png)"},96884:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o="The following APIs are used for form management. Check them out as Kuroco provides them by default.\n\n- /rcms-api/1/inquiry/{inquiry_id} - Get form items\n- /rcms-api/1/inquiry/1 - Submit the form.\n\n![Image from Gyazo](https://t.gyazo.com/teams/diverta/3da8ad218fc41bd9f7a5826ad507a4ec.png)"},49145:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o="Click on [Add Origin] in [API] > [Set up CORS] and add `http://localhost:3000/`. Add **POST** to CORS_ALLOW_METHODS.\n\n![Image from Gyazo](https://t.gyazo.com/teams/diverta/2ec07e123d3db10407a0fc7d85125691.png)"},57774:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o="Click on [Content] > [Announcements] > [+Add] to add an announcement."},78352:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o='1. Prepare the repository that you want to deploy to KurocoFront on GitHub.\n2. Click [KurocoFront] > [GitHub] > [Authorize GitHub repository].\n3. You will be prompted to log in to GitHub. Log in to your GitHub account.\n4. Select the repository you want to connect from "Repository access", and click [Save].\n5. You will be prompted to log in to Kuroco again. Log in to Kuroco.\n\n---\n\nNote:\n\n- You can change the repository connection settings later.\n- If you are using multiple Kuroco with one account, you will need to select multiple repositories here.\n- You must have administrator privileges for the repository you are connecting to.\n\n![Image from Gyazo](https://t.gyazo.com/teams/diverta/7c8306518941576a4348550cc5e5e997.png)'},2650:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o='Go to [Content structure] and select [Announcement]. Set the "Front-end preview path" to `http://localhost:3000/preview`.'},34446:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o="Go to the [Kuroco Free Trial page](https://kuroco.app/free_trial/) and enter the required information to register. After registering, you can log in to the Kuroco admin panel using the URL provided in the email sent to you."},43760:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o="Create a `context/auth.tsx` file and implement the following content. This code includes functions for registration, login, logout, and management of login status.\n\n```tsx:context/auth.tsx\nimport { useRouter } from 'next/router';\nimport React, {\n  createContext,\n  FC,\n  ReactNode,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\n\nexport type RegistFormData = {\n  name1: string;\n  name2: string;\n  email: string;\n  login_pwd: string;\n};\n\ntype ContextTYpe = {\n  isLoggedIn?: boolean;\n  regist: (data: RegistFormData) => void;\n  logout: VoidFunction;\n  login: (email: string, password: string) => void;\n};\n\nconst AuthContext = createContext<ContextTYpe>({} as ContextTYpe);\n\nexport const AuthProvider: FC<{\n  children: ReactNode;\n}> = ({ children }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean | undefined>();\n  const router = useRouter();\n\n  const updateLoggedInStatus = () => {\n    fetch(process.env.NEXT_PUBLIC_BASE_URL + '/rcms-api/1/profile', {\n      method: 'GET',\n      credentials: 'include',\n    }).then((response) => {\n      setIsLoggedIn(response.status === 200);\n    });\n  };\n\n  const regist = (data: RegistFormData) => {\n    fetch(process.env.NEXT_PUBLIC_BASE_URL + '/rcms-api/1/member/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data) as string,\n    })\n      .then((response) => response.json())\n      .then((res) => {\n        if (res.errors.length) {\n          res.errors.map((error: any) => alert(error.message));\n        } else {\n          router.push('/signin');\n        }\n      });\n  };\n\n  const logout = () => {\n    fetch(process.env.NEXT_PUBLIC_BASE_URL + '/rcms-api/1/logout', {\n      method: 'POST',\n      credentials: 'include',\n    }).then(() => {\n      updateLoggedInStatus();\n    });\n  };\n\n  const login = (email: string, password: string) => {\n    fetch(process.env.NEXT_PUBLIC_BASE_URL + '/rcms-api/1/login', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        email,\n        password,\n      }) as string,\n    })\n      .then((response) => {\n        updateLoggedInStatus();\n        return response.json();\n      })\n      .then((res) => {\n        if (res.status !== 0) {\n          res.errors.map((error: any) => alert(error.message));\n        } else {\n          setTimeout(() => {\n            router.push('/news');\n          }, 500);\n        }\n      });\n  };\n\n  useEffect(() => {\n    updateLoggedInStatus();\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn, regist, logout, login }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n```\n\nTo use the above functions and states throughout the application, modify `pages/_app.tsx` as follows. Surround `<Component {...pageProps} />` with `<AuthProvider>`.\n\n```tsx:pages/_app.tsx\nimport '../styles/globals.css';\nimport type { AppProps } from 'next/app';\nimport { AuthProvider } from '../context/auth';\n\nfunction MyApp({ Component, pageProps }: AppProps) {\n  return (\n    <AuthProvider>\n      <Component {...pageProps} />\n    </AuthProvider>\n  );\n}\n\nexport default MyApp;\n```\n\nFinally, create an authentication guard for screens that require authentication. On screens that use this, unauthenticated users will be redirected to the login screen.\n\n```tsx:lib/use-require-auth.tsx\nimport { useRouter } from 'next/router';\nimport { useEffect } from 'react';\nimport { useAuth } from '../context/auth';\n\nconst useRequireAuth = () => {\n  const { isLoggedIn } = useAuth();\n  const { push } = useRouter();\n\n  useEffect(() => {\n    if (isLoggedIn === false) {\n      push('/signin');\n    }\n  }, [isLoggedIn, push]);\n\n  return isLoggedIn;\n};\n\nexport default useRequireAuth;\n```"},92529:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o="Please create a `pages/news.tsx` file and add the following code:\n\n```tsx:pages/news.tsx\nimport {\n  Box,\n  Card,\n  CardActionArea,\n  Grid,\n  Pagination,\n  Stack,\n  Typography,\n} from '@mui/material';\nimport CardMedia from '@mui/material/CardMedia';\nimport { format } from 'date-fns';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport React, { useEffect, useState } from 'react';\nimport useRequireAuth from '../lib/use-require-auth';\n\ntype Topic = {\n  topics_id: string;\n  subject: string;\n  inst_ymdhi: string;\n  ext_8: {\n    url: string;\n  };\n};\n\nconst News = () => {\n  const isLoggedIn = useRequireAuth();\n  const router = useRouter();\n  const [items, setItems] = useState<Topic[]>();\n  const [pageCount, setPageCount] = useState<number>();\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      return;\n    }\n\n    fetch(\n      ((process.env.NEXT_PUBLIC_BASE_URL +\n        '/rcms-api/1/content/list?pageID=' +\n        (router.query.page || '1')) as string),\n      {\n        method: 'GET',\n        credentials: 'include',\n      }\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        if (data.errors.length) {\n          return;\n        }\n        setItems(data.list);\n        setPageCount(data.pageInfo.totalPageCnt);\n      });\n  }, [isLoggedIn, router.query]);\n\n  if (!isLoggedIn) {\n    return null;\n  }\n\n  return (\n    <Stack spacing={2}>\n      <Typography variant=\"h5\" component=\"h1\">\n        News\n      </Typography>\n\n      <Box>\n        <Grid container spacing={3}>\n          {items?.map((item) => (\n            <Grid key={item.topics_id} item xs={4}>\n              <Card>\n                <Link href={`/news/${item.topics_id}`} passHref>\n                  <CardActionArea>\n                    <CardMedia\n                      component=\"img\"\n                      height=\"194\"\n                      image={item.ext_8.url}\n                      alt=\"\"\n                    />\n                    <Box\n                      sx={{\n                        p: 2,\n                      }}\n                    >\n                      <Typography>{item.subject}</Typography>\n                      <Typography>\n                        {format(new Date(item.inst_ymdhi), 'yyyy/MM/dd')}\n                      </Typography>\n                    </Box>\n                  </CardActionArea>\n                </Link>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n\n      <Pagination\n        onChange={(_, page) =>\n          router.push({\n            pathname: router.pathname,\n            query: {\n              page,\n            },\n          })\n        }\n        count={pageCount}\n      />\n    </Stack>\n  );\n};\n\nexport default News;\n```"},9591:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o="Please create a `pages/preview.tsx` file and add the following code:\n\n```tsx:pages/preview.tsx\nimport { Box, Stack, Typography } from '@mui/material';\nimport { useRouter } from 'next/router';\nimport React, { useEffect, useState } from 'react';\n\nconst Preview = () => {\n  const router = useRouter();\n  const [topic, setTopic] = useState<any>();\n\n  useEffect(() => {\n    const token = router.query.preview_token;\n\n    if (!token) {\n      return;\n    }\n\n    fetch(\n      process.env.NEXT_PUBLIC_BASE_URL +\n        '/rcms-api/1/content/preview?preview_token=' +\n        token,\n      {\n        method: 'GET',\n        credentials: 'include',\n      }\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        if (data.errors.length) {\n          return;\n        }\n        setTopic(data.details);\n      });\n  }, [router]);\n\n  if (!topic) {\n    return null;\n  }\n\n  return (\n    <Stack spacing={2}>\n      <Box\n        sx={{\n          background: '#333',\n          color: 'white',\n          p: 2,\n          borderRadius: '8px',\n        }}\n      >\n        Preview\n      </Box>\n      <Typography variant=\"h5\" component=\"h1\">\n        {topic.subject}\n      </Typography>\n      <Typography\n        dangerouslySetInnerHTML={{\n          __html: topic.contents,\n        }}\n      />\n    </Stack>\n  );\n};\n\nexport default Preview;\n```\n\nPlease access this page from the [Preview] link at the bottom of the announcement posting screen and confirm that the preview is displayed correctly."},60722:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o="Please create a `pages/contact.tsx` file and add the following code:\n\n```tsx:pages/contact.tsx\nimport {\n  Box,\n  Button,\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  FormLabel,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Stack,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { Controller, useForm, UseFormRegister } from 'react-hook-form';\nimport useRequireAuth from '../lib/use-require-auth';\n\ntype Form = {\n  cols: {\n    [key: string]: any;\n  };\n};\n\ntype FormData = {\n  [key: string]: any;\n};\n\nconst getField = (\n  register: UseFormRegister<FormData>,\n  name: string,\n  field: any,\n  control: any\n) => {\n  switch (field.type) {\n    case 1:\n    case 2:\n    case 4:\n      return (\n        <TextField\n          sx={{\n            width: '100%',\n          }}\n          label={field.title}\n          multiline={field.type === 2}\n          minRows={4}\n          select={field.type === 4}\n          required={field.required === 2}\n          autoComplete={name}\n          defaultValue=\"\"\n          {...register(name, {\n            required: field.required === 2,\n          })}\n          variant=\"outlined\"\n        >\n          {field.type === 4 &&\n            field.contents?.map((option: any) => (\n              <MenuItem value={option.key} key={option.key}>\n                {option.value || '-'}\n              </MenuItem>\n            ))}\n        </TextField>\n      );\n    case 3:\n      return (\n        <FormControl>\n          <FormLabel>{field.title}</FormLabel>\n          <RadioGroup>\n            {field.contents.map((option: any) => (\n              <FormControlLabel\n                key={option.key}\n                control={<Radio {...register(name)} />}\n                value={option.key}\n                label={option.value}\n                defaultChecked={option.default}\n              />\n            ))}\n          </RadioGroup>\n        </FormControl>\n      );\n    case 5:\n      return (\n        <FormControl>\n          <FormLabel>{field.title}</FormLabel>\n          <FormGroup>\n            <Controller\n              name={name}\n              control={control}\n              defaultValue={field.contents.filter((o: any) => o.default)}\n              render={({ field: rfField }) => (\n                <>\n                  {field.contents.map((option: any, index: number) => (\n                    <FormControlLabel\n                      key={option.key}\n                      control={\n                        <Checkbox\n                          checked={rfField.value.some(\n                            (f: string) => f === option.key\n                          )}\n                        />\n                      }\n                      onChange={(_, checked) => {\n                        if (checked) {\n                          rfField.onChange([...rfField.value, option.key]);\n                        } else {\n                          rfField.onChange(\n                            rfField.value.filter(\n                              (value: string) => value !== option.key\n                            )\n                          );\n                        }\n                      }}\n                      value={option.key}\n                      label={option.value}\n                    />\n                  ))}\n                </>\n              )}\n            />\n          </FormGroup>\n        </FormControl>\n      );\n  }\n};\n\nconst Contact = () => {\n  const isLoggedIn = useRequireAuth();\n  const [form, setForm] = useState<Form>();\n  const { register, handleSubmit, control } = useForm<FormData>();\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      return;\n    }\n\n    fetch(process.env.NEXT_PUBLIC_BASE_URL + '/rcms-api/1/inquiry/1', {\n      method: 'GET',\n      credentials: 'include',\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setForm(data?.details);\n      });\n  }, [isLoggedIn]);\n\n  const submit = (data: FormData) => {\n    fetch(process.env.NEXT_PUBLIC_BASE_URL + '/rcms-api/1/inquiry/1', {\n      method: 'POST',\n      credentials: 'include',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => response.json())\n      .then((res) => {\n        if (res.errors.length) {\n          res.errors.map((e: any) => alert(e.message));\n        } else {\n          alert('success');\n        }\n      });\n  };\n\n  if (!form || !isLoggedIn) {\n    return null;\n  }\n\n  return (\n    <Stack\n      spacing={2}\n      sx={{\n        mb: 5,\n      }}\n    >\n      <Typography variant=\"h5\" component=\"h1\">\n        Contact\n      </Typography>\n\n      <form onSubmit={handleSubmit(submit)}>\n        <Stack spacing={2}>\n          {Object.entries(form.cols)\n            .sort((a, b) => b[1].order_no - a[1].order_no)\n            .map(([name, field]) => (\n              <Box key={name}>{getField(register, name, field, control)}</Box>\n            ))}\n          <Box>\n            <Button type=\"submit\" variant=\"contained\">\n              Submit\n            </Button>\n          </Box>\n        </Stack>\n      </form>\n    </Stack>\n  );\n};\n\nexport default Contact;\n```\n\nOnce you have submitted the form from `http://localhost:3000/contact`, go to Kuroco admin panel > Campaigns > Form > [inquiryFormKurocoWebsite] > [Submissions] to confirm the submission result."},85173:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o='Please create a `pages/signin.tsx` file and add the following code:\n\n```tsx:pages/signin.tsx\nimport {\n  Box,\n  Button,\n  Card, Stack,\n  TextField,\n  Typography\n} from \'@mui/material\';\nimport React from \'react\';\nimport { useForm } from \'react-hook-form\';\nimport { useAuth } from \'../context/auth\';\n\ntype FormData = {\n  email: string;\n  password: string;\n};\n\nconst Signin = () => {\n  const { register, handleSubmit } = useForm<FormData>();\n  const { login } = useAuth();\n\n  const submit = (data: FormData) => {\n    login(data.email, data.password);\n  };\n\n  return (\n    <Card\n      sx={{\n        p: 5,\n      }}\n    >\n      <form onSubmit={handleSubmit(submit)}>\n        <Stack spacing={2}>\n          <Typography variant="h4" component="h1">\n            Sign In\n          </Typography>\n          <TextField\n            label="Email"\n            required\n            autoComplete="email"\n            {...register(\'email\', {\n              required: true,\n            })}\n            variant="outlined"\n          />\n          <TextField\n            type="password"\n            label="Password"\n            required\n            autoComplete="new-password"\n            {...register(\'password\', {\n              required: true,\n            })}\n            variant="outlined"\n          />\n          <Box>\n            <Button variant="contained" type="submit">\n              Sign In\n            </Button>\n          </Box>\n        </Stack>\n      </form>\n    </Card>\n  );\n};\n\nexport default Signin;\n```\n\nIf the registration form is displayed when you access `http://localhost:3000/signin/`, then you have completed the setup.'},89850:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o='Please create a `pages/signup.tsx` file and add the following code:\n\n```tsx:pages/signup.tsx\nimport {\n  Box,\n  Button,\n  Card,\n  Container,\n  Grid,\n  Stack,\n  TextField,\n  Typography,\n} from \'@mui/material\';\nimport React, { useEffect } from \'react\';\nimport { useForm } from \'react-hook-form\';\nimport { RegistFormData, useAuth } from \'../context/auth\';\n\nconst Signup = () => {\n  const { register, handleSubmit } = useForm<RegistFormData>();\n  const { regist } = useAuth();\n\n  const submit = (data: RegistFormData) => {\n    regist(data);\n  };\n\n  return (\n    <Card\n      sx={{\n        p: 5,\n      }}\n    >\n      <form onSubmit={handleSubmit(submit)}>\n        <Stack spacing={2}>\n          <Typography variant="h4" component="h1">\n            Sign Up\n          </Typography>\n          <TextField\n            label="First Name"\n            required\n            autoComplete="given-name"\n            {...register(\'name1\', {\n              required: true,\n            })}\n            variant="outlined"\n          />\n          <TextField\n            label="Last Name"\n            required\n            autoComplete="family-name"\n            {...register(\'name2\', {\n              required: true,\n            })}\n            variant="outlined"\n          />\n          <TextField\n            label="Email"\n            required\n            autoComplete="email"\n            {...register(\'email\', {\n              required: true,\n            })}\n            variant="outlined"\n          />\n          <TextField\n            type="password"\n            label="Password"\n            required\n            autoComplete="new-password"\n            {...register(\'login_pwd\', {\n              required: true,\n            })}\n            variant="outlined"\n          />\n          <Box>\n            <Button variant="contained" type="submit">\n              Sign Up\n            </Button>\n          </Box>\n        </Stack>\n      </form>\n    </Card>\n  );\n};\n\nexport default Signup;\n```\n\nIf the registration form is displayed when you access `http://localhost:3000/signup/`, then you have completed the setup.'},75383:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o='Please create a `static/kuroco_front.json` file and add the following code:\n\n```json:/static/kuroco_front.json\n{\n    "rewrites": [\n        {\n          "source": ".*",\n          "destination": "/index.html"\n        }\n      ],\n    "redirects": [],\n    "basic":[],\n    "ip_restrictions":[]\n}\n```\n\nNext, create a `.github/workflows/build.yml` file and paste the contents of the repository field from the KurocoFront screen. Then, replace the following parts:\n\n```yml\n# Add this description above jobs:\nenv:\n  NEXT_PUBLIC_BASE_URL: ${{secrets.NEXT_PUBLIC_BASE_URL}}\n\njobs:\n\n# Remove the following section.\n- name: Generate\n  run: npm run generate\n  # - name: Zip artifact for upload\n  #  run: cd dist && zip ../dist.zip . -r\n\n# Replace dist with out in the following.\npath: dist\n```\n\nPlease note that the above exists in **2 places** each, so be careful. In the GitHub repository settings, add `NEXT_PUBLIC_BASE_URL` to the Secret and enter the same value as `.env.local`.\n\nFinally, update the `build` command in `package.json` as follows:\n\n```json:package.json\n"build": "next build && next export"\n```\n\nOnce you have finished, push the repository. When the build is successfully completed in the GitHub Actions of the repository, open the site from the button at the bottom left of the Kuroco admin panel. From then on, it will be automatically published every time a Push or Pull Request is made to the main branch.'},66223:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o="Create a `.env.local` file and write NEXT_PUBLIC_BASE_URL in it. Replace the xxx part with the URL of the `API domain` on your Kuroco admin panel API page.\n\n```env:.env.local\nNEXT_PUBLIC_BASE_URL = xxx\n```\n\n![Image from Gyazo](https://t.gyazo.com/teams/diverta/901c4aee04e59b407fd6f5e9bb11cd58.png)\n\nBy managing NEXT_PUBLIC_BASE_URL as an environment variable, you can easily switch projects between development and production environments."},89509:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o="Install packages that assist UI implementation and form control. Run the following commands in the application directory:\n\n```bash:Terminal\nnpm install @mui/material @emotion/react @emotion/styled\nnpm install react-hook-form\nnpm install date-fns\n````"},15785:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o="```bash:Terminal\nnpx create-next-app@latest --typescript\n```\n\nSince you will be asked multiple questions, please set `Use App Router (recommended)? No / Yes` to `No` and leave the rest as the default by pressing Enter.\n\nOnce the installation is complete, let's start the development server with the following command.\n\n```bash:Terminal\ncd my-app\nnpm run dev\n```\n\nIf the site is displayed when you access `http://localhost:3000`, the setup is complete."},12968:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o='\u30ed\u30b0\u30a4\u30f3\u72b6\u614b\u306f\u201d\u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u304b\u201d\u306b\u3088\u3063\u3066\u5224\u5b9a\u3057\u307e\u3059\u3002\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u53d6\u5f97API\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u30e6\u30fc\u30b6\u30fc\u30bf\u30a4\u30d7\u304c\u5236\u9650\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u3053\u308c\u3092\u5909\u66f4\u3057\u3066\u30b2\u30b9\u30c8\u30a2\u30ab\u30a6\u30f3\u30c8\u304cAPI\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\nKuroco\u7ba1\u7406\u753b\u9762>API>Default API>`/rcms-api/1/profile `\u306e[\u66f4\u65b0]\u3092\u30af\u30ea\u30c3\u30af\u3057\u3001"\u8a8d\u8a3c"\u30bb\u30af\u30b7\u30e7\u30f3\u306e\u30bb\u30ec\u30af\u30bf\u304b\u3089"Guest"\u3092\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30d5\u30a9\u30fc\u30e0\u95a2\u9023\u306eAPI\u3082\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u6a29\u9650\u304c\u9650\u3089\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u4e0a\u8a18\u3068\u540c\u3058\u624b\u9806\u3067"Guest"\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u30d5\u30a9\u30fc\u30e0\u95a2\u9023API\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\n\n- /rcms-api/1/inquiry/get /{inquiry_id}\n- /rcms-api/1/inquiry/1 \n\n![](/ja/task-images/2022-04-20-05-50-47.png)'},8705:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o="\u30ed\u30b0\u30a4\u30f3\u3001\u767b\u9332\u7ba1\u7406\u306b\u306f\u4ee5\u4e0b\u306eAPI\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u305d\u308c\u305e\u308cKuroco\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n- /rcms-api/1/member/register - \u30a2\u30ab\u30a6\u30f3\u30c8\u767b\u9332\n- /rcms-api/1/login - \u30ed\u30b0\u30a4\u30f3\n- /rcms-api/1/logout - \u30ed\u30b0\u30a2\u30a6\u30c8\n- /rcms-api/1/profile - \u672c\u6765\u306f\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u53d6\u5f97\u3067\u3059\u304c\u30ed\u30b0\u30a4\u30f3\u72b6\u614b\u306e\u78ba\u8a8d\u306b\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\n\n\u81ea\u5206\u3067API\u3092\u4f5c\u308b\u3053\u3068\u3082\u3001API\u306e\u6319\u52d5\u3084\u6a29\u9650\u3092\u8abf\u6574\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n![](/ja/task-images/2022-04-20-06-01-13.png)"},97401:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o="\u30b3\u30f3\u30c6\u30f3\u30c4\u7ba1\u7406\u306b\u306f\u4ee5\u4e0b\u306eAPI\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u305d\u308c\u305e\u308cKuroco\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u7528\u610f\u3057\u3066\u3044\u308b\u306e\u3067\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002\n\n- /rcms-api/1/content/list - \u30b3\u30f3\u30c6\u30f3\u30c4\u4e00\u89a7\u306e\u53d6\u5f97\n- /rcms-api/1/content/details/{topics_id} - \u30b3\u30f3\u30c6\u30f3\u30c4\u8a18\u4e8b\u306e\u53d6\u5f97\n- /rcms-api/1/content/preview  - \u30d7\u30ec\u30d3\u30e5\u30fc\u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u53d6\u5f97\n\n![Image from Gyazo](https://t.gyazo.com/teams/diverta/d39bceac1ccea038003b8963d750a91b.png)"},36653:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o="\u30d5\u30a9\u30fc\u30e0\u7ba1\u7406\u306b\u306f\u4ee5\u4e0b\u306eAPI\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u305d\u308c\u305e\u308cKuroco\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u7528\u610f\u3057\u3066\u3044\u308b\u306e\u3067\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002\n\n- /rcms-api/1/inquiry/{inquiry_id} - \u30d5\u30a9\u30fc\u30e0\u9805\u76ee\u306e\u53d6\u5f97\n- /rcms-api/1/inquiry/1 - \u30d5\u30a9\u30fc\u30e0\u306e\u9001\u4fe1\n\n![Image from Gyazo](https://t.gyazo.com/teams/diverta/33f74d91c74aeb120d3c2fe26f17488b.png)"},45803:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o="[API]>[CORS\u3092\u8a2d\u5b9a\u3059\u308b] \u3067 CORS_ALLOW_ORIGINS \u306e [Add Origin] \u3092\u30af\u30ea\u30c3\u30af\u3057\u3001`http://localhost:3000/`\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002CORS_ALLOW_METHODS \u306b **POST** \u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n![](/ja/task-images/2022-04-20-05-35-38.png)"},84089:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o="\u30b3\u30f3\u30c6\u30f3\u30c4>\u304a\u77e5\u3089\u305b>[+\u8ffd\u52a0] \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u304a\u77e5\u3089\u305b\u3092\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002"},1101:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o='1. GitHub\u306b\u3066KurocoFront\u3078\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3044\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u6e96\u5099\u3057\u307e\u3059\u3002  \n2. [KurocoFront]>[GitHub] >[GitHub\u30ea\u30dd\u30b8\u30c8\u30ea\u3068\u63a5\u7d9a\u3059\u308b]\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\n3. GitHub\u3078\u30ed\u30b0\u30a4\u30f3\u304c\u6c42\u3081\u3089\u308c\u307e\u3059\u306e\u3067\u3001\u30ed\u30b0\u30a4\u30f3\u3092\u3057\u307e\u3059\u3002\n4. "Repository access"\u3088\u308a\u63a5\u7d9a\u3059\u308b\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u9078\u629e\u3057\u3001[Save]\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\n5. \u518d\u5ea6Kuroco\u3078\u306e\u30ed\u30b0\u30a4\u30f3\u3092\u6c42\u3081\u3089\u308c\u308b\u306e\u3067\u30ed\u30b0\u30a4\u30f3\u3092\u3057\u307e\u3059\u3002\n\n---\n\n\u30e1\u30e2\n\n- \u30ea\u30dd\u30b8\u30c8\u30ea\u63a5\u7d9a\u8a2d\u5b9a\u306f\u5f8c\u304b\u3089\u5909\u66f4\u304c\u53ef\u80fd\u3067\u3059\u3002\n- \uff11\u3064\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u8907\u6570\u306eKuroco\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3053\u3053\u3067\u8907\u6570\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002  \n- \u63a5\u7d9a\u3067\u304d\u308b\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u7ba1\u7406\u8005\u6a29\u9650\u3092\u6301\u3063\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n![](/ja/task-images/2022-04-20-06-13-20.png)'},59751:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o='\u30b3\u30f3\u30c6\u30f3\u30c4\u5b9a\u7fa9>[\u304a\u77e5\u3089\u305b] \u3068\u79fb\u52d5\u3057\u3001"\u30d7\u30ec\u30d3\u30e5\u30fc\u306e\u5bfe\u8c61\u3068\u3059\u308b\u30da\u30fc\u30b8\u306eURL" `http://localhost:3000/preview` \u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002'},4120:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o="[Kuroco Free Trial\u753b\u9762](https://kuroco.app/ja/free_trial/)\u306b\u9077\u79fb\u3057\u3001\u5fc5\u8981\u4e8b\u9805\u3092\u5165\u529b\u3057\u3066\u767b\u9332\u3057\u307e\u3059\u3002\u767b\u9332\u5f8c\u306b\u9001\u3089\u308c\u308b\u30e1\u30fc\u30eb\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308bURL\u3067Kuroco\u7ba1\u7406\u753b\u9762\u306b\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u307e\u3059\u3002"},90541:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o="`context/auth.tsx` \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u4ee5\u4e0b\u306e\u5185\u5bb9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\u3053\u306e\u30b3\u30fc\u30c9\u306b\u306f\u65b0\u898f\u767b\u9332\u3001\u30ed\u30b0\u30a4\u30f3\u3001\u30ed\u30b0\u30a2\u30a6\u30c8\u6a5f\u80fd\u306b\u52a0\u3048\u3001\u30ed\u30b0\u30a4\u30f3\u72b6\u614b\u306e\u7ba1\u7406\u3082\u542b\u307e\u308c\u307e\u3059\u3002\n\n```tsx:context/auth.tsx\nimport { useRouter } from 'next/router';\nimport React, {\n  createContext,\n  FC,\n  ReactNode,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\n\nexport type RegistFormData = {\n  name1: string;\n  name2: string;\n  email: string;\n  login_pwd: string;\n};\n\ntype ContextTYpe = {\n  isLoggedIn?: boolean;\n  regist: (data: RegistFormData) => void;\n  logout: VoidFunction;\n  login: (email: string, password: string) => void;\n};\n\nconst AuthContext = createContext<ContextTYpe>({} as ContextTYpe);\n\nexport const AuthProvider: FC<{\n  children: ReactNode;\n}> = ({ children }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean | undefined>();\n  const router = useRouter();\n\n  const updateLoggedInStatus = () => {\n    fetch(process.env.NEXT_PUBLIC_BASE_URL + '/rcms-api/1/profile', {\n      method: 'GET',\n      credentials: 'include',\n    }).then((response) => {\n      setIsLoggedIn(response.status === 200);\n    });\n  };\n\n  const regist = (data: RegistFormData) => {\n    fetch(process.env.NEXT_PUBLIC_BASE_URL + '/rcms-api/1/member/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data) as string,\n    })\n      .then((response) => response.json())\n      .then((res) => {\n        if (res.errors.length) {\n          res.errors.map((error: any) => alert(error.message));\n        } else {\n          router.push('/signin');\n        }\n      });\n  };\n\n  const logout = () => {\n    fetch(process.env.NEXT_PUBLIC_BASE_URL + '/rcms-api/1/logout', {\n      method: 'POST',\n      credentials: 'include',\n    }).then(() => {\n      updateLoggedInStatus();\n    });\n  };\n\n  const login = (email: string, password: string) => {\n    fetch(process.env.NEXT_PUBLIC_BASE_URL + '/rcms-api/1/login', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        email,\n        password,\n      }) as string,\n    })\n      .then((response) => {\n        updateLoggedInStatus();\n        return response.json();\n      })\n      .then((res) => {\n        if (res.status !== 0) {\n          res.errors.map((error: any) => alert(error.message));\n        } else {\n          setTimeout(() => {\n            router.push('/news');\n          }, 500);\n        }\n      });\n  };\n\n  useEffect(() => {\n    updateLoggedInStatus();\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn, regist, logout, login }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n```\n\n\u4e0a\u8a18\u306e\u6a5f\u80fd\u3084\u72b6\u614b\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u3067\u5229\u7528\u3059\u308b\u305f\u3081\u306b `pages/_app.tsx` \u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4fee\u6b63\u3057\u307e\u3059\u3002`<Component {...pageProps} />` \u3092 `<AuthProvider>` \u3067\u56f2\u3063\u3066\u3044\u307e\u3059\u3002\n\n```tsx:pages/_app.tsx\nimport '../styles/globals.css';\nimport type { AppProps } from 'next/app';\nimport { AuthProvider } from '../context/auth';\n\nfunction MyApp({ Component, pageProps }: AppProps) {\n  return (\n    <AuthProvider>\n      <Component {...pageProps} />\n    </AuthProvider>\n  );\n}\n\nexport default MyApp;\n```\n\n\u6700\u5f8c\u306b\u3001\u8a8d\u8a3c\u304c\u5fc5\u8981\u306a\u753b\u9762\u7528\u306b\u8a8d\u8a3c\u30ac\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3053\u308c\u3092\u4f7f\u7528\u3059\u308b\u753b\u9762\u3067\u306f\u672a\u8a8d\u8a3c\u30e6\u30fc\u30b6\u30fc\u304c\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```tsx:lib/use-require-auth.tsx\nimport { useRouter } from 'next/router';\nimport { useEffect } from 'react';\nimport { useAuth } from '../context/auth';\n\nconst useRequireAuth = () => {\n  const { isLoggedIn } = useAuth();\n  const { push } = useRouter();\n\n  useEffect(() => {\n    if (isLoggedIn === false) {\n      push('/signin');\n    }\n  }, [isLoggedIn, push]);\n\n  return isLoggedIn;\n};\n\nexport default useRequireAuth;\n```"},68334:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o="`pages/news.tsx` \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3001\u4ee5\u4e0b\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n```tsx:pages/news.tsx\nimport {\n  Box,\n  Card,\n  CardActionArea,\n  Grid,\n  Pagination,\n  Stack,\n  Typography,\n} from '@mui/material';\nimport CardMedia from '@mui/material/CardMedia';\nimport { format } from 'date-fns';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport React, { useEffect, useState } from 'react';\nimport useRequireAuth from '../lib/use-require-auth';\n\ntype Topic = {\n  topics_id: string;\n  subject: string;\n  inst_ymdhi: string;\n  ext_8: {\n    url: string;\n  };\n};\n\nconst News = () => {\n  const isLoggedIn = useRequireAuth();\n  const router = useRouter();\n  const [items, setItems] = useState<Topic[]>();\n  const [pageCount, setPageCount] = useState<number>();\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      return;\n    }\n\n    fetch(\n      ((process.env.NEXT_PUBLIC_BASE_URL +\n        '/rcms-api/1/content/list?pageID=' +\n        (router.query.page || '1')) as string),\n      {\n        method: 'GET',\n        credentials: 'include',\n      }\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        if (data.errors.length) {\n          return;\n        }\n        setItems(data.list);\n        setPageCount(data.pageInfo.totalPageCnt);\n      });\n  }, [isLoggedIn, router.query]);\n\n  if (!isLoggedIn) {\n    return null;\n  }\n\n  return (\n    <Stack spacing={2}>\n      <Typography variant=\"h5\" component=\"h1\">\n        News\n      </Typography>\n\n      <Box>\n        <Grid container spacing={3}>\n          {items?.map((item) => (\n            <Grid key={item.topics_id} item xs={4}>\n              <Card>\n                <Link href={`/news/${item.topics_id}`} passHref>\n                  <CardActionArea>\n                    <CardMedia\n                      component=\"img\"\n                      height=\"194\"\n                      image={item.ext_8.url}\n                      alt=\"\"\n                    />\n                    <Box\n                      sx={{\n                        p: 2,\n                      }}\n                    >\n                      <Typography>{item.subject}</Typography>\n                      <Typography>\n                        {format(new Date(item.inst_ymdhi), 'yyyy/MM/dd')}\n                      </Typography>\n                    </Box>\n                  </CardActionArea>\n                </Link>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n\n      <Pagination\n        onChange={(_, page) =>\n          router.push({\n            pathname: router.pathname,\n            query: {\n              page,\n            },\n          })\n        }\n        count={pageCount}\n      />\n    </Stack>\n  );\n};\n\nexport default News;\n```"},24254:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o="`pages/preview.tsx` \u3092\u4f5c\u6210\u3057\u3001\u4ee5\u4e0b\u306e\u5185\u5bb9\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n```tsx:pages/preview.tsx\nimport { Box, Stack, Typography } from '@mui/material';\nimport { useRouter } from 'next/router';\nimport React, { useEffect, useState } from 'react';\n\nconst Preview = () => {\n  const router = useRouter();\n  const [topic, setTopic] = useState<any>();\n\n  useEffect(() => {\n    const token = router.query.preview_token;\n\n    if (!token) {\n      return;\n    }\n\n    fetch(\n      process.env.NEXT_PUBLIC_BASE_URL +\n        '/rcms-api/1/content/preview?preview_token=' +\n        token,\n      {\n        method: 'GET',\n        credentials: 'include',\n      }\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        if (data.errors.length) {\n          return;\n        }\n        setTopic(data.details);\n      });\n  }, [router]);\n\n  if (!topic) {\n    return null;\n  }\n\n  return (\n    <Stack spacing={2}>\n      <Box\n        sx={{\n          background: '#333',\n          color: 'white',\n          p: 2,\n          borderRadius: '8px',\n        }}\n      >\n        \u30d7\u30ec\u30d3\u30e5\u30fc\n      </Box>\n      <Typography variant=\"h5\" component=\"h1\">\n        {topic.subject}\n      </Typography>\n      <Typography\n        dangerouslySetInnerHTML={{\n          __html: topic.contents,\n        }}\n      />\n    </Stack>\n  );\n};\n\nexport default Preview;\n```\n\n\u304a\u77e5\u3089\u305b\u6295\u7a3f\u753b\u9762\u4e0b\u90e8\u306b\u3042\u308b[\u30d7\u30ec\u30d3\u30e5\u30fc]\u306e\u30ea\u30f3\u30af\u304b\u3089\u3053\u306e\u753b\u9762\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3001\u6b63\u3057\u304f\u30d7\u30ec\u30d3\u30e5\u30fc\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"},79651:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o="`pages/contact.tsx` \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3001\u4ee5\u4e0b\u306e\u5185\u5bb9\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n```tsx:pages/contact.tsx\nimport {\n  Box,\n  Button,\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  FormLabel,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Stack,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { Controller, useForm, UseFormRegister } from 'react-hook-form';\nimport useRequireAuth from '../lib/use-require-auth';\n\ntype Form = {\n  cols: {\n    [key: string]: any;\n  };\n};\n\ntype FormData = {\n  [key: string]: any;\n};\n\nconst getField = (\n  register: UseFormRegister<FormData>,\n  name: string,\n  field: any,\n  control: any\n) => {\n  switch (field.type) {\n    case 1:\n    case 2:\n    case 4:\n      return (\n        <TextField\n          sx={{\n            width: '100%',\n          }}\n          label={field.title}\n          multiline={field.type === 2}\n          minRows={4}\n          select={field.type === 4}\n          required={field.required === 2}\n          autoComplete={name}\n          defaultValue=\"\"\n          {...register(name, {\n            required: field.required === 2,\n          })}\n          variant=\"outlined\"\n        >\n          {field.type === 4 &&\n            field.contents?.map((option: any) => (\n              <MenuItem value={option.key} key={option.key}>\n                {option.value || '-'}\n              </MenuItem>\n            ))}\n        </TextField>\n      );\n    case 3:\n      return (\n        <FormControl>\n          <FormLabel>{field.title}</FormLabel>\n          <RadioGroup>\n            {field.contents.map((option: any) => (\n              <FormControlLabel\n                key={option.key}\n                control={<Radio {...register(name)} />}\n                value={option.key}\n                label={option.value}\n                defaultChecked={option.default}\n              />\n            ))}\n          </RadioGroup>\n        </FormControl>\n      );\n    case 5:\n      return (\n        <FormControl>\n          <FormLabel>{field.title}</FormLabel>\n          <FormGroup>\n            <Controller\n              name={name}\n              control={control}\n              defaultValue={field.contents.filter((o: any) => o.default)}\n              render={({ field: rfField }) => (\n                <>\n                  {field.contents.map((option: any, index: number) => (\n                    <FormControlLabel\n                      key={option.key}\n                      control={\n                        <Checkbox\n                          checked={rfField.value.some(\n                            (f: string) => f === option.key\n                          )}\n                        />\n                      }\n                      onChange={(_, checked) => {\n                        if (checked) {\n                          rfField.onChange([...rfField.value, option.key]);\n                        } else {\n                          rfField.onChange(\n                            rfField.value.filter(\n                              (value: string) => value !== option.key\n                            )\n                          );\n                        }\n                      }}\n                      value={option.key}\n                      label={option.value}\n                    />\n                  ))}\n                </>\n              )}\n            />\n          </FormGroup>\n        </FormControl>\n      );\n  }\n};\n\nconst Contact = () => {\n  const isLoggedIn = useRequireAuth();\n  const [form, setForm] = useState<Form>();\n  const { register, handleSubmit, control } = useForm<FormData>();\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      return;\n    }\n\n    fetch(process.env.NEXT_PUBLIC_BASE_URL + '/rcms-api/1/inquiry/1', {\n      method: 'GET',\n      credentials: 'include',\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setForm(data?.details);\n      });\n  }, [isLoggedIn]);\n\n  const submit = (data: FormData) => {\n    fetch(process.env.NEXT_PUBLIC_BASE_URL + '/rcms-api/1/inquiry/1', {\n      method: 'POST',\n      credentials: 'include',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => response.json())\n      .then((res) => {\n        if (res.errors.length) {\n          res.errors.map((e: any) => alert(e.message));\n        } else {\n          alert('success');\n        }\n      });\n  };\n\n  if (!form || !isLoggedIn) {\n    return null;\n  }\n\n  return (\n    <Stack\n      spacing={2}\n      sx={{\n        mb: 5,\n      }}\n    >\n      <Typography variant=\"h5\" component=\"h1\">\n        Contact\n      </Typography>\n\n      <form onSubmit={handleSubmit(submit)}>\n        <Stack spacing={2}>\n          {Object.entries(form.cols)\n            .sort((a, b) => b[1].order_no - a[1].order_no)\n            .map(([name, field]) => (\n              <Box key={name}>{getField(register, name, field, control)}</Box>\n            ))}\n          <Box>\n            <Button type=\"submit\" variant=\"contained\">\n              Submit\n            </Button>\n          </Box>\n        </Stack>\n      </form>\n    </Stack>\n  );\n};\n\nexport default Contact;\n```\n\n`http://localhost:3000/contact` \u304b\u3089\u30d5\u30a9\u30fc\u30e0\u3092\u9001\u4fe1\u3057\u3001Kuroco\u7ba1\u7406\u753b\u9762>\u30ad\u30e3\u30f3\u30da\u30fc\u30f3>\u30d5\u30a9\u30fc\u30e0>[inquiryFormKurocoWebsite]>[\u56de\u7b54] \u3088\u308a\u9001\u4fe1\u7d50\u679c\u3092\u78ba\u8a8d\u3067\u304d\u305f\u3089\u5b8c\u4e86\u3067\u3059\u3002"},14848:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o='`pages/signin.tsx` \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3001\u4ee5\u4e0b\u3092\u8a18\u8f09\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```tsx:pages/signin.tsx\nimport {\n  Box,\n  Button,\n  Card, Stack,\n  TextField,\n  Typography\n} from \'@mui/material\';\nimport React from \'react\';\nimport { useForm } from \'react-hook-form\';\nimport { useAuth } from \'../context/auth\';\n\ntype FormData = {\n  email: string;\n  password: string;\n};\n\nconst Signin = () => {\n  const { register, handleSubmit } = useForm<FormData>();\n  const { login } = useAuth();\n\n  const submit = (data: FormData) => {\n    login(data.email, data.password);\n  };\n\n  return (\n    <Card\n      sx={{\n        p: 5,\n      }}\n    >\n      <form onSubmit={handleSubmit(submit)}>\n        <Stack spacing={2}>\n          <Typography variant="h4" component="h1">\n            Sign In\n          </Typography>\n          <TextField\n            label="Email"\n            required\n            autoComplete="email"\n            {...register(\'email\', {\n              required: true,\n            })}\n            variant="outlined"\n          />\n          <TextField\n            type="password"\n            label="Password"\n            required\n            autoComplete="new-password"\n            {...register(\'password\', {\n              required: true,\n            })}\n            variant="outlined"\n          />\n          <Box>\n            <Button variant="contained" type="submit">\n              Sign In\n            </Button>\n          </Box>\n        </Stack>\n      </form>\n    </Card>\n  );\n};\n\nexport default Signin;\n```\n\n`http://localhost:3000/signin/` \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u30ed\u30b0\u30a4\u30f3\u30d5\u30a9\u30fc\u30e0\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308c\u3070\u5b8c\u4e86\u3067\u3059\u3002'},6625:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o='`pages/signup.tsx` \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3001\u4e0b\u8a18\u30b3\u30fc\u30c9\u3092\u8a18\u8f09\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```tsx:pages/signup.tsx\nimport {\n  Box,\n  Button,\n  Card,\n  Container,\n  Grid,\n  Stack,\n  TextField,\n  Typography,\n} from \'@mui/material\';\nimport React, { useEffect } from \'react\';\nimport { useForm } from \'react-hook-form\';\nimport { RegistFormData, useAuth } from \'../context/auth\';\n\nconst Signup = () => {\n  const { register, handleSubmit } = useForm<RegistFormData>();\n  const { regist } = useAuth();\n\n  const submit = (data: RegistFormData) => {\n    regist(data);\n  };\n\n  return (\n    <Card\n      sx={{\n        p: 5,\n      }}\n    >\n      <form onSubmit={handleSubmit(submit)}>\n        <Stack spacing={2}>\n          <Typography variant="h4" component="h1">\n            Sign Up\n          </Typography>\n          <TextField\n            label="First Name"\n            required\n            autoComplete="given-name"\n            {...register(\'name1\', {\n              required: true,\n            })}\n            variant="outlined"\n          />\n          <TextField\n            label="Last Name"\n            required\n            autoComplete="family-name"\n            {...register(\'name2\', {\n              required: true,\n            })}\n            variant="outlined"\n          />\n          <TextField\n            label="Email"\n            required\n            autoComplete="email"\n            {...register(\'email\', {\n              required: true,\n            })}\n            variant="outlined"\n          />\n          <TextField\n            type="password"\n            label="Password"\n            required\n            autoComplete="new-password"\n            {...register(\'login_pwd\', {\n              required: true,\n            })}\n            variant="outlined"\n          />\n          <Box>\n            <Button variant="contained" type="submit">\n              Sign Up\n            </Button>\n          </Box>\n        </Stack>\n      </form>\n    </Card>\n  );\n};\n\nexport default Signup;\n```\n\n`http://localhost:3000/signup/` \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u767b\u9332\u30d5\u30a9\u30fc\u30e0\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308c\u3070\u5b8c\u4e86\u3067\u3059\u3002'},10406:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o='`static/kuroco_front.json` \u3092\u4f5c\u6210\u3057\u3001\u4ee5\u4e0b\u306e\u5185\u5bb9\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n```json:/static/kuroco_front.json\n{\n    "rewrites": [\n        {\n          "source": ".*",\n          "destination": "/index.html"\n        }\n      ],\n    "redirects": [],\n    "basic":[],\n    "ip_restrictions":[]\n}\n```\n\n\u6b21\u306b `.github/workflows/build.yml` \u3092\u4f5c\u6210\u3057\u3001KurocoFront\u753b\u9762\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5185\u5bb9\u3092\u8cbc\u308a\u4ed8\u3051\u3066\u304f\u3060\u3055\u3044\u3002\u305d\u306e\u5f8c\u3001\u4ee5\u4e0b\u306e\u7b87\u6240\u3092\u5dee\u3057\u66ff\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n```yml\n#jobs \u306e\u4e0a\u306b\u3053\u306e\u8a18\u8ff0\u3092\u8ffd\u52a0\nenv:\n  NEXT_PUBLIC_BASE_URL: ${{secrets.NEXT_PUBLIC_BASE_URL}}\n\njobs:\n\n# \u4ee5\u4e0b\u306e\u90e8\u5206\u3092\u524a\u9664\n- name: Generate\n  run: npm run generate\n  # - name: Zip artifact for upload\n  #  run: cd dist && zip ../dist.zip . -r\n\n# \u4ee5\u4e0b\u306e dist \u3092 out \u306b\u5dee\u3057\u66ff\u3048\npath: dist\n```\n\n\u4e0a\u8a18\u306f\u305d\u308c\u305e\u308c**2\u30f6\u6240**\u5b58\u5728\u3059\u308b\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002GitHub \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u8a2d\u5b9a\u753b\u9762\u3067 Secret \u306b `NEXT_PUBLIC_BASE_URL` \u3092\u8ffd\u52a0\u3057\u3001 `.env.local` \u3068\u540c\u3058\u5024\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u6700\u5f8c\u306b `package.json` \u306e `build` \u30b3\u30de\u30f3\u30c9\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f4\u65b0\u3057\u307e\u3059\u3002\n\n```json:package.json\n"build": "next build && next export"\n```\n\n\u3059\u3079\u3066\u7d42\u308f\u3063\u305f\u3089\u30ea\u30dd\u30b8\u30c8\u30ea\u3092Push\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30ea\u30dd\u30b8\u30c8\u30ea\u306eGitHub Actions\u3067\u30d3\u30eb\u30c9\u304c\u6b63\u5e38\u306b\u7d42\u4e86\u3057\u305f\u3089Kuroco\u7ba1\u7406\u753b\u9762\u5de6\u4e0b\u306e\u30dc\u30bf\u30f3\u304b\u3089\u30b5\u30a4\u30c8\u3092\u958b\u3044\u3066\u304f\u3060\u3055\u3044\u3002\u4ee5\u5f8cmain\u30d6\u30e9\u30f3\u30c1\u306bPush\u3084Pull Request\u304c\u884c\u308f\u308c\u308b\u305f\u3073\u306b\u81ea\u52d5\u7684\u306b\u516c\u958b\u3055\u308c\u307e\u3059\u3002'},25720:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o="`.env.local` \u3092\u4f5c\u6210\u3057\u3066NEXT_PUBLIC_BASE_URL\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002xxx\u306e\u90e8\u5206\u306f\u81ea\u8eab\u306eKuroco\u7ba1\u7406\u753b\u9762>API\u30da\u30fc\u30b8\u306b\u3042\u308b `API domain` \u306eURL\u306b\u5dee\u3057\u66ff\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n```env:.env.local\nNEXT_PUBLIC_BASE_URL = xxx\n```\n\n![Image (fetched from Gyazo)](https://t.gyazo.com/teams/diverta/360dc86299a0b93174753ad68ce82dd6.png)\nNEXT_PUBLIC_BASE_URL \u3092\u74b0\u5883\u5909\u6570\u3067\u7ba1\u7406\u3059\u308b\u3053\u3068\u3067\u958b\u767a\u74b0\u5883\u3084\u672c\u756a\u74b0\u5883\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u7c21\u5358\u306b\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"},35370:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o="UI\u5b9f\u88c5\u3084\u30d5\u30a9\u30fc\u30e0\u5236\u5fa1\u3092\u652f\u63f4\u3059\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```bash:\u30bf\u30fc\u30df\u30ca\u30eb\nnpm install @mui/material @emotion/react @emotion/styled @mui/icons-material\nnpm install react-hook-form\nnpm install date-fns\n````"},74833:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});const o="```bash:\u30bf\u30fc\u30df\u30ca\u30eb\nnpx create-next-app@latest --typescript\n```\n\n\u8907\u6570\u306e\u8cea\u554f\u3092\u805e\u304b\u308c\u308b\u306e\u3067`Use App Router (recommended)? No / Yes`\u306e\u307f`No`\u306b\u8a2d\u5b9a\u3057\u3001\u4ed6\u306f\u5168\u3066\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u307e\u307e Enter \u3067\u56de\u7b54\u3057\u307e\u3059\u3002\n\u203b\u672c\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306fapp\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u7d42\u308f\u3063\u305f\u3089\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u958b\u767a\u30b5\u30fc\u30d0\u30fc\u3092\u7acb\u3061\u4e0a\u3052\u307e\u3057\u3087\u3046\u3002\n\n```bash:\u30bf\u30fc\u30df\u30ca\u30eb\ncd my-app\nnpm run dev\n```\n\n`http://localhost:3000` \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u30b5\u30a4\u30c8\u304c\u8868\u793a\u304c\u3055\u308c\u3066\u3044\u308c\u3070\u5b8c\u4e86\u3067\u3059\u3002"},73590:(e,n,t)=>{var o={"./en/kuroco-api-permission.md":82161,"./en/kuroco-check-auth-api.md":11664,"./en/kuroco-check-content-api.md":80122,"./en/kuroco-check-form-api.md":96884,"./en/kuroco-cors-setting.md":49145,"./en/kuroco-create-content.md":57774,"./en/kuroco-front-setting.md":78352,"./en/kuroco-preview-setting.md":2650,"./en/kuroco-register.md":34446,"./en/next-auth-state.md":43760,"./en/next-content-list.md":92529,"./en/next-content-preview.md":9591,"./en/next-create-form.md":60722,"./en/next-create-login-form.md":85173,"./en/next-create-register-form.md":89850,"./en/next-deploy-config.md":75383,"./en/next-env.md":66223,"./en/next-install-packages.md":89509,"./en/next-install.md":15785,"./ja/kuroco-api-permission.md":12968,"./ja/kuroco-check-auth-api.md":8705,"./ja/kuroco-check-content-api.md":97401,"./ja/kuroco-check-form-api.md":36653,"./ja/kuroco-cors-setting.md":45803,"./ja/kuroco-create-content.md":84089,"./ja/kuroco-front-setting.md":1101,"./ja/kuroco-preview-setting.md":59751,"./ja/kuroco-register.md":4120,"./ja/next-auth-state.md":90541,"./ja/next-content-list.md":68334,"./ja/next-content-preview.md":24254,"./ja/next-create-form.md":79651,"./ja/next-create-login-form.md":14848,"./ja/next-create-register-form.md":6625,"./ja/next-deploy-config.md":10406,"./ja/next-env.md":25720,"./ja/next-install-packages.md":35370,"./ja/next-install.md":74833};function r(e){var n=a(e);return t(n)}function a(e){if(!t.o(o,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return o[e]}r.keys=function(){return Object.keys(o)},r.resolve=a,e.exports=r,r.id=73590}}]);