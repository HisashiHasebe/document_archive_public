"use strict";(self.webpackChunkkurokuro=self.webpackChunkkurokuro||[]).push([[77282],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>v});var s=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,s)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,s,a=function(e,t){if(null==e)return{};var r,s,a={},n=Object.keys(e);for(s=0;s<n.length;s++)r=n[s],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(s=0;s<n.length;s++)r=n[s],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=s.createContext({}),c=function(e){var t=s.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=c(e.components);return s.createElement(l.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},h=s.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(r),h=a,v=d["".concat(l,".").concat(h)]||d[h]||p[h]||n;return r?s.createElement(v,o(o({ref:t},u),{},{components:r})):s.createElement(v,o({ref:t},u))}));function v(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,o=new Array(n);o[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:a,o[1]=i;for(var c=2;c<n;c++)o[c]=r[c];return s.createElement.apply(null,o)}return s.createElement.apply(null,r)}h.displayName="MDXCreateElement"},70368:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>n,metadata:()=>i,toc:()=>c});var s=r(87462),a=(r(67294),r(3905));const n={date:new Date("2022-04-08T00:00:00.000Z"),title:"Serverless",description:"A brief introduction to Serverless",slug:"serverless",authors:"diverta",hide_table_of_contents:!1},o=void 0,i={permalink:"/blog/serverless",source:"@site/blog/serverless.md",title:"Serverless",description:"A brief introduction to Serverless",date:"2022-04-08T00:00:00.000Z",formattedDate:"April 8, 2022",tags:[],readingTime:4.54,hasTruncateMarker:!0,authors:[{name:"Diverta",title:"Creator of Kuroco service",url:"https://www.diverta.co.jp",imageURL:"https://github.com/diverta.png",key:"diverta"}],frontMatter:{date:"2022-04-08T00:00:00.000Z",title:"Serverless",description:"A brief introduction to Serverless",slug:"serverless",authors:"diverta",hide_table_of_contents:!1},prevItem:{title:"Jamstack",permalink:"/blog/jamstack"},nextItem:{title:"WAF",permalink:"/blog/waf"}},l={authorsImageUrls:[void 0]},c=[{value:"Overview",id:"overview",level:2},{value:"Serverless Functions",id:"serverless-functions",level:3},{value:"Jamstack and Serverless",id:"jamstack-and-serverless",level:2},{value:"A Note on &#39;Cold Starts&#39; with Serverless Functions",id:"a-note-on-cold-starts-with-serverless-functions",level:3},{value:"Examples of Serverless Functions Used in Jamstack",id:"examples-of-serverless-functions-used-in-jamstack",level:2},{value:"Where can I host my serverless app?",id:"where-can-i-host-my-serverless-app",level:3},{value:"Kuroco, the Enterprise Headless CMS, comes with serverless architecture built right in:",id:"kuroco-the-enterprise-headless-cms-comes-with-serverless-architecture-built-right-in",level:2},{value:"Related Articles",id:"related-articles",level:2}],u={toc:c},d="wrapper";function p(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,s.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"A brief introduction to Serverless"),(0,a.kt)("img",{src:"/files/user/img/blog/Kuroco_Serverless_Web_Api_System.svg",alt:"Kuroco Serverless"}),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"'Serverless' is a type of cloud-based systems architecture focused on providing ready-to-use, scalable backend resources on demand. Serverless does not mean that no servers are being used (i.e. behind the scenes), but rather that as a developer - particularly one focused on the front-end - you do not need to worry about creating, writing code for, or maintaining a server on the backend."),(0,a.kt)("p",null,"Traditionally, businesses would have to set up and maintain additional servers to keep up with increased demand over time, which is costly and time consuming. With enterprise-grade server clusters available from cloud providers like AWS, Google, Microsoft, and many other companies, backend resources are now widely available for any business to tap into online."),(0,a.kt)("p",null,"While serverless is technically a backend solution, its main use case is automating the backend to allow developers to focus more on the frontend."),(0,a.kt)("h3",{id:"serverless-functions"},"Serverless Functions"),(0,a.kt)("p",null,"\u2018Serverless\u2019 is also the name of a popular open-source framework built in Node.js, which deploys to AWS. The basis of this framework is that frontend applications can be powered by AWS Lambda functions, the largest \u201cfunctions as a service\u201d (FaaS) provider. FaaS providers (including AWS and many others on the market) allow frontend software to use functions similar to what would normally be called server-side (for example, when handling API calls to fetch secure data with a token that cannot be stored in the browser)."),(0,a.kt)("p",null,"A serverless framework, combined with FaaS, is potentially a much cheaper solution than running dedicated servers full-time. FaaS usage is only charged per function called, resulting in less overhead during times of low demand."),(0,a.kt)("h2",{id:"jamstack-and-serverless"},"Jamstack and Serverless"),(0,a.kt)("p",null,"The Jamstack (or JAMstack) stands for: ",(0,a.kt)("strong",{parentName:"p"},"J"),"avaScript, ",(0,a.kt)("strong",{parentName:"p"},"A"),"PIs, and ",(0,a.kt)("strong",{parentName:"p"},"M"),"arkup. This is one of the newer web development stacks, with the goal of making websites and apps easier and cheaper to host and serve to clients, as well as simpler for developers to build."),(0,a.kt)("p",null,"Traditionally, when a front-end application is built, developers will need to connect it to a backend (typically built in Ruby-on-Rails, PHP, Node.js, or other backend languages). With Jamstack, however, front-end developers can instead simply include serverless functions in the source code of their application, and a hosting service provider can handle that functionality (this is considered the \u2018serverless\u2019 way)."),(0,a.kt)("p",null,"Once again, the main advantage to this approach is that these serverless functions can automatically scale up or scale down capacity, depending on usage."),(0,a.kt)("h3",{id:"a-note-on-cold-starts-with-serverless-functions"},"A Note on 'Cold Starts' with Serverless Functions"),(0,a.kt)("p",null,"In some cases, if a serverless app is unused for an extended period, the FaaS may not respond to requests as quickly as a dedicated server would, but in most cases this is a minor trade-off, with little (or no) effect on performance. For larger apps with high amounts of traffic, the serverless functions will be constantly active and able to scale instantly on demand."),(0,a.kt)("p",null,"One issue to be aware of is that on some cloud platforms unused serverless functions may be set to \u2018idle\u2019 and require a \u2018cold start\u2019 when used again, which can result in slightly slower reaction speeds. This issue does not occur if the application and its functions are being used regularly."),(0,a.kt)("h2",{id:"examples-of-serverless-functions-used-in-jamstack"},"Examples of Serverless Functions Used in Jamstack"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Making API calls to fetch data server-side, before serving the static HTML files to the browser. While Jamstack is often associated with serving static sites from a CDN, it is possible to add dynamic functionality using serverless functions."),(0,a.kt)("li",{parentName:"ul"},"Handling authorization. While it is possible to store JSON web tokens (JWTs) in the browser, it is still necessary to generate the bearer tokens server-side (they cannot be stored in the browser due to obvious security vulnerabilities). Rather than building out your own backend server for this, it can be handled by the host using serverless functions."),(0,a.kt)("li",{parentName:"ul"},"Contact Forms or Email Notifications. Handling forms (ex. a user enters their name, email, and message, and submits it - which would cause that information to be emailed to you) directly on a static site can require a lot of JavaScript overhead that could make the page bulky and more expensive to load in the user\u2019s browser. Instead, that functionality can be put into a serverless function, run on the host in the serverless backend, and triggered by the user\u2019s action on the front-end.")),(0,a.kt)("h3",{id:"where-can-i-host-my-serverless-app"},"Where can I host my serverless app?"),(0,a.kt)("p",null,"The biggest cloud providers include AWS, Google Cloud, and Azure, providing mainly infrastructure-as-a-service (IaaS) and platform-as-a-service (PaaS) offerings. However, configuration on these platforms can be difficult to set up and will usually still require backend developers to set up and maintain."),(0,a.kt)("p",null,"Hosting platforms like Netlify, Vercel, as well as headless CMS platforms like Kuroco, can make this process much easier and include a lot of the desired \u2018serverless\u2019 functionality most developers need out-of-the-box."),(0,a.kt)("h2",{id:"kuroco-the-enterprise-headless-cms-comes-with-serverless-architecture-built-right-in"},"Kuroco, the Enterprise Headless CMS, comes with serverless architecture built right in:"),(0,a.kt)("p",null,"Kuroco is a headless CMS that comes with all the serverless functionality you need for focusing on frontend development. For frontend developers, we provide a powerful API management tool that can connect with virtually any backend systems your enterprise has available - and serve up the data you need to be consumed on the client-side."),(0,a.kt)("p",null,"For content creators and marketers on your team, our headless CMS allows content to be created and published with ease, to any front end interfaces your app is facing."),(0,a.kt)("h2",{id:"related-articles"},"Related Articles"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/blog/jamstack-and-serverless"},"Jamstack and Serverless"))))}p.isMDXComponent=!0}}]);